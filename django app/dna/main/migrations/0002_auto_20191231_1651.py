# Generated by Django 3.0.1 on 2019-12-31 15:51

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Algoresult',
            fields=[
                ('algo_result_id', models.IntegerField(primary_key=True, serialize=False)),
                ('student_id', models.BigIntegerField(blank=True, null=True)),
                ('algo1_exam', models.CharField(blank=True, max_length=10, null=True)),
                ('algo1_td', models.CharField(blank=True, max_length=10, null=True)),
                ('algo1_tp', models.CharField(blank=True, max_length=10, null=True)),
                ('algo1_avg', models.FloatField(blank=True, null=True)),
                ('algo2_exam', models.CharField(blank=True, max_length=10, null=True)),
                ('algo2_td', models.CharField(blank=True, max_length=10, null=True)),
                ('algo2_tp', models.CharField(blank=True, max_length=10, null=True)),
                ('algo2_avg', models.FloatField(blank=True, null=True)),
                ('scholar_year', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'algoresult',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bac',
            fields=[
                ('tempd_id', models.IntegerField(primary_key=True, serialize=False)),
                ('bac_id', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('student_id', models.BigIntegerField(blank=True, null=True)),
                ('bac_year', models.IntegerField(blank=True, null=True)),
                ('highshcool_path', models.CharField(blank=True, max_length=10, null=True)),
                ('bac_avg', models.FloatField(blank=True, null=True)),
                ('bac_feedback', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'bac',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BacPath',
            fields=[
                ('path_id', models.AutoField(primary_key=True, serialize=False)),
                ('path_name', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'bac_path',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bactodb',
            fields=[
                ('bac_to_db_id', models.IntegerField(primary_key=True, serialize=False)),
                ('student_id', models.BigIntegerField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=1, null=True)),
                ('level', models.FloatField(blank=True, null=True)),
                ('repeated', models.CharField(blank=True, max_length=5, null=True)),
                ('status', models.CharField(blank=True, max_length=7, null=True)),
                ('study_path', models.CharField(blank=True, max_length=10, null=True)),
                ('scholar_year', models.FloatField(blank=True, null=True)),
                ('bac_id', models.CharField(blank=True, max_length=10, null=True)),
                ('bac_year', models.CharField(blank=True, max_length=10, null=True)),
                ('bac_path', models.CharField(blank=True, max_length=10, null=True)),
                ('bac_feedback', models.CharField(blank=True, max_length=10, null=True)),
                ('bac_avg', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bactodb',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Courseprofile',
            fields=[
                ('course_profile_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('course_id', models.CharField(blank=True, max_length=10, null=True)),
                ('path_id', models.CharField(blank=True, max_length=10, null=True)),
                ('date_id', models.BigIntegerField(blank=True, null=True)),
                ('m_avg', models.FloatField(blank=True, null=True)),
                ('f_avg', models.FloatField(blank=True, null=True)),
                ('bestm_avg', models.FloatField(blank=True, null=True)),
                ('bestf_avg', models.FloatField(blank=True, null=True)),
                ('admis_number', models.IntegerField(blank=True, null=True)),
                ('student_number', models.IntegerField(blank=True, null=True)),
                ('m_admis_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'courseprofile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('cours_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('cours_name', models.CharField(blank=True, max_length=50, null=True)),
                ('coef', models.CharField(blank=True, max_length=20, null=True)),
                ('level', models.CharField(blank=True, max_length=20, null=True)),
                ('semestre', models.CharField(blank=True, max_length=20, null=True)),
                ('study_level', models.CharField(blank=True, max_length=20, null=True)),
                ('study_field', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'courses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Performance',
            fields=[
                ('performance_id', models.AutoField(primary_key=True, serialize=False)),
                ('student_id', models.BigIntegerField(blank=True, null=True)),
                ('cours_id', models.CharField(blank=True, max_length=20, null=True)),
                ('exam', models.CharField(blank=True, max_length=10, null=True)),
                ('td', models.CharField(blank=True, max_length=10, null=True)),
                ('tp', models.CharField(blank=True, max_length=10, null=True)),
                ('cours_avg', models.FloatField(blank=True, null=True)),
                ('date_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'performance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Results',
            fields=[
                ('result_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('student_id', models.BigIntegerField(blank=True, null=True)),
                ('bac_id', models.CharField(blank=True, max_length=50, null=True)),
                ('scholar_year', models.IntegerField(blank=True, null=True)),
                ('bac_year', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'results',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Scholaryear',
            fields=[
                ('year_id', models.IntegerField(primary_key=True, serialize=False)),
                ('scholar_year', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'scholaryear',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('temps_id', models.IntegerField(primary_key=True, serialize=False)),
                ('student_id', models.BigIntegerField(unique=True)),
                ('birthday', models.CharField(blank=True, max_length=50, null=True)),
                ('gender', models.CharField(blank=True, max_length=1, null=True)),
                ('nationnality', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'student',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Studentadress',
            fields=[
                ('adress_id', models.IntegerField(primary_key=True, serialize=False)),
                ('student_id', models.BigIntegerField()),
                ('adresse', models.CharField(blank=True, max_length=75, null=True)),
            ],
            options={
                'db_table': 'studentadress',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Studentinfo',
            fields=[
                ('info_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('student_id', models.BigIntegerField(blank=True, null=True)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('repeated', models.CharField(blank=True, max_length=25, null=True)),
                ('group', models.IntegerField(blank=True, null=True)),
                ('section', models.IntegerField(blank=True, null=True)),
                ('study_level', models.CharField(blank=True, max_length=25, null=True)),
                ('study_field', models.CharField(blank=True, max_length=25, null=True)),
                ('scholar_year', models.IntegerField(blank=True, null=True)),
                ('orientation', models.CharField(blank=True, max_length=50, null=True)),
                ('sem_1_avg', models.FloatField(blank=True, null=True)),
                ('sem_2_avg', models.FloatField(blank=True, null=True)),
                ('sem_3_avg', models.FloatField(blank=True, null=True)),
                ('sem_4_avg', models.FloatField(blank=True, null=True)),
                ('sem_5_avg', models.FloatField(blank=True, null=True)),
                ('sem_6_avg', models.FloatField(blank=True, null=True)),
                ('rechtable', models.CharField(blank=True, max_length=25, null=True)),
                ('sem_1_credit', models.FloatField(blank=True, null=True)),
                ('sem_2_credit', models.FloatField(blank=True, null=True)),
                ('sem_3_credit', models.FloatField(blank=True, null=True)),
                ('sem_4_credit', models.FloatField(blank=True, null=True)),
                ('sem_5_credit', models.FloatField(blank=True, null=True)),
                ('sem_6_credit', models.FloatField(blank=True, null=True)),
                ('session2_nb', models.IntegerField(blank=True, null=True)),
                ('debt_nb', models.IntegerField(blank=True, null=True)),
                ('statu', models.CharField(blank=True, max_length=25, null=True)),
            ],
            options={
                'db_table': 'studentinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Towns',
            fields=[
                ('town', models.CharField(max_length=25, primary_key=True, serialize=False)),
                ('dayra', models.CharField(blank=True, max_length=13, null=True)),
                ('wilaya', models.CharField(blank=True, max_length=10, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('column4', models.FloatField(blank=True, db_column='Column4', null=True)),
                ('distance', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'towns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Univfield',
            fields=[
                ('field_id', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=36, null=True)),
            ],
            options={
                'db_table': 'univfield',
                'managed': False,
            },
        ),
        migrations.RenameField(
            model_name='member',
            old_name='type',
            new_name='user_type',
        ),
        migrations.CreateModel(
            name='MainMember',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.AuthUser')),
                ('type', models.IntegerField()),
            ],
            options={
                'db_table': 'main_member',
                'managed': False,
            },
        ),
        migrations.AddField(
            model_name='member',
            name='student_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.Student'),
        ),
    ]
