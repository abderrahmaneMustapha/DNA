{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport useTheme from '../styles/useTheme';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  var align = theme.direction === 'rtl' ? 'right' : 'left';\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'absolute',\n      bottom: 0,\n      right: 0,\n      top: -5,\n      left: 0,\n      margin: 0,\n      padding: 0,\n      pointerEvents: 'none',\n      borderRadius: 'inherit',\n      borderStyle: 'solid',\n      borderWidth: 1,\n      // Match the Input Label\n      transition: theme.transitions.create([\"padding-\".concat(align), 'border-color', 'border-width'], {\n        duration: theme.transitions.duration.shorter,\n        easing: theme.transitions.easing.easeOut\n      })\n    },\n\n    /* Styles applied to the legend element. */\n    legend: {\n      textAlign: 'left',\n      padding: 0,\n      lineHeight: '11px',\n      transition: theme.transitions.create('width', {\n        duration: theme.transitions.duration.shorter,\n        easing: theme.transitions.easing.easeOut\n      })\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nvar NotchedOutline = React.forwardRef(function NotchedOutline(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      labelWidthProp = props.labelWidth,\n      notched = props.notched,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"labelWidth\", \"notched\", \"style\"]);\n\n  var theme = useTheme();\n  var align = theme.direction === 'rtl' ? 'right' : 'left';\n  var labelWidth = labelWidthProp > 0 ? labelWidthProp * 0.75 + 8 : 0;\n  return React.createElement(\"fieldset\", _extends({\n    \"aria-hidden\": true,\n    style: _extends(_defineProperty({}, \"padding\".concat(capitalize(align)), 8 + (notched ? 0 : labelWidth / 2)), style),\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), React.createElement(\"legend\", {\n    className: classes.legend,\n    style: {\n      // IE 11: fieldset with legend does not render\n      // a border radius. This maintains consistency\n      // by always having a legend rendered\n      width: notched ? labelWidth : 0.01\n    }\n  }, React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? NotchedOutline.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The width of the label.\n   */\n  labelWidth: PropTypes.number.isRequired,\n\n  /**\n   * If `true`, the outline is notched to accommodate the label.\n   */\n  notched: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateNotchedOutline'\n})(NotchedOutline);","map":{"version":3,"sources":["C:/Users/icom/myProjects/DNA/react app/dna/node_modules/@material-ui/core/esm/OutlinedInput/NotchedOutline.js"],"names":["_defineProperty","_extends","_objectWithoutProperties","React","PropTypes","clsx","withStyles","useTheme","capitalize","styles","theme","align","direction","root","position","bottom","right","top","left","margin","padding","pointerEvents","borderRadius","borderStyle","borderWidth","transition","transitions","create","concat","duration","shorter","easing","easeOut","legend","textAlign","lineHeight","NotchedOutline","forwardRef","props","ref","children","classes","className","labelWidthProp","labelWidth","notched","style","other","createElement","width","dangerouslySetInnerHTML","__html","process","env","NODE_ENV","propTypes","node","object","string","number","isRequired","bool","name"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport useTheme from '../styles/useTheme';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  var align = theme.direction === 'rtl' ? 'right' : 'left';\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'absolute',\n      bottom: 0,\n      right: 0,\n      top: -5,\n      left: 0,\n      margin: 0,\n      padding: 0,\n      pointerEvents: 'none',\n      borderRadius: 'inherit',\n      borderStyle: 'solid',\n      borderWidth: 1,\n      // Match the Input Label\n      transition: theme.transitions.create([\"padding-\".concat(align), 'border-color', 'border-width'], {\n        duration: theme.transitions.duration.shorter,\n        easing: theme.transitions.easing.easeOut\n      })\n    },\n\n    /* Styles applied to the legend element. */\n    legend: {\n      textAlign: 'left',\n      padding: 0,\n      lineHeight: '11px',\n      transition: theme.transitions.create('width', {\n        duration: theme.transitions.duration.shorter,\n        easing: theme.transitions.easing.easeOut\n      })\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nvar NotchedOutline = React.forwardRef(function NotchedOutline(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      labelWidthProp = props.labelWidth,\n      notched = props.notched,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"labelWidth\", \"notched\", \"style\"]);\n\n  var theme = useTheme();\n  var align = theme.direction === 'rtl' ? 'right' : 'left';\n  var labelWidth = labelWidthProp > 0 ? labelWidthProp * 0.75 + 8 : 0;\n  return React.createElement(\"fieldset\", _extends({\n    \"aria-hidden\": true,\n    style: _extends(_defineProperty({}, \"padding\".concat(capitalize(align)), 8 + (notched ? 0 : labelWidth / 2)), style),\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), React.createElement(\"legend\", {\n    className: classes.legend,\n    style: {\n      // IE 11: fieldset with legend does not render\n      // a border radius. This maintains consistency\n      // by always having a legend rendered\n      width: notched ? labelWidth : 0.01\n    }\n  }, React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? NotchedOutline.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The width of the label.\n   */\n  labelWidth: PropTypes.number.isRequired,\n\n  /**\n   * If `true`, the outline is notched to accommodate the label.\n   */\n  notched: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateNotchedOutline'\n})(NotchedOutline);"]},"metadata":{},"sourceType":"module"}