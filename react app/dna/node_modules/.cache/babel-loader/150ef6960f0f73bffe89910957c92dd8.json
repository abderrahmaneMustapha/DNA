{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentBrowserEnvironment\n */\n'use strict';\n\nvar ReactDOMIDOperations = require('./ReactDOMIDOperations');\n\nvar ReactMount = require('./ReactMount');\n/**\n * Abstracts away all functionality of the reconciler that requires knowledge of\n * the browser context. TODO: These callers should be refactored to avoid the\n * need for this injection.\n */\n\n\nvar ReactComponentBrowserEnvironment = {\n  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,\n  replaceNodeWithMarkupByID: ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,\n\n  /**\n   * If a particular environment requires that some resources be cleaned up,\n   * specify this in the injected Mixin. In the DOM, we would likely want to\n   * purge any cached node ID lookups.\n   *\n   * @private\n   */\n  unmountIDFromEnvironment: function (rootNodeID) {\n    ReactMount.purgeID(rootNodeID);\n  }\n};\nmodule.exports = ReactComponentBrowserEnvironment;","map":{"version":3,"sources":["C:/Users/icom/myProjects/DNA/react app/dna/node_modules/react-holder/node_modules/react/lib/ReactComponentBrowserEnvironment.js"],"names":["ReactDOMIDOperations","require","ReactMount","ReactComponentBrowserEnvironment","processChildrenUpdates","dangerouslyProcessChildrenUpdates","replaceNodeWithMarkupByID","dangerouslyReplaceNodeWithMarkupByID","unmountIDFromEnvironment","rootNodeID","purgeID","module","exports"],"mappings":"AAAA;;;;;;;;;;AAWA;;AAEA,IAAIA,oBAAoB,GAAGC,OAAO,CAAC,wBAAD,CAAlC;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,cAAD,CAAxB;AAEA;;;;;;;AAKA,IAAIE,gCAAgC,GAAG;AAErCC,EAAAA,sBAAsB,EAAEJ,oBAAoB,CAACK,iCAFR;AAIrCC,EAAAA,yBAAyB,EAAEN,oBAAoB,CAACO,oCAJX;;AAMrC;;;;;;;AAOAC,EAAAA,wBAAwB,EAAE,UAAUC,UAAV,EAAsB;AAC9CP,IAAAA,UAAU,CAACQ,OAAX,CAAmBD,UAAnB;AACD;AAfoC,CAAvC;AAmBAE,MAAM,CAACC,OAAP,GAAiBT,gCAAjB","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentBrowserEnvironment\n */\n\n'use strict';\n\nvar ReactDOMIDOperations = require('./ReactDOMIDOperations');\nvar ReactMount = require('./ReactMount');\n\n/**\n * Abstracts away all functionality of the reconciler that requires knowledge of\n * the browser context. TODO: These callers should be refactored to avoid the\n * need for this injection.\n */\nvar ReactComponentBrowserEnvironment = {\n\n  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,\n\n  replaceNodeWithMarkupByID: ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,\n\n  /**\n   * If a particular environment requires that some resources be cleaned up,\n   * specify this in the injected Mixin. In the DOM, we would likely want to\n   * purge any cached node ID lookups.\n   *\n   * @private\n   */\n  unmountIDFromEnvironment: function (rootNodeID) {\n    ReactMount.purgeID(rootNodeID);\n  }\n\n};\n\nmodule.exports = ReactComponentBrowserEnvironment;"]},"metadata":{},"sourceType":"script"}