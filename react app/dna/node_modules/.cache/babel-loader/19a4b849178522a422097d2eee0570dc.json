{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EnterLeaveEventPlugin\n * @typechecks static-only\n */\n'use strict';\n\nvar EventConstants = require('./EventConstants');\n\nvar EventPropagators = require('./EventPropagators');\n\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\nvar ReactMount = require('./ReactMount');\n\nvar keyOf = require('fbjs/lib/keyOf');\n\nvar topLevelTypes = EventConstants.topLevelTypes;\nvar getFirstReactDOM = ReactMount.getFirstReactDOM;\nvar eventTypes = {\n  mouseEnter: {\n    registrationName: keyOf({\n      onMouseEnter: null\n    }),\n    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]\n  },\n  mouseLeave: {\n    registrationName: keyOf({\n      onMouseLeave: null\n    }),\n    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]\n  }\n};\nvar extractedEvents = [null, null];\nvar EnterLeaveEventPlugin = {\n  eventTypes: eventTypes,\n\n  /**\n   * For almost every interaction we care about, there will be both a top-level\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n   * we do not extract duplicate events. However, moving the mouse into the\n   * browser from outside will not fire a `mouseout` event. In this case, we use\n   * the `mouseover` top-level event.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n      return null;\n    }\n\n    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {\n      // Must not be a mouse in or mouse out - ignoring.\n      return null;\n    }\n\n    var win;\n\n    if (topLevelTarget.window === topLevelTarget) {\n      // `topLevelTarget` is probably a window object.\n      win = topLevelTarget;\n    } else {\n      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n      var doc = topLevelTarget.ownerDocument;\n\n      if (doc) {\n        win = doc.defaultView || doc.parentWindow;\n      } else {\n        win = window;\n      }\n    }\n\n    var from;\n    var to;\n    var fromID = '';\n    var toID = '';\n\n    if (topLevelType === topLevelTypes.topMouseOut) {\n      from = topLevelTarget;\n      fromID = topLevelTargetID;\n      to = getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement);\n\n      if (to) {\n        toID = ReactMount.getID(to);\n      } else {\n        to = win;\n      }\n\n      to = to || win;\n    } else {\n      from = win;\n      to = topLevelTarget;\n      toID = topLevelTargetID;\n    }\n\n    if (from === to) {\n      // Nothing pertains to our managed components.\n      return null;\n    }\n\n    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, fromID, nativeEvent, nativeEventTarget);\n    leave.type = 'mouseleave';\n    leave.target = from;\n    leave.relatedTarget = to;\n    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, toID, nativeEvent, nativeEventTarget);\n    enter.type = 'mouseenter';\n    enter.target = to;\n    enter.relatedTarget = from;\n    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);\n    extractedEvents[0] = leave;\n    extractedEvents[1] = enter;\n    return extractedEvents;\n  }\n};\nmodule.exports = EnterLeaveEventPlugin;","map":{"version":3,"sources":["C:/Users/icom/myProjects/DNA/react app/dna/node_modules/react-holder/node_modules/react/lib/EnterLeaveEventPlugin.js"],"names":["EventConstants","require","EventPropagators","SyntheticMouseEvent","ReactMount","keyOf","topLevelTypes","getFirstReactDOM","eventTypes","mouseEnter","registrationName","onMouseEnter","dependencies","topMouseOut","topMouseOver","mouseLeave","onMouseLeave","extractedEvents","EnterLeaveEventPlugin","extractEvents","topLevelType","topLevelTarget","topLevelTargetID","nativeEvent","nativeEventTarget","relatedTarget","fromElement","win","window","doc","ownerDocument","defaultView","parentWindow","from","to","fromID","toID","toElement","getID","leave","getPooled","type","target","enter","accumulateEnterLeaveDispatches","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EnterLeaveEventPlugin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPropagators = require('./EventPropagators');\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\nvar ReactMount = require('./ReactMount');\nvar keyOf = require('fbjs/lib/keyOf');\n\nvar topLevelTypes = EventConstants.topLevelTypes;\nvar getFirstReactDOM = ReactMount.getFirstReactDOM;\n\nvar eventTypes = {\n  mouseEnter: {\n    registrationName: keyOf({ onMouseEnter: null }),\n    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]\n  },\n  mouseLeave: {\n    registrationName: keyOf({ onMouseLeave: null }),\n    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]\n  }\n};\n\nvar extractedEvents = [null, null];\n\nvar EnterLeaveEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * For almost every interaction we care about, there will be both a top-level\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n   * we do not extract duplicate events. However, moving the mouse into the\n   * browser from outside will not fire a `mouseout` event. In this case, we use\n   * the `mouseover` top-level event.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n      return null;\n    }\n    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {\n      // Must not be a mouse in or mouse out - ignoring.\n      return null;\n    }\n\n    var win;\n    if (topLevelTarget.window === topLevelTarget) {\n      // `topLevelTarget` is probably a window object.\n      win = topLevelTarget;\n    } else {\n      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n      var doc = topLevelTarget.ownerDocument;\n      if (doc) {\n        win = doc.defaultView || doc.parentWindow;\n      } else {\n        win = window;\n      }\n    }\n\n    var from;\n    var to;\n    var fromID = '';\n    var toID = '';\n    if (topLevelType === topLevelTypes.topMouseOut) {\n      from = topLevelTarget;\n      fromID = topLevelTargetID;\n      to = getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement);\n      if (to) {\n        toID = ReactMount.getID(to);\n      } else {\n        to = win;\n      }\n      to = to || win;\n    } else {\n      from = win;\n      to = topLevelTarget;\n      toID = topLevelTargetID;\n    }\n\n    if (from === to) {\n      // Nothing pertains to our managed components.\n      return null;\n    }\n\n    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, fromID, nativeEvent, nativeEventTarget);\n    leave.type = 'mouseleave';\n    leave.target = from;\n    leave.relatedTarget = to;\n\n    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, toID, nativeEvent, nativeEventTarget);\n    enter.type = 'mouseenter';\n    enter.target = to;\n    enter.relatedTarget = from;\n\n    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);\n\n    extractedEvents[0] = leave;\n    extractedEvents[1] = enter;\n\n    return extractedEvents;\n  }\n\n};\n\nmodule.exports = EnterLeaveEventPlugin;"]},"metadata":{},"sourceType":"script"}