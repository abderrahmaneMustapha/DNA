{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\icom\\\\myProjects\\\\DNA\\\\react app\\\\dna\\\\src\\\\profile\\\\Profile.js\";\nimport React from 'react';\nimport './profile.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Card from 'react-bootstrap/Card';\nimport { Radar, defaults } from 'react-chartjs-2';\ndefaults.scale.ticks.suggestedMin = 5;\n\nclass Profile extends React.Component {\n  constructor() {\n    super();\n\n    this.getStudents = result => {\n      console.log(result);\n      this.setState({\n        all_performances: [...result]\n      });\n    };\n\n    this.getSemesterCourses = result => {\n      var temp = [];\n\n      if (result.length > 0) {\n        result.map(s => {\n          temp.push(s['cours_id']);\n        });\n      }\n\n      this.setState({\n        radar_courses: [...temp]\n      });\n    };\n\n    this.getUnivFields = result => {\n      var semesters = [1, 2, 3, 4, 5, 6];\n\n      for (var i = 0; i < result.length; i++) {\n        if (result[i]['field_id'] == 17) {\n          result[i]['semesters'] = [...semesters];\n        } else {\n          result[i]['semesters'] = [...semesters.slice(0, 4)];\n        }\n      }\n\n      this.setState({\n        study_fields: [...result]\n      });\n    };\n\n    this.getStudentsPerformanceSemester = result => {\n      var courses = this.state.radar_courses;\n      var avg = [];\n      var exam = [];\n      var tp = [];\n      var td = [];\n\n      for (var c = 0; c < courses.length; c++) {\n        for (var j = 0; j < result.length; j++) {\n          if (JSON.stringify(courses[c]) == JSON.stringify(result[j].cours)) {\n            avg.push(result[c].cours_avg);\n            exam.push(result[c].exam);\n            tp.push(result[c].tp);\n            td.push(result[c].td);\n          }\n        }\n      }\n\n      this.setState({\n        'student__avgs': [...avg],\n        'student__exams': [...exam],\n        'student__tps': [...tp],\n        'student__tds': [...td]\n      });\n    };\n\n    this.getAlgoResult = result => {\n      this.setState({\n        algo_results: [...result]\n      });\n    };\n\n    this.connectToPerformance = () => {\n      fetch('http://127.0.0.1:8000/performance/?student=' + this.state.default_student).then(res => res.json()).then(result => {\n        this.getStudents(result);\n        this.getStudentsPerformanceSemester(result);\n      });\n    };\n\n    this.connectToCourses = (s, f) => {\n      let semester = s ? s : this.state.default_semester;\n      let field = f ? f : this.state.default_study_field;\n      fetch('http://127.0.0.1:8000/courses/?semestre=' + semester + '&study_field=' + field).then(res => res.json()).then(result => {\n        this.getSemesterCourses(result);\n      });\n    };\n\n    this.connectToStudyFields = () => {\n      fetch('http://127.0.0.1:8000/univ_field/').then(res => res.json()).then(result => {\n        this.getUnivFields(result);\n      });\n    };\n\n    this.connectToAlgo = () => {\n      fetch('http://127.0.0.1:8000/algore_sults/?student_id=' + this.state.default_student).then(res => res.json()).then(result => {\n        this.getAlgoResult(result);\n      });\n    };\n\n    this.handleClickSemester = e => {\n      let field = e.target.firstChild.value;\n      let semester = e.target.lastChild.innerText;\n      this.setState({\n        default_semester: field,\n        default_study_field: semester\n      });\n      this.connectToCourses(semester, field);\n      this.connectToPerformance();\n    };\n\n    this.handleClickPerformancePage = e => {\n      let field = e.target.innerText;\n      console.log(Number(this.state.all_performances_page_slice));\n      this.setState({\n        all_performances_page_slice: 5 * Number(field)\n      });\n    };\n\n    this.state = {\n      default_student: 14010996874,\n      default_semester: 1,\n      default_study_field: 17,\n      radar_courses: [],\n      student__avgs: [],\n      student__exams: [],\n      student__tps: [],\n      student__tds: [],\n      study_fields: [],\n      algo_results: [],\n      all_performances: [],\n      all_performances_page_slice: 5\n    };\n    this.handleClickSemester = this.handleClickSemester.bind(this);\n  }\n\n  componentDidMount() {\n    this.connectToStudyFields();\n    this.connectToCourses();\n    this.connectToPerformance();\n    this.connectToAlgo();\n  }\n\n  semestersList() {\n    return this.state.study_fields.map(element => React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, element['name'], \" semsters\"), React.createElement(\"ul\", {\n      id: \"semesters\",\n      className: \"list-group flex-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, element.semesters.map(s => React.createElement(\"li\", {\n      className: \"list-group-item\",\n      onClick: this.handleClickSemester,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: element['field_id'],\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, s))))));\n  }\n\n  algoResults() {\n    var algo_results = this.state.algo_results;\n    return algo_results.map(element => React.createElement(\"div\", {\n      className: \"col algo-results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"algo_1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Algo 01\"), React.createElement(\"table\", {\n      class: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"TD\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"TP\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"EXAM\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"AVG\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, element.algo1_td), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, element.algo1_tp), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, element.algo1_exam), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, element.algo1_avg))))), React.createElement(\"div\", {\n      id: \"algo_2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"Algo 02\"), React.createElement(\"table\", {\n      class: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"TD\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"TP\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"EXAM\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"AVG\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, element.algo1_td), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, element.algo1_tp), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, element.algo1_exam), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, element.algo1_avg)))))));\n  }\n\n  allPerformancesList() {\n    var performances = this.state.all_performances;\n    var result = [];\n\n    for (var i = 0; i < performances.length; i++) {\n      var color = \"\";\n\n      if (parseFloat(performances[i].cours_avg) >= 10) {\n        color = \"admis\";\n      } else {\n        color = \"ajourne\";\n      }\n\n      result.push(React.createElement(Card, {\n        className: color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        className: \"font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, performances[i].cours)), React.createElement(Card.Body, {\n        className: \"d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, performances[i].td, \"/\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, performances[i].tp, \"/\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, performances[i].td, \"/\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, performances[i].exam, \"/\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, performances[i].cours_avg, \"/\"))));\n    }\n\n    return result.slice(this.state.all_performances_page_slice - 5, this.state.all_performances_page_slice);\n  }\n\n  allPerformancesPagesIndex() {\n    var performances = this.state.all_performances;\n    var result = [];\n\n    for (var i = 0; i < Math.ceil(performances.length / 5); i++) {\n      result.push(React.createElement(\"li\", {\n        onClick: this.handleClickPerformancePage,\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, i + 1));\n    }\n\n    return result;\n  }\n\n  render() {\n    defaults.scale.ticks.suggestedMax = 20;\n    const greenBarColor = \"#18BD9B\";\n    const redBarColor = \"#E54787\";\n    const whiteBarColor = \"#E7E7EB\";\n    const orangeBarColor = \"#FC7C00\";\n    const semestersList = this.semestersList();\n    const algoResults = this.algoResults();\n    const performancesList = this.allPerformancesList();\n    const performancesListIndex = this.allPerformancesPagesIndex();\n    const cardWidth = \"22rem\";\n    return React.createElement(\"div\", {\n      className: \"Profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group search-student\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \" input-group-text\",\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"text-dark\",\n      type: \"text\",\n      value: this.state.default_student,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }))), React.createElement(\"article\", {\n      className: \"semster-module\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      id: \"semesers-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      id: \"semesters_list\",\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, semestersList)))), React.createElement(\"section\", {\n      id: \"radar-section\",\n      className: \"flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(Card, {\n      id: \"student_performance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(Radar, {\n      data: {\n        labels: this.state.radar_courses,\n        datasets: [{\n          label: \"TP \",\n          borderColor: greenBarColor,\n          data: this.state.student__tps,\n          fill: false\n        }, {\n          label: \"TD \",\n          borderColor: redBarColor,\n          data: this.state.student__tds,\n          fill: false\n        }, {\n          label: \"EXAM \",\n          borderColor: whiteBarColor,\n          data: this.state.student__exams,\n          fill: false\n        }, {\n          label: \"AVG\",\n          borderColor: orangeBarColor,\n          data: this.state.student__avgs,\n          fill: false\n        }]\n      },\n      width: 0,\n      height: 450,\n      options: {\n        maintainAspectRatio: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }))), React.createElement(Card, {\n      id: \"algo_performance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, algoResults)))), React.createElement(\"article\", {\n      className: \"semster-module\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      id: \"performances-all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, \" \", React.createElement(\"h3\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, \"All Courses Results\")), performancesList, React.createElement(\"ul\", {\n      id: \"performances_list_index\",\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, \"Pages : \"), performancesListIndex))));\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/icom/myProjects/DNA/react app/dna/src/profile/Profile.js"],"names":["React","Card","Radar","defaults","scale","ticks","suggestedMin","Profile","Component","constructor","getStudents","result","console","log","setState","all_performances","getSemesterCourses","temp","length","map","s","push","radar_courses","getUnivFields","semesters","i","slice","study_fields","getStudentsPerformanceSemester","courses","state","avg","exam","tp","td","c","j","JSON","stringify","cours","cours_avg","getAlgoResult","algo_results","connectToPerformance","fetch","default_student","then","res","json","connectToCourses","f","semester","default_semester","field","default_study_field","connectToStudyFields","connectToAlgo","handleClickSemester","e","target","firstChild","value","lastChild","innerText","handleClickPerformancePage","Number","all_performances_page_slice","student__avgs","student__exams","student__tps","student__tds","bind","componentDidMount","semestersList","element","algoResults","algo1_td","algo1_tp","algo1_exam","algo1_avg","allPerformancesList","performances","color","parseFloat","allPerformancesPagesIndex","Math","ceil","render","suggestedMax","greenBarColor","redBarColor","whiteBarColor","orangeBarColor","performancesList","performancesListIndex","cardWidth","labels","datasets","label","borderColor","data","fill","maintainAspectRatio"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './profile.css';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Radar,defaults } from 'react-chartjs-2';\r\n\r\n\r\ndefaults.scale.ticks.suggestedMin = 5\r\nclass Profile extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      default_student: 14010996874,\r\n      default_semester: 1,\r\n      default_study_field : 17,\r\n      radar_courses : [],\r\n      student__avgs: [],\r\n      student__exams: [],\r\n      student__tps: [],\r\n      student__tds: [],\r\n      study_fields : [],\r\n      algo_results : [], \r\n      all_performances : [],  \r\n      all_performances_page_slice : 5  \r\n    }\r\n    this.handleClickSemester = this.handleClickSemester.bind(this);\r\n  }\r\n\r\n  getStudents = (result)=>{\r\n    console.log(result)\r\n     this.setState({\r\n       all_performances : [...result]\r\n     })\r\n       \r\n  }\r\n\r\n  getSemesterCourses = (result)=>{\r\n    var temp = []\r\n    if (result.length > 0){\r\n      result.map((s)=>{\r\n        temp.push(s['cours_id'])\r\n      })\r\n    }\r\n    \r\n    this.setState({\r\n      radar_courses : [...temp]\r\n    }\r\n    )\r\n  }\r\n  \r\n  getUnivFields = (result) =>{\r\n    var semesters = [1,2,3,4,5,6]\r\n    for(var i=0;i< result.length; i++){\r\n      if(result[i]['field_id'] == 17){\r\n        result[i]['semesters'] = [...semesters]\r\n      }\r\n      else{\r\n        result[i]['semesters'] = [...semesters.slice(0,4)]\r\n      }\r\n    }\r\n   \r\n   this.setState(\r\n     {\r\n      study_fields: [...result]\r\n     }\r\n   )\r\n  \r\n  }\r\n\r\n  getStudentsPerformanceSemester = (result)=>{\r\n    var courses = this.state.radar_courses\r\n    var avg = []\r\n    var exam = []\r\n    var tp = []\r\n    var td = []\r\n    for(var c=0;c < courses.length ; c++){\r\n      for(var j=0; j < result.length;j++){\r\n        if( JSON.stringify(courses[c]) == JSON.stringify(result[j].cours)) {\r\n          avg.push(result[c].cours_avg)\r\n          exam.push(result[c].exam)   \r\n          tp.push(result[c].tp)   \r\n          td.push(result[c].td)            \r\n       }\r\n      }\r\n    \r\n    }\r\n   \r\n\r\n    this.setState({\r\n      'student__avgs':[...avg],\r\n      'student__exams':[...exam],\r\n      'student__tps':[...tp],\r\n      'student__tds':[...td]\r\n    })\r\n    \r\n  }\r\n\r\n  getAlgoResult = (result)=>{   \r\n    this.setState({\r\n      algo_results: [...result ]\r\n    })\r\n  }\r\n\r\n  connectToPerformance = ()=>{\r\n    \r\n  fetch('http://127.0.0.1:8000/performance/?student='+this.state.default_student).\r\n    then(res => res.json()).\r\n    then(\r\n      result =>{\r\n        this.getStudents(result) \r\n        this.getStudentsPerformanceSemester(result)\r\n    \r\n        }   \r\n      \r\n    )\r\n  }\r\n\r\n\r\n  connectToCourses = (s,f)=>{\r\n    let semester = s ?  s :this.state.default_semester\r\n    let field =  f ? f:this.state.default_study_field\r\n    fetch('http://127.0.0.1:8000/courses/?semestre='+semester+'&study_field='+field).\r\n      then(res => res.json()).\r\n      then(\r\n        result =>{\r\n          this.getSemesterCourses(result)    \r\n        }\r\n      )\r\n    }\r\n\r\n    connectToStudyFields = ()=>{\r\n      fetch('http://127.0.0.1:8000/univ_field/').\r\n      then(res => res.json()).\r\n      then(\r\n        result =>{\r\n          this.getUnivFields(result)    \r\n        }\r\n      )\r\n    }\r\n\r\n    connectToAlgo = ()=>{\r\n      fetch('http://127.0.0.1:8000/algore_sults/?student_id='+this.state.default_student).\r\n      then(res => res.json()).\r\n      then(\r\n        result =>{\r\n          this.getAlgoResult(result)    \r\n        }\r\n      )\r\n    }\r\n\r\n  componentDidMount() {\r\n    this.connectToStudyFields()   \r\n    this.connectToCourses()\r\n    this.connectToPerformance()\r\n    this. connectToAlgo()\r\n   \r\n  }\r\n\r\n  handleClickSemester = (e)=>{\r\n   \r\n   let field = e.target.firstChild.value\r\n   let semester = e.target.lastChild.innerText\r\n    \r\n   this.setState({\r\n    default_semester: field,\r\n    default_study_field : semester,\r\n   })\r\n \r\n\r\n   this.connectToCourses(semester,field)\r\n   this.connectToPerformance()\r\n  }\r\n\r\n  handleClickPerformancePage = (e)=>{\r\n    let field = e.target.innerText\r\n    console.log(Number(this.state.all_performances_page_slice))\r\n    this.setState({\r\n      all_performances_page_slice: 5 * Number(field),\r\n    })\r\n    \r\n  }\r\n\r\n  semestersList(){     \r\n    return this.state.study_fields.map((element)=>\r\n    <li className=\"list-group-item\">   \r\n    <p>{element['name']} semsters</p>\r\n    <ul id=\"semesters\" className=\"list-group flex-row\">\r\n      {element.semesters.map((s)=>\r\n       <li className=\"list-group-item\" onClick={this.handleClickSemester}>\r\n       <input  value={element['field_id']} hidden/> \r\n       <p>{s}</p></li>\r\n      )}\r\n    </ul>\r\n  \r\n  </li>\r\n    )\r\n  }\r\n\r\n  algoResults(){\r\n  var algo_results = this.state.algo_results\r\n    \r\n      return algo_results.map((element)=>\r\n        <div className=\"col algo-results\">\r\n        <div  id=\"algo_1\">\r\n               \r\n        <h6>Algo 01</h6> \r\n           <table class=\"table\">\r\n            <thead>            \r\n              <tr>              \r\n                <th scope=\"col\">TD</th>\r\n                <th scope=\"col\">TP</th>\r\n                <th scope=\"col\">EXAM</th>\r\n                <th scope=\"col\">AVG</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>{element.algo1_td}</td>\r\n                <td>{element.algo1_tp}</td>\r\n                <td>{element.algo1_exam}</td>\r\n                <td>{element.algo1_avg}</td>\r\n              </tr>             \r\n            </tbody>\r\n          </table>\r\n\r\n        </div>\r\n\r\n        <div id=\"algo_2\">\r\n          <h6>Algo 02</h6>\r\n          \r\n          <table class=\"table\">\r\n            <thead>\r\n            \r\n              <tr>              \r\n                <th scope=\"col\">TD</th>\r\n                <th scope=\"col\">TP</th>\r\n                <th scope=\"col\">EXAM</th>\r\n                <th scope=\"col\">AVG</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>{element.algo1_td}</td>\r\n                <td>{element.algo1_tp}</td>\r\n                <td>{element.algo1_exam}</td>\r\n                <td>{element.algo1_avg}</td>\r\n              </tr>             \r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    \r\n      )         \r\n  }\r\n\r\n  allPerformancesList (){\r\n    var performances = this.state.all_performances\r\n  \r\n    var result = []\r\n    for(var i=0; i < performances.length ; i++){\r\n      var color = \"\"\r\n      if( parseFloat(performances[i].cours_avg) >= 10) {color = \"admis\"}\r\n      else{ color=\"ajourne\"}\r\n      result.push(\r\n      <Card className={color}>\r\n          <Card.Header className=\"font-weight-bold\"><p>{performances[i].cours}</p></Card.Header>\r\n          <Card.Body className=\"d-flex\" >\r\n            <p>{performances[i].td}/</p>\r\n            <p>{performances[i].tp}/</p>\r\n            <p>{performances[i].td}/</p>\r\n            <p>{performances[i].exam}/</p>\r\n            <p>{performances[i].cours_avg}/</p>\r\n                \r\n          </Card.Body>\r\n      \r\n      </Card>)\r\n    }\r\n\r\n\r\n    return result.slice(this.state.all_performances_page_slice-5,this.state.all_performances_page_slice)\r\n  }\r\n\r\n  allPerformancesPagesIndex(){\r\n    var performances = this.state.all_performances\r\n    var result = []\r\n    for(var i=0; i < Math.ceil(performances.length/5) ; i++){\r\n     \r\n    result.push(<li onClick={this.handleClickPerformancePage} className=\"list-group-item\">{i+1}</li>)\r\n    }\r\n     \r\n    return result\r\n\r\n  }\r\n  render(){\r\n    defaults.scale.ticks.suggestedMax = 20\r\n    const greenBarColor = \"#18BD9B\"\r\n    const redBarColor = \"#E54787\"\r\n    const whiteBarColor = \"#E7E7EB\"\r\n    const orangeBarColor = \"#FC7C00\"\r\n    const semestersList = this.semestersList()\r\n    const algoResults = this.algoResults()\r\n    const performancesList = this.allPerformancesList()\r\n    const performancesListIndex = this.allPerformancesPagesIndex()\r\n    const cardWidth = \"22rem\"\r\n    return (\r\n      \r\n      <div className=\"Profile\">\r\n        { \r\n          /* the header we can choose a student */\r\n        }\r\n\r\n        <header className=\"\">\r\n        <div className=\"form-group search-student\">\r\n        <input  className=\" input-group-text\" type=\"button\"/>\r\n        <input className=\"text-dark\" type=\"text\" value={this.state.default_student} />\r\n        \r\n        </div>   \r\n        </header>\r\n\r\n        { \r\n          /* here you can see a radar about student performance in courses */\r\n        }\r\n\r\n        <article className=\"semster-module\">\r\n        {\r\n           /* semesters section */\r\n         }\r\n          <section  id=\"semesers-section\" >\r\n            <Card  >\r\n                <Card.Body>\r\n                  <ul id=\"semesters_list\" className=\"list-group\">\r\n                  {semestersList}\r\n                  </ul>  \r\n                     \r\n                </Card.Body>\r\n            </Card> \r\n          </section>\r\n         {\r\n           /* radar section */\r\n         }\r\n         <section id=\"radar-section\" className=\"flex\">\r\n         <Card id=\"student_performance\">\r\n            <Card.Body>\r\n                <Radar                             \r\n                  data={{ labels :this.state.radar_courses,  \r\n                          datasets: [\r\n                            { \r\n                              label: \"TP \",\r\n                              borderColor: greenBarColor,\r\n                              data : this.state.student__tps,\r\n                              fill : false\r\n                              },\r\n                              { \r\n                              label: \"TD \",\r\n                              borderColor: redBarColor,\r\n                              data : this.state.student__tds,\r\n                              fill : false\r\n                              },\r\n                              { \r\n                              label: \"EXAM \",\r\n                              borderColor: whiteBarColor,\r\n                              data :this.state.student__exams,\r\n                              fill : false\r\n                              },\r\n                              { \r\n                              label: \"AVG\",\r\n                              borderColor: orangeBarColor,\r\n                              data :this.state.student__avgs,\r\n                              fill : false\r\n                              }\r\n                          ],    \r\n                  }}                     \r\n                  width={0}\r\n                  height={450}\r\n                  options={{ maintainAspectRatio: false }}\r\n                />\r\n           </Card.Body>\r\n          </Card>\r\n\r\n          <Card id=\"algo_performance\">\r\n          \r\n            <Card.Body>\r\n             {algoResults}\r\n           </Card.Body>\r\n          </Card>\r\n              </section>\r\n\r\n            \r\n       \r\n        </article>\r\n\r\n        { \r\n          /* more details info */\r\n        }\r\n        \r\n        <article className=\"semster-module\">\r\n         <section >\r\n           \r\n         </section>\r\n         <section id=\"performances-all\">\r\n         <header className=\"text-center\"> <h3 className=\"text-center\">All Courses Results</h3></header>\r\n          \r\n            {performancesList}\r\n            <ul id=\"performances_list_index\" className=\"list-group\">\r\n            <p>Pages : </p>\r\n            {performancesListIndex}</ul>\r\n         </section>\r\n        </article>\r\n      </div>\r\n    );\r\n  }\r\n \r\n}\r\n\r\nexport default  Profile;\r\n"]},"metadata":{},"sourceType":"module"}