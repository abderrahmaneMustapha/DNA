{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n/* eslint-disable no-constant-condition */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { setRef, useEventCallback } from '@material-ui/core/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE 11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nfunction defaultStringify(value) {\n  if (value == null) {\n    return '';\n  }\n\n  if (typeof value === 'string') {\n    return value;\n  }\n\n  if (_typeof(value) === 'object') {\n    return Object.keys(value).map(function (key) {\n      return value[key];\n    }).join(' ');\n  }\n\n  return JSON.stringify(value);\n}\n\nexport function createFilterOptions() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$ignoreAccents = config.ignoreAccents,\n      ignoreAccents = _config$ignoreAccents === void 0 ? true : _config$ignoreAccents,\n      _config$ignoreCase = config.ignoreCase,\n      ignoreCase = _config$ignoreCase === void 0 ? true : _config$ignoreCase,\n      _config$matchFrom = config.matchFrom,\n      matchFrom = _config$matchFrom === void 0 ? 'any' : _config$matchFrom,\n      _config$stringify = config.stringify,\n      stringify = _config$stringify === void 0 ? defaultStringify : _config$stringify,\n      _config$trim = config.trim,\n      trim = _config$trim === void 0 ? false : _config$trim;\n  return function (options, _ref) {\n    var inputValue = _ref.inputValue;\n    var input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    return options.filter(function (option) {\n      var candidate = stringify(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n  };\n} // To replace with .findIndex() once we stop IE 11 support.\n\nfunction findIndex(array, comp) {\n  for (var i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nvar defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nvar pageSize = 5;\nexport default function useAutocomplete(props) {\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      defaultValue = props.defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disableOpenOnF = props.disableOpenOnFocus,\n      disableOpenOnFocus = _props$disableOpenOnF === void 0 ? false : _props$disableOpenOnF,\n      _props$filterOptions = props.filterOptions,\n      filterOptions = _props$filterOptions === void 0 ? defaultFilterOptions : _props$filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (x) {\n    return x;\n  } : _props$getOptionLabel,\n      _props$getOptionSelec = props.getOptionSelected,\n      getOptionSelected = _props$getOptionSelec === void 0 ? function (option, value) {\n    return option === value;\n  } : _props$getOptionSelec,\n      groupBy = props.groupBy,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      onInputChange = props.onInputChange,\n      openProp = props.open,\n      _props$options = props.options,\n      options = _props$options === void 0 ? [] : _props$options,\n      valueProp = props.value;\n\n  var _React$useState = React.useState(),\n      defaultId = _React$useState[0],\n      setDefaultId = _React$useState[1];\n\n  var id = idProp || defaultId;\n  React.useEffect(function () {\n    // Fallback to this default id when possible.\n    // Use the random value for client-side rendering only.\n    // We can't use it server-side.\n    setDefaultId(\"mui-autocomplete-\".concat(Math.round(Math.random() * 1e5)));\n  }, []);\n  var ignoreFocus = React.useRef(false);\n  var firstFocus = React.useRef(true);\n  var inputRef = React.useRef(null);\n  var listboxRef = React.useRef(null);\n\n  var _React$useState2 = React.useState(null),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState(-1),\n      focusedTag = _React$useState3[0],\n      setFocusedTag = _React$useState3[1];\n\n  var defaultHighlighted = autoHighlight ? 0 : -1;\n  var highlightedIndexRef = React.useRef(defaultHighlighted);\n  var selectedIndexRef = React.useRef(-1);\n\n  function setHighlightedIndex(index) {\n    var mouse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', \"\".concat(id, \"-option-\").concat(index));\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    var prev = listboxRef.current.querySelector('[data-focus]');\n\n    if (prev) {\n      prev.removeAttribute('data-focus');\n    }\n\n    var listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(index, \"\\\"]\"));\n\n    if (!option) {\n      return;\n    }\n\n    option.setAttribute('data-focus', 'true'); // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && !mouse) {\n      var element = option;\n      var scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      var elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop;\n      }\n    }\n  }\n\n  var _React$useRef = React.useRef(valueProp !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState4 = React.useState(function () {\n    return !isControlled ? defaultValue || (multiple ? [] : null) : null;\n  }),\n      valueState = _React$useState4[0],\n      setValue = _React$useState4[1];\n\n  var value = isControlled ? valueProp : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (isControlled !== (valueProp !== undefined)) {\n        console.error([\"Material-UI: A component is changing \".concat(isControlled ? 'a ' : 'an un', \"controlled useAutocomplete to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', 'Decide between using a controlled or uncontrolled useAutocomplete ' + 'element for the lifetime of the component.', 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [valueProp, isControlled]);\n  }\n\n  var _React$useRef2 = React.useRef(inputValueProp != null),\n      isInputValueControlled = _React$useRef2.current;\n\n  var _React$useState5 = React.useState(''),\n      inputValueState = _React$useState5[0],\n      setInputValue = _React$useState5[1];\n\n  var inputValue = isInputValueControlled ? inputValueProp : inputValueState;\n\n  var _React$useState6 = React.useState(false),\n      focused = _React$useState6[0],\n      setFocused = _React$useState6[1];\n\n  var resetInputValue = useEventCallback(function (event, newValue) {\n    var newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      var optionLabel = getOptionLabel(newValue);\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof optionLabel !== 'string') {\n          console.error(['Material-UI: the `getOptionLabel` method of useAutocomplete do not handle the options correctly.', \"The component expect a string but received \".concat(_typeof(optionLabel), \".\"), \"For the input option: \".concat(JSON.stringify(newValue), \", `getOptionLabel` returns: \").concat(newInputValue, \".\")].join('\\n'));\n        }\n      }\n\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValue(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  });\n  React.useEffect(function () {\n    resetInputValue(null, value);\n  }, [value, resetInputValue]);\n\n  var _React$useRef3 = React.useRef(openProp != null),\n      isOpenControlled = _React$useRef3.current;\n\n  var _React$useState7 = React.useState(false),\n      openState = _React$useState7[0],\n      setOpenState = _React$useState7[1];\n\n  var open = isOpenControlled ? openProp : openState;\n  var inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  var popupOpen = open;\n  var filteredOptions = popupOpen ? filterOptions(options.filter(function (option) {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(function (value2) {\n      return value2 !== null && getOptionSelected(option, value2);\n    })) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue ? '' : inputValue\n  }) : [];\n  popupOpen = freeSolo && filteredOptions.length === 0 ? false : popupOpen;\n  var focusTag = useEventCallback(function (tagToFocus) {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(tagToFocus, \"\\\"]\")).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(function () {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var changeHighlightedIndex = function changeHighlightedIndex(diff, direction) {\n    if (!popupOpen) {\n      return;\n    }\n\n    var getNextIndex = function getNextIndex() {\n      var maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      var newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    var nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex(nextIndex);\n    selectedIndexRef.current = nextIndex;\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        var option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        var index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  };\n\n  React.useEffect(function () {\n    changeHighlightedIndex('reset', 'next');\n  }, [inputValue]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleOpen = function handleOpen(event) {\n    if (open) {\n      return;\n    }\n\n    if (onOpen) {\n      onOpen(event);\n    }\n\n    if (!isOpenControlled) {\n      setOpenState(true);\n    }\n  };\n\n  var handleClose = function handleClose(event) {\n    if (!open) {\n      return;\n    }\n\n    if (onClose) {\n      onClose(event);\n    }\n\n    if (!isOpenControlled) {\n      setOpenState(false);\n    }\n  };\n\n  var handleValue = function handleValue(event, newValue) {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue);\n    }\n\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  };\n\n  var selectNewValue = function selectNewValue(event, newValue) {\n    if (multiple) {\n      var item = newValue;\n      newValue = Array.isArray(value) ? _toConsumableArray(value) : [];\n      var itemIndex = findIndex(newValue, function (valueItem) {\n        return getOptionSelected(item, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        newValue.push(item);\n      } else {\n        newValue.splice(itemIndex, 1);\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue);\n\n    if (!disableCloseOnSelect) {\n      handleClose(event);\n    }\n\n    selectedIndexRef.current = -1;\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var handleFocusTag = function handleFocusTag(event, direction) {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event);\n    var nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  var handleClear = function handleClear(event) {\n    ignoreFocus.current = true;\n    setInputValue('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null);\n  };\n\n  var handleKeyDown = function handleKeyDown(other) {\n    return function (event) {\n      if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n        setFocusedTag(-1);\n        focusTag(-1);\n      }\n\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex('start', 'next');\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex('end', 'previous');\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex(-pageSize, 'previous');\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex(pageSize, 'next');\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex(1, 'next');\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex(-1, 'previous');\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            // We don't want to validate the form.\n            event.preventDefault();\n            selectNewValue(event, filteredOptions[highlightedIndexRef.current]); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue);\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event);\n          } else if (clearOnEscape && inputValue !== '') {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            var index = focusedTag === -1 ? value.length - 1 : focusedTag;\n\n            var newValue = _toConsumableArray(value);\n\n            newValue.splice(index, 1);\n            handleValue(event, newValue);\n          }\n\n          break;\n\n        default:\n      }\n\n      if (other.onKeyDown) {\n        other.onKeyDown(event);\n      }\n    };\n  };\n\n  var handleFocus = function handleFocus(event) {\n    setFocused(true);\n\n    if (!disableOpenOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (debug && inputValue !== '') {\n      return;\n    }\n\n    if (autoSelect && selectedIndexRef.current !== -1) {\n      handleValue(event, filteredOptions[selectedIndexRef.current]);\n    } else if (!freeSolo) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event);\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValue(newValue);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (disableOpenOnFocus) {\n        handleClose(event);\n      }\n\n      if (!disableClearable && !multiple) {\n        handleValue(event, null);\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  var handleOptionMouseOver = function handleOptionMouseOver(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    setHighlightedIndex(index, 'mouse');\n  };\n\n  var isTouch = React.useRef(false);\n\n  var handleOptionTouchStart = function handleOptionTouchStart() {\n    isTouch.current = true;\n  };\n\n  var handleOptionClick = function handleOptionClick(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index]);\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n\n    isTouch.current = false;\n  };\n\n  var handleTagDelete = function handleTagDelete(index) {\n    return function (event) {\n      var newValue = _toConsumableArray(value);\n\n      newValue.splice(index, 1);\n      handleValue(event, newValue);\n    };\n  };\n\n  var handleListboxRef = useEventCallback(function (node) {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    } // Restore the focus to the correct option.\n\n\n    setHighlightedIndex(highlightedIndexRef.current);\n  });\n\n  var handlePopupIndicator = function handlePopupIndicator(event) {\n    if (open) {\n      handleClose(event);\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.target.nodeName !== 'INPUT') {\n      event.preventDefault();\n    }\n  }; // Focus the input when first interacting with the combobox\n\n\n  var handleClick = function handleClick() {\n    if (firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.focus();\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  var handleInputMouseDown = function handleInputMouseDown(event) {\n    if (inputValue === '' && (!disableOpenOnFocus || inputRef.current === document.activeElement)) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  var dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  var groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    groupedOptions = filteredOptions.reduce(function (acc, option, index) {\n      var key = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].key === key) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        acc.push({\n          key: key,\n          index: index,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  return {\n    getRootProps: function getRootProps() {\n      var other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        'aria-owns': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        role: 'combobox',\n        'aria-expanded': popupOpen\n      }, other, {\n        onKeyDown: handleKeyDown(other),\n        onMouseDown: handleMouseDown,\n        onClick: handleClick\n      });\n    },\n    getInputLabelProps: function getInputLabelProps() {\n      return {\n        id: \"\".concat(id, \"-label\"),\n        htmlFor: id\n      };\n    },\n    getInputProps: function getInputProps() {\n      return {\n        id: id,\n        value: inputValue,\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onChange: handleInputChange,\n        onMouseDown: handleInputMouseDown,\n        // if open then this is handled imperativeley so don't let react override\n        // only have an opinion about this when closed\n        'aria-activedescendant': popupOpen ? '' : null,\n        'aria-autocomplete': autoComplete ? 'both' : 'list',\n        'aria-controls': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        // Disable browser's suggestion that might overlap with the popup.\n        // Handle autocomplete but not autofill.\n        autoComplete: 'off',\n        ref: inputRef,\n        autoCapitalize: 'none',\n        spellCheck: 'false'\n      };\n    },\n    getClearProps: function getClearProps() {\n      return {\n        tabIndex: -1,\n        onClick: handleClear\n      };\n    },\n    getPopupIndicatorProps: function getPopupIndicatorProps() {\n      return {\n        tabIndex: -1,\n        onClick: handlePopupIndicator\n      };\n    },\n    getTagProps: function getTagProps(_ref2) {\n      var index = _ref2.index;\n      return {\n        key: index,\n        'data-tag-index': index,\n        tabIndex: -1,\n        onDelete: handleTagDelete(index)\n      };\n    },\n    getListboxProps: function getListboxProps() {\n      return {\n        role: 'listbox',\n        id: \"\".concat(id, \"-popup\"),\n        'aria-labelledby': \"\".concat(id, \"-label\"),\n        ref: handleListboxRef,\n        onMouseDown: function onMouseDown(event) {\n          // Prevent blur\n          event.preventDefault();\n        }\n      };\n    },\n    getOptionProps: function getOptionProps(_ref3) {\n      var index = _ref3.index,\n          option = _ref3.option;\n      var selected = (multiple ? value : [value]).some(function (value2) {\n        return value2 != null && getOptionSelected(option, value2);\n      });\n      var disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: index,\n        tabIndex: -1,\n        role: 'option',\n        id: \"\".concat(id, \"-option-\").concat(index),\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id: id,\n    inputValue: inputValue,\n    value: value,\n    dirty: dirty,\n    popupOpen: popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl: anchorEl,\n    setAnchorEl: setAnchorEl,\n    focusedTag: focusedTag,\n    groupedOptions: groupedOptions\n  };\n}\nuseAutocomplete.propTypes = {\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will ignore the blur event if the input if filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   */\n  debug: PropTypes.bool,\n\n  /**\n   * The default input value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the input can't be cleared.\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't open on input focus.\n   */\n  disableOpenOnFocus: PropTypes.bool,\n\n  /**\n   * A filter function that determins the options that are eligible.\n   *\n   * @param {any} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {boolean}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {any} options The option to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {any} value\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the text input value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {string} value The new value of the text input\n   * @param {string} reason One of \"input\" (user input) or \"reset\" (programmatic change)\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control the popup` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any\n};","map":{"version":3,"sources":["C:/Users/icom/myProjects/DNA/react app/dna/node_modules/@material-ui/lab/esm/useAutocomplete/useAutocomplete.js"],"names":["_extends","_toConsumableArray","_typeof","React","PropTypes","setRef","useEventCallback","stripDiacritics","string","normalize","replace","defaultStringify","value","Object","keys","map","key","join","JSON","stringify","createFilterOptions","config","arguments","length","undefined","_config$ignoreAccents","ignoreAccents","_config$ignoreCase","ignoreCase","_config$matchFrom","matchFrom","_config$stringify","_config$trim","trim","options","_ref","inputValue","input","toLowerCase","filter","option","candidate","indexOf","findIndex","array","comp","i","defaultFilterOptions","pageSize","useAutocomplete","props","_props$autoComplete","autoComplete","_props$autoHighlight","autoHighlight","_props$autoSelect","autoSelect","_props$blurOnSelect","blurOnSelect","_props$clearOnEscape","clearOnEscape","_props$debug","debug","defaultValue","_props$disableClearab","disableClearable","_props$disableCloseOn","disableCloseOnSelect","_props$disableListWra","disableListWrap","_props$disableOpenOnF","disableOpenOnFocus","_props$filterOptions","filterOptions","_props$filterSelected","filterSelectedOptions","_props$freeSolo","freeSolo","getOptionDisabled","_props$getOptionLabel","getOptionLabel","x","_props$getOptionSelec","getOptionSelected","groupBy","idProp","id","_props$includeInputIn","includeInputInList","inputValueProp","_props$multiple","multiple","onChange","onClose","onOpen","onInputChange","openProp","open","_props$options","valueProp","_React$useState","useState","defaultId","setDefaultId","useEffect","concat","Math","round","random","ignoreFocus","useRef","firstFocus","inputRef","listboxRef","_React$useState2","anchorEl","setAnchorEl","_React$useState3","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","selectedIndexRef","setHighlightedIndex","index","mouse","current","removeAttribute","setAttribute","prev","querySelector","listboxNode","parentElement","scrollTop","scrollHeight","clientHeight","element","scrollBottom","elementBottom","offsetTop","offsetHeight","_React$useRef","isControlled","_React$useState4","valueState","setValue","process","env","NODE_ENV","console","error","_React$useRef2","isInputValueControlled","_React$useState5","inputValueState","setInputValue","_React$useState6","focused","setFocused","resetInputValue","event","newValue","newInputValue","optionLabel","_React$useRef3","isOpenControlled","_React$useState7","openState","setOpenState","inputValueIsSelectedValue","popupOpen","filteredOptions","some","value2","focusTag","tagToFocus","focus","validOptionIndex","direction","nextFocus","hasAttribute","disabled","getAttribute","changeHighlightedIndex","diff","getNextIndex","maxIndex","newIndex","abs","nextIndex","setSelectionRange","handleOpen","handleClose","handleValue","selectNewValue","item","Array","isArray","itemIndex","valueItem","push","splice","validTagIndex","handleFocusTag","nextTag","handleClear","handleKeyDown","other","preventDefault","stopPropagation","onKeyDown","handleFocus","handleBlur","handleInputChange","target","handleOptionMouseOver","Number","currentTarget","isTouch","handleOptionTouchStart","handleOptionClick","blur","handleTagDelete","handleListboxRef","node","handlePopupIndicator","handleMouseDown","nodeName","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","document","activeElement","dirty","groupedOptions","reduce","acc","getRootProps","role","onMouseDown","onClick","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","ref","autoCapitalize","spellCheck","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","_ref2","onDelete","getListboxProps","getOptionProps","_ref3","selected","onMouseOver","onTouchStart","propTypes","bool","classes","object","className","any","func"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\n/* eslint-disable no-constant-condition */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { setRef, useEventCallback } from '@material-ui/core/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE 11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nfunction defaultStringify(value) {\n  if (value == null) {\n    return '';\n  }\n\n  if (typeof value === 'string') {\n    return value;\n  }\n\n  if (_typeof(value) === 'object') {\n    return Object.keys(value).map(function (key) {\n      return value[key];\n    }).join(' ');\n  }\n\n  return JSON.stringify(value);\n}\n\nexport function createFilterOptions() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$ignoreAccents = config.ignoreAccents,\n      ignoreAccents = _config$ignoreAccents === void 0 ? true : _config$ignoreAccents,\n      _config$ignoreCase = config.ignoreCase,\n      ignoreCase = _config$ignoreCase === void 0 ? true : _config$ignoreCase,\n      _config$matchFrom = config.matchFrom,\n      matchFrom = _config$matchFrom === void 0 ? 'any' : _config$matchFrom,\n      _config$stringify = config.stringify,\n      stringify = _config$stringify === void 0 ? defaultStringify : _config$stringify,\n      _config$trim = config.trim,\n      trim = _config$trim === void 0 ? false : _config$trim;\n  return function (options, _ref) {\n    var inputValue = _ref.inputValue;\n    var input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    return options.filter(function (option) {\n      var candidate = stringify(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n  };\n} // To replace with .findIndex() once we stop IE 11 support.\n\nfunction findIndex(array, comp) {\n  for (var i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nvar defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nvar pageSize = 5;\nexport default function useAutocomplete(props) {\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      defaultValue = props.defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disableOpenOnF = props.disableOpenOnFocus,\n      disableOpenOnFocus = _props$disableOpenOnF === void 0 ? false : _props$disableOpenOnF,\n      _props$filterOptions = props.filterOptions,\n      filterOptions = _props$filterOptions === void 0 ? defaultFilterOptions : _props$filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (x) {\n    return x;\n  } : _props$getOptionLabel,\n      _props$getOptionSelec = props.getOptionSelected,\n      getOptionSelected = _props$getOptionSelec === void 0 ? function (option, value) {\n    return option === value;\n  } : _props$getOptionSelec,\n      groupBy = props.groupBy,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      onInputChange = props.onInputChange,\n      openProp = props.open,\n      _props$options = props.options,\n      options = _props$options === void 0 ? [] : _props$options,\n      valueProp = props.value;\n\n  var _React$useState = React.useState(),\n      defaultId = _React$useState[0],\n      setDefaultId = _React$useState[1];\n\n  var id = idProp || defaultId;\n  React.useEffect(function () {\n    // Fallback to this default id when possible.\n    // Use the random value for client-side rendering only.\n    // We can't use it server-side.\n    setDefaultId(\"mui-autocomplete-\".concat(Math.round(Math.random() * 1e5)));\n  }, []);\n  var ignoreFocus = React.useRef(false);\n  var firstFocus = React.useRef(true);\n  var inputRef = React.useRef(null);\n  var listboxRef = React.useRef(null);\n\n  var _React$useState2 = React.useState(null),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState(-1),\n      focusedTag = _React$useState3[0],\n      setFocusedTag = _React$useState3[1];\n\n  var defaultHighlighted = autoHighlight ? 0 : -1;\n  var highlightedIndexRef = React.useRef(defaultHighlighted);\n  var selectedIndexRef = React.useRef(-1);\n\n  function setHighlightedIndex(index) {\n    var mouse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', \"\".concat(id, \"-option-\").concat(index));\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    var prev = listboxRef.current.querySelector('[data-focus]');\n\n    if (prev) {\n      prev.removeAttribute('data-focus');\n    }\n\n    var listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(index, \"\\\"]\"));\n\n    if (!option) {\n      return;\n    }\n\n    option.setAttribute('data-focus', 'true'); // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && !mouse) {\n      var element = option;\n      var scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      var elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop;\n      }\n    }\n  }\n\n  var _React$useRef = React.useRef(valueProp !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState4 = React.useState(function () {\n    return !isControlled ? defaultValue || (multiple ? [] : null) : null;\n  }),\n      valueState = _React$useState4[0],\n      setValue = _React$useState4[1];\n\n  var value = isControlled ? valueProp : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (isControlled !== (valueProp !== undefined)) {\n        console.error([\"Material-UI: A component is changing \".concat(isControlled ? 'a ' : 'an un', \"controlled useAutocomplete to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', 'Decide between using a controlled or uncontrolled useAutocomplete ' + 'element for the lifetime of the component.', 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [valueProp, isControlled]);\n  }\n\n  var _React$useRef2 = React.useRef(inputValueProp != null),\n      isInputValueControlled = _React$useRef2.current;\n\n  var _React$useState5 = React.useState(''),\n      inputValueState = _React$useState5[0],\n      setInputValue = _React$useState5[1];\n\n  var inputValue = isInputValueControlled ? inputValueProp : inputValueState;\n\n  var _React$useState6 = React.useState(false),\n      focused = _React$useState6[0],\n      setFocused = _React$useState6[1];\n\n  var resetInputValue = useEventCallback(function (event, newValue) {\n    var newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      var optionLabel = getOptionLabel(newValue);\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof optionLabel !== 'string') {\n          console.error(['Material-UI: the `getOptionLabel` method of useAutocomplete do not handle the options correctly.', \"The component expect a string but received \".concat(_typeof(optionLabel), \".\"), \"For the input option: \".concat(JSON.stringify(newValue), \", `getOptionLabel` returns: \").concat(newInputValue, \".\")].join('\\n'));\n        }\n      }\n\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValue(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  });\n  React.useEffect(function () {\n    resetInputValue(null, value);\n  }, [value, resetInputValue]);\n\n  var _React$useRef3 = React.useRef(openProp != null),\n      isOpenControlled = _React$useRef3.current;\n\n  var _React$useState7 = React.useState(false),\n      openState = _React$useState7[0],\n      setOpenState = _React$useState7[1];\n\n  var open = isOpenControlled ? openProp : openState;\n  var inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  var popupOpen = open;\n  var filteredOptions = popupOpen ? filterOptions(options.filter(function (option) {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(function (value2) {\n      return value2 !== null && getOptionSelected(option, value2);\n    })) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue ? '' : inputValue\n  }) : [];\n  popupOpen = freeSolo && filteredOptions.length === 0 ? false : popupOpen;\n  var focusTag = useEventCallback(function (tagToFocus) {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(tagToFocus, \"\\\"]\")).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(function () {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var changeHighlightedIndex = function changeHighlightedIndex(diff, direction) {\n    if (!popupOpen) {\n      return;\n    }\n\n    var getNextIndex = function getNextIndex() {\n      var maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      var newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    var nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex(nextIndex);\n    selectedIndexRef.current = nextIndex;\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        var option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        var index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  };\n\n  React.useEffect(function () {\n    changeHighlightedIndex('reset', 'next');\n  }, [inputValue]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleOpen = function handleOpen(event) {\n    if (open) {\n      return;\n    }\n\n    if (onOpen) {\n      onOpen(event);\n    }\n\n    if (!isOpenControlled) {\n      setOpenState(true);\n    }\n  };\n\n  var handleClose = function handleClose(event) {\n    if (!open) {\n      return;\n    }\n\n    if (onClose) {\n      onClose(event);\n    }\n\n    if (!isOpenControlled) {\n      setOpenState(false);\n    }\n  };\n\n  var handleValue = function handleValue(event, newValue) {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue);\n    }\n\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  };\n\n  var selectNewValue = function selectNewValue(event, newValue) {\n    if (multiple) {\n      var item = newValue;\n      newValue = Array.isArray(value) ? _toConsumableArray(value) : [];\n      var itemIndex = findIndex(newValue, function (valueItem) {\n        return getOptionSelected(item, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        newValue.push(item);\n      } else {\n        newValue.splice(itemIndex, 1);\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue);\n\n    if (!disableCloseOnSelect) {\n      handleClose(event);\n    }\n\n    selectedIndexRef.current = -1;\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var handleFocusTag = function handleFocusTag(event, direction) {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event);\n    var nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  var handleClear = function handleClear(event) {\n    ignoreFocus.current = true;\n    setInputValue('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null);\n  };\n\n  var handleKeyDown = function handleKeyDown(other) {\n    return function (event) {\n      if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n        setFocusedTag(-1);\n        focusTag(-1);\n      }\n\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex('start', 'next');\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex('end', 'previous');\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex(-pageSize, 'previous');\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex(pageSize, 'next');\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex(1, 'next');\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex(-1, 'previous');\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            // We don't want to validate the form.\n            event.preventDefault();\n            selectNewValue(event, filteredOptions[highlightedIndexRef.current]); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue);\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event);\n          } else if (clearOnEscape && inputValue !== '') {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            var index = focusedTag === -1 ? value.length - 1 : focusedTag;\n\n            var newValue = _toConsumableArray(value);\n\n            newValue.splice(index, 1);\n            handleValue(event, newValue);\n          }\n\n          break;\n\n        default:\n      }\n\n      if (other.onKeyDown) {\n        other.onKeyDown(event);\n      }\n    };\n  };\n\n  var handleFocus = function handleFocus(event) {\n    setFocused(true);\n\n    if (!disableOpenOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (debug && inputValue !== '') {\n      return;\n    }\n\n    if (autoSelect && selectedIndexRef.current !== -1) {\n      handleValue(event, filteredOptions[selectedIndexRef.current]);\n    } else if (!freeSolo) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event);\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValue(newValue);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (disableOpenOnFocus) {\n        handleClose(event);\n      }\n\n      if (!disableClearable && !multiple) {\n        handleValue(event, null);\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  var handleOptionMouseOver = function handleOptionMouseOver(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    setHighlightedIndex(index, 'mouse');\n  };\n\n  var isTouch = React.useRef(false);\n\n  var handleOptionTouchStart = function handleOptionTouchStart() {\n    isTouch.current = true;\n  };\n\n  var handleOptionClick = function handleOptionClick(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index]);\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n\n    isTouch.current = false;\n  };\n\n  var handleTagDelete = function handleTagDelete(index) {\n    return function (event) {\n      var newValue = _toConsumableArray(value);\n\n      newValue.splice(index, 1);\n      handleValue(event, newValue);\n    };\n  };\n\n  var handleListboxRef = useEventCallback(function (node) {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    } // Restore the focus to the correct option.\n\n\n    setHighlightedIndex(highlightedIndexRef.current);\n  });\n\n  var handlePopupIndicator = function handlePopupIndicator(event) {\n    if (open) {\n      handleClose(event);\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.target.nodeName !== 'INPUT') {\n      event.preventDefault();\n    }\n  }; // Focus the input when first interacting with the combobox\n\n\n  var handleClick = function handleClick() {\n    if (firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.focus();\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  var handleInputMouseDown = function handleInputMouseDown(event) {\n    if (inputValue === '' && (!disableOpenOnFocus || inputRef.current === document.activeElement)) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  var dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  var groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    groupedOptions = filteredOptions.reduce(function (acc, option, index) {\n      var key = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].key === key) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        acc.push({\n          key: key,\n          index: index,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  return {\n    getRootProps: function getRootProps() {\n      var other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        'aria-owns': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        role: 'combobox',\n        'aria-expanded': popupOpen\n      }, other, {\n        onKeyDown: handleKeyDown(other),\n        onMouseDown: handleMouseDown,\n        onClick: handleClick\n      });\n    },\n    getInputLabelProps: function getInputLabelProps() {\n      return {\n        id: \"\".concat(id, \"-label\"),\n        htmlFor: id\n      };\n    },\n    getInputProps: function getInputProps() {\n      return {\n        id: id,\n        value: inputValue,\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onChange: handleInputChange,\n        onMouseDown: handleInputMouseDown,\n        // if open then this is handled imperativeley so don't let react override\n        // only have an opinion about this when closed\n        'aria-activedescendant': popupOpen ? '' : null,\n        'aria-autocomplete': autoComplete ? 'both' : 'list',\n        'aria-controls': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        // Disable browser's suggestion that might overlap with the popup.\n        // Handle autocomplete but not autofill.\n        autoComplete: 'off',\n        ref: inputRef,\n        autoCapitalize: 'none',\n        spellCheck: 'false'\n      };\n    },\n    getClearProps: function getClearProps() {\n      return {\n        tabIndex: -1,\n        onClick: handleClear\n      };\n    },\n    getPopupIndicatorProps: function getPopupIndicatorProps() {\n      return {\n        tabIndex: -1,\n        onClick: handlePopupIndicator\n      };\n    },\n    getTagProps: function getTagProps(_ref2) {\n      var index = _ref2.index;\n      return {\n        key: index,\n        'data-tag-index': index,\n        tabIndex: -1,\n        onDelete: handleTagDelete(index)\n      };\n    },\n    getListboxProps: function getListboxProps() {\n      return {\n        role: 'listbox',\n        id: \"\".concat(id, \"-popup\"),\n        'aria-labelledby': \"\".concat(id, \"-label\"),\n        ref: handleListboxRef,\n        onMouseDown: function onMouseDown(event) {\n          // Prevent blur\n          event.preventDefault();\n        }\n      };\n    },\n    getOptionProps: function getOptionProps(_ref3) {\n      var index = _ref3.index,\n          option = _ref3.option;\n      var selected = (multiple ? value : [value]).some(function (value2) {\n        return value2 != null && getOptionSelected(option, value2);\n      });\n      var disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: index,\n        tabIndex: -1,\n        role: 'option',\n        id: \"\".concat(id, \"-option-\").concat(index),\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id: id,\n    inputValue: inputValue,\n    value: value,\n    dirty: dirty,\n    popupOpen: popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl: anchorEl,\n    setAnchorEl: setAnchorEl,\n    focusedTag: focusedTag,\n    groupedOptions: groupedOptions\n  };\n}\nuseAutocomplete.propTypes = {\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will ignore the blur event if the input if filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   */\n  debug: PropTypes.bool,\n\n  /**\n   * The default input value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the input can't be cleared.\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't open on input focus.\n   */\n  disableOpenOnFocus: PropTypes.bool,\n\n  /**\n   * A filter function that determins the options that are eligible.\n   *\n   * @param {any} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {boolean}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {any} options The option to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {any} value\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the text input value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {string} value The new value of the text input\n   * @param {string} reason One of \"input\" (user input) or \"reset\" (programmatic change)\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control the popup` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any\n};"]},"metadata":{},"sourceType":"module"}