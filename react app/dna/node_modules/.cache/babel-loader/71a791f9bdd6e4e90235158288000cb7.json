{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\icom\\\\myProjects\\\\DNA\\\\react app\\\\dna\\\\src\\\\profile\\\\Profile.js\";\nimport React from 'react';\nimport './profile.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Radar } from 'react-chartjs-2';\ndefaults.scale.ticks.suggestedMax = 100;\n\nclass Profile extends React.Component {\n  constructor() {\n    super();\n\n    this.getStudents = result => {\n      var temp = [];\n      console.log(result);\n    };\n\n    this.connectToPerformance = () => {\n      fetch('http://127.0.0.1:8000/performance/?student=' + this.state.default_student).then(res => res.json()).then(result => {\n        this.getStudents(result);\n      });\n    };\n\n    this.connectToCourses = () => {\n      fetch('http://127.0.0.1:8000/courses/').then(res => res.json()).then(result => {\n        this.getSemesterCourses(result);\n      });\n    };\n\n    this.state = {\n      default_student: 14011599308\n    };\n  }\n\n  componentDidMount() {\n    this.connectToPerformance();\n  }\n\n  render() {\n    const greenBarColor = \"#18BD9B\";\n    const redBarColor = \"#E54787\";\n    const whiteBarColor = \"#E7E7EB\";\n    const orangeBarColor = \"#FC7C00\";\n    return React.createElement(\"div\", {\n      className: \"Profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group search-student\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \" input-group-text\",\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"text-dark\",\n      type: \"text\",\n      value: this.state.default_student,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))), React.createElement(\"article\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Radar, {\n      data: {\n        labels: ['A', 'B', 'C', 'D', 'L', 'M', 'Q'],\n        datasets: [{\n          label: \"TP \",\n          backgroundColor: greenBarColor,\n          data: [10, 12, 23]\n        }, {\n          label: \"TD \",\n          backgroundColor: redBarColor,\n          data: [10, 12, 23]\n        }, {\n          label: \"EXAM \",\n          backgroundColor: whiteBarColor,\n          data: [10, 12, 23]\n        }, {\n          label: \"AVG\",\n          backgroundColor: orangeBarColor,\n          data: [10, 12, 23]\n        }],\n        options: [{\n          scale: {\n            angleLines: {\n              display: false\n            },\n            ticks: {\n              suggestedMin: 3,\n              suggestedMax: 50\n            }\n          }\n        }]\n      },\n      width: 300,\n      height: 300,\n      options: {\n        maintainAspectRatio: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(\"article\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/icom/myProjects/DNA/react app/dna/src/profile/Profile.js"],"names":["React","Radar","defaults","scale","ticks","suggestedMax","Profile","Component","constructor","getStudents","result","temp","console","log","connectToPerformance","fetch","state","default_student","then","res","json","connectToCourses","getSemesterCourses","componentDidMount","render","greenBarColor","redBarColor","whiteBarColor","orangeBarColor","labels","datasets","label","backgroundColor","data","options","angleLines","display","suggestedMin","maintainAspectRatio"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AAEA,OAAO,sCAAP;AAEA,SAASC,KAAT,QAAsB,iBAAtB;AACAC,QAAQ,CAACC,KAAT,CAAeC,KAAf,CAAqBC,YAArB,GAAoC,GAApC;;AACA,MAAMC,OAAN,SAAsBN,KAAK,CAACO,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,GAAE;AACX;;AADW,SAObC,WAPa,GAOEC,MAAD,IAAU;AACrB,UAAIC,IAAI,GAAG,EAAX;AAEEC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAGJ,KAbY;;AAAA,SAebI,oBAfa,GAeU,MAAI;AAE3BC,MAAAA,KAAK,CAAC,gDAA8C,KAAKC,KAAL,CAAWC,eAA1D,CAAL,CACEC,IADF,CACOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADd,EAEEF,IAFF,CAGIR,MAAM,IAAG;AACP,aAAKD,WAAL,CAAiBC,MAAjB;AACD,OALL;AAOC,KAxBY;;AAAA,SA0BbW,gBA1Ba,GA0BM,MAAI;AAErBN,MAAAA,KAAK,CAAC,gCAAD,CAAL,CACEG,IADF,CACOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADd,EAEEF,IAFF,CAGIR,MAAM,IAAG;AACP,aAAKY,kBAAL,CAAwBZ,MAAxB;AACD,OALL;AAOC,KAnCU;;AAEX,SAAKM,KAAL,GAAa;AAEXC,MAAAA,eAAe,EAAE;AAFN,KAAb;AAID;;AA+BDM,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,oBAAL;AACD;;AACDU,EAAAA,MAAM,GAAE;AACN,UAAMC,aAAa,GAAG,SAAtB;AACA,UAAMC,WAAW,GAAG,SAApB;AACA,UAAMC,aAAa,GAAG,SAAtB;AACA,UAAMC,cAAc,GAAG,SAAvB;AACA,WAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAQ,MAAA,SAAS,EAAC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAsC,MAAA,IAAI,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA;AAAO,MAAA,SAAS,EAAC,WAAjB;AAA6B,MAAA,IAAI,EAAC,MAAlC;AAAyC,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC,eAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADA,CALF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC,oBAAC,KAAD;AACE,MAAA,IAAI,EAAE;AAAEY,QAAAA,MAAM,EAAE,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,CAAV;AACEC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,KADT;AAEEC,UAAAA,eAAe,EAAEP,aAFnB;AAGEQ,UAAAA,IAAI,EAAG,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP;AAHT,SADQ,EAMN;AACAF,UAAAA,KAAK,EAAE,KADP;AAEAC,UAAAA,eAAe,EAAEN,WAFjB;AAGAO,UAAAA,IAAI,EAAG,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP;AAHP,SANM,EAWN;AACAF,UAAAA,KAAK,EAAE,OADP;AAEAC,UAAAA,eAAe,EAAEL,aAFjB;AAGAM,UAAAA,IAAI,EAAE,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP;AAHN,SAXM,EAgBN;AACAF,UAAAA,KAAK,EAAE,KADP;AAEAC,UAAAA,eAAe,EAAEJ,cAFjB;AAGAK,UAAAA,IAAI,EAAE,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP;AAHN,SAhBM,CADZ;AAwBEC,QAAAA,OAAO,EAAG,CACR;AACA/B,UAAAA,KAAK,EAAE;AACPgC,YAAAA,UAAU,EAAE;AACRC,cAAAA,OAAO,EAAE;AADD,aADL;AAIPhC,YAAAA,KAAK,EAAE;AACHiC,cAAAA,YAAY,EAAE,CADX;AAEHhC,cAAAA,YAAY,EAAE;AAFX;AAJA;AADP,SADQ;AAxBZ,OADR;AAsCE,MAAA,KAAK,EAAE,GAtCT;AAuCE,MAAA,MAAM,EAAE,GAvCV;AAwCE,MAAA,OAAO,EAAE;AAAEiC,QAAAA,mBAAmB,EAAE;AAAvB,OAxCX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CAFD,EA+CC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/CD,CAjBF,EAuEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CAvEF,CAFF;AA+ED;;AA7HmC;;AAiItC,eAAgBhC,OAAhB","sourcesContent":["import React from 'react';\r\nimport './profile.css';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { Radar } from 'react-chartjs-2';\r\ndefaults.scale.ticks.suggestedMax = 100\r\nclass Profile extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n\r\n      default_student: 14011599308\r\n    }\r\n  }\r\n  getStudents = (result)=>{\r\n     var temp = []\r\n\r\n       console.log(result)\r\n     \r\n      \r\n  }\r\n\r\n  connectToPerformance = ()=>{\r\n    \r\n  fetch('http://127.0.0.1:8000/performance/?student='+this.state.default_student).\r\n    then(res => res.json()).\r\n    then(\r\n      result =>{\r\n        this.getStudents(result)    \r\n      }\r\n    )\r\n  }\r\n\r\n  connectToCourses = ()=>{\r\n    \r\n    fetch('http://127.0.0.1:8000/courses/').\r\n      then(res => res.json()).\r\n      then(\r\n        result =>{\r\n          this.getSemesterCourses(result)    \r\n        }\r\n      )\r\n    }\r\n\r\n  componentDidMount() {\r\n    this.connectToPerformance()\r\n  }\r\n  render(){\r\n    const greenBarColor = \"#18BD9B\"\r\n    const redBarColor = \"#E54787\"\r\n    const whiteBarColor = \"#E7E7EB\"\r\n    const orangeBarColor = \"#FC7C00\"\r\n    return (\r\n      \r\n      <div className=\"Profile\">\r\n        { \r\n          /* the header we can choose a student */\r\n        }\r\n\r\n        <header className=\"\">\r\n        <div className=\"form-group search-student\">\r\n        <input  className=\" input-group-text\" type=\"button\"/>\r\n        <input className=\"text-dark\" type=\"text\" value={this.state.default_student} />\r\n        \r\n        </div>   \r\n        </header>\r\n\r\n        { \r\n          /* here you can see a radar about student performance in courses */\r\n        }\r\n\r\n        <article>\r\n\r\n         <section>\r\n         \r\n          <Radar                             \r\n            data={{ labels :['A','B','C','D','L','M','Q'],  \r\n                    datasets: [\r\n                      { \r\n                        label: \"TP \",\r\n                        backgroundColor: greenBarColor,\r\n                        data : [10,12,23]\r\n                        },\r\n                        { \r\n                        label: \"TD \",\r\n                        backgroundColor: redBarColor,\r\n                        data : [10,12,23]\r\n                        },\r\n                        { \r\n                        label: \"EXAM \",\r\n                        backgroundColor: whiteBarColor,\r\n                        data :[10,12,23]\r\n                        },\r\n                        { \r\n                        label: \"AVG\",\r\n                        backgroundColor: orangeBarColor,\r\n                        data :[10,12,23]\r\n                        }\r\n                    ],\r\n\r\n                    options : [\r\n                      {\r\n                      scale: {\r\n                      angleLines: {\r\n                          display: false\r\n                      },\r\n                      ticks: {\r\n                          suggestedMin: 3,\r\n                          suggestedMax: 50\r\n                      }\r\n                    }}]\r\n    \r\n            }}                     \r\n            width={300}\r\n            height={300}\r\n            options={{ maintainAspectRatio: false }}\r\n          />\r\n              </section>\r\n         <section></section>\r\n        </article>\r\n\r\n        { \r\n          /* more details info */\r\n        }\r\n        \r\n        <article>\r\n         <section></section>\r\n         <section></section>\r\n        </article>\r\n      </div>\r\n    );\r\n  }\r\n \r\n}\r\n\r\nexport default  Profile;\r\n"]},"metadata":{},"sourceType":"module"}