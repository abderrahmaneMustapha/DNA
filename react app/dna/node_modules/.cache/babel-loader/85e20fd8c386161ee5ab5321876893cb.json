{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticEvent\n * @typechecks static-only\n */\n'use strict';\n\nvar PooledClass = require('./PooledClass');\n\nvar assign = require('./Object.assign');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\n\nvar warning = require('fbjs/lib/warning');\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\n\nvar EventInterface = {\n  type: null,\n  target: null,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: emptyFunction.thatReturnsNull,\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function (event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n */\n\nfunction SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  this.dispatchConfig = dispatchConfig;\n  this.dispatchMarker = dispatchMarker;\n  this.nativeEvent = nativeEvent;\n  var Interface = this.constructor.Interface;\n\n  for (var propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n\n    var normalize = Interface[propName];\n\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      if (propName === 'target') {\n        this.target = nativeEventTarget;\n      } else {\n        this[propName] = nativeEvent[propName];\n      }\n    }\n  }\n\n  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n\n  if (defaultPrevented) {\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n  }\n\n  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n}\n\nassign(SyntheticEvent.prototype, {\n  preventDefault: function () {\n    this.defaultPrevented = true;\n    var event = this.nativeEvent;\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\\'re ' + 'seeing this, you\\'re calling `preventDefault` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;\n    }\n\n    if (!event) {\n      return;\n    }\n\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else {\n      event.returnValue = false;\n    }\n\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  },\n  stopPropagation: function () {\n    var event = this.nativeEvent;\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\\'re ' + 'seeing this, you\\'re calling `stopPropagation` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;\n    }\n\n    if (!event) {\n      return;\n    }\n\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else {\n      event.cancelBubble = true;\n    }\n\n    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function () {\n    this.isPersistent = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: emptyFunction.thatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function () {\n    var Interface = this.constructor.Interface;\n\n    for (var propName in Interface) {\n      this[propName] = null;\n    }\n\n    this.dispatchConfig = null;\n    this.dispatchMarker = null;\n    this.nativeEvent = null;\n  }\n});\nSyntheticEvent.Interface = EventInterface;\n/**\n * Helper to reduce boilerplate when creating subclasses.\n *\n * @param {function} Class\n * @param {?object} Interface\n */\n\nSyntheticEvent.augmentClass = function (Class, Interface) {\n  var Super = this;\n  var prototype = Object.create(Super.prototype);\n  assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n  Class.Interface = assign({}, Super.Interface, Interface);\n  Class.augmentClass = Super.augmentClass;\n  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);\n};\n\nPooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);\nmodule.exports = SyntheticEvent;","map":{"version":3,"sources":["C:/Users/icom/myProjects/DNA/react app/dna/node_modules/react-holder/node_modules/react/lib/SyntheticEvent.js"],"names":["PooledClass","require","assign","emptyFunction","warning","EventInterface","type","target","currentTarget","thatReturnsNull","eventPhase","bubbles","cancelable","timeStamp","event","Date","now","defaultPrevented","isTrusted","SyntheticEvent","dispatchConfig","dispatchMarker","nativeEvent","nativeEventTarget","Interface","constructor","propName","hasOwnProperty","normalize","returnValue","isDefaultPrevented","thatReturnsTrue","thatReturnsFalse","isPropagationStopped","prototype","preventDefault","process","env","NODE_ENV","undefined","stopPropagation","cancelBubble","persist","isPersistent","destructor","augmentClass","Class","Super","Object","create","addPoolingTo","fourArgumentPooler","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar PooledClass = require('./PooledClass');\n\nvar assign = require('./Object.assign');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar EventInterface = {\n  type: null,\n  target: null,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: emptyFunction.thatReturnsNull,\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function (event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n */\nfunction SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  this.dispatchConfig = dispatchConfig;\n  this.dispatchMarker = dispatchMarker;\n  this.nativeEvent = nativeEvent;\n\n  var Interface = this.constructor.Interface;\n  for (var propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n    var normalize = Interface[propName];\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      if (propName === 'target') {\n        this.target = nativeEventTarget;\n      } else {\n        this[propName] = nativeEvent[propName];\n      }\n    }\n  }\n\n  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n  if (defaultPrevented) {\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n  }\n  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n}\n\nassign(SyntheticEvent.prototype, {\n\n  preventDefault: function () {\n    this.defaultPrevented = true;\n    var event = this.nativeEvent;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\\'re ' + 'seeing this, you\\'re calling `preventDefault` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;\n    }\n    if (!event) {\n      return;\n    }\n\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else {\n      event.returnValue = false;\n    }\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  },\n\n  stopPropagation: function () {\n    var event = this.nativeEvent;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\\'re ' + 'seeing this, you\\'re calling `stopPropagation` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;\n    }\n    if (!event) {\n      return;\n    }\n\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else {\n      event.cancelBubble = true;\n    }\n    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function () {\n    this.isPersistent = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: emptyFunction.thatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function () {\n    var Interface = this.constructor.Interface;\n    for (var propName in Interface) {\n      this[propName] = null;\n    }\n    this.dispatchConfig = null;\n    this.dispatchMarker = null;\n    this.nativeEvent = null;\n  }\n\n});\n\nSyntheticEvent.Interface = EventInterface;\n\n/**\n * Helper to reduce boilerplate when creating subclasses.\n *\n * @param {function} Class\n * @param {?object} Interface\n */\nSyntheticEvent.augmentClass = function (Class, Interface) {\n  var Super = this;\n\n  var prototype = Object.create(Super.prototype);\n  assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n\n  Class.Interface = assign({}, Super.Interface, Interface);\n  Class.augmentClass = Super.augmentClass;\n\n  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);\n};\n\nPooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);\n\nmodule.exports = SyntheticEvent;"]},"metadata":{},"sourceType":"script"}