{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\icom\\\\myProjects\\\\DNA\\\\react app\\\\dna\\\\src\\\\dashboard\\\\Dashboard.js\";\nimport React from 'react';\nimport './dashboard.css';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { HorizontalBar, defaults } from 'react-chartjs-2';\ndefaults.global.defaultFontColor = '#E7E7EB';\n\nclass Dashboard extends React.Component {\n  constructor() {\n    super();\n\n    this.calculatebestcourses = result => {\n      var temp = [];\n\n      for (var i = 0; i < result.length; i++) {\n        var id = result[i][\"cours_id\"];\n        var admis = result[i].admis_number;\n        var total = result[i].student_number;\n        temp.push({\n          \"id\": id,\n          \"winrate\": (admis / total).toFixed(2) * 100\n        });\n      }\n\n      temp.sort((a, b) => {\n        return b.winrate - a.winrate;\n      });\n      var best_temp = [];\n      var winrate_temp = [];\n\n      for (var i = 0; i < temp.length; i++) {\n        best_temp.push(temp[i]['id']);\n        winrate_temp.push(temp[i]['winrate']);\n      }\n\n      this.setState({\n        best_courses: [...best_temp],\n        best_courses_winrate: [...winrate_temp]\n      });\n    };\n\n    this.calculatepopularfield = result => {\n      var temp = [];\n      var bac_fields = [{\n        \"path_id\": 1,\n        \"path_name\": \"S\"\n      }, {\n        \"path_id\": 2,\n        \"path_name\": \"M\"\n      }, {\n        \"path_id\": 4,\n        \"path_name\": \"TM\"\n      }, {\n        \"path_id\": 5,\n        \"path_name\": \"other\"\n      }];\n\n      for (var i = 0; i < bac_fields.length; i++) {\n        var count = 0;\n\n        for (var j = 0; j < result.length; j++) {\n          if (bac_fields[i]['path_id'] == result[j]['highshcool_path']) {\n            count++;\n          }\n        }\n      }\n\n      temp.sort((a, b) => {\n        return b.winrate - a.winrate;\n      });\n    };\n\n    this.connectToBestCourses = () => {\n      fetch('http://127.0.0.1:8000/best_courses/').then(res => res.json()).then(result => {\n        this.calculatebestcourses(result);\n      });\n    };\n\n    this.connectToBac = () => {\n      fetch('http://127.0.0.1:8000/bac/').then(res => res.json()).then(result => {\n        this.calculatepopularfield(result);\n      });\n    };\n\n    this.state = {\n      best_courses: [],\n      best_courses_winrate: [],\n      popular_fields: [],\n      popular_fields_number: []\n    };\n  }\n\n  componentDidMount() {\n    this.connectToBestCourses();\n    this.connectToBac();\n  }\n\n  render() {\n    const cardWidth = \"25rem\";\n    const barColor = \"#18BD9B\";\n    return React.createElement(\"div\", {\n      className: \"Dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"article\", {\n      className: \"col-md-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"General Info\"), React.createElement(\"div\", {\n      id: \"general-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Card, {\n      id: \"best-courses\",\n      style: {\n        width: cardWidth\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(HorizontalBar, {\n      data: {\n        labels: this.state.best_courses.slice(0, 5),\n        datasets: [{\n          label: \"Top 5 Admis Percentage since 2010 \",\n          backgroundColor: barColor,\n          data: this.state.best_courses_winrate.slice(0, 5)\n        }]\n      },\n      width: 100,\n      height: 200,\n      options: {\n        maintainAspectRatio: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }))), React.createElement(Card, {\n      id: \"popular-bacfield\",\n      style: {\n        width: cardWidth\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(HorizontalBar, {\n      data: {\n        labels: this.state.best_courses.slice(0, 5),\n        datasets: [{\n          label: \"Most popular bac field since 2010\",\n          backgroundColor: barColor,\n          data: this.state.best_courses_winrate.slice(0, 5)\n        }]\n      },\n      width: 100,\n      height: 200,\n      options: {\n        maintainAspectRatio: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }))), React.createElement(Card, {\n      id: \"best-bacfield\",\n      style: {\n        width: cardWidth\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(HorizontalBar, {\n      data: {\n        labels: this.state.best_courses.slice(0, 5),\n        datasets: [{\n          label: \"Top  bac field since 2010\",\n          backgroundColor: barColor,\n          data: this.state.best_courses_winrate.slice(0, 5)\n        }]\n      },\n      width: 100,\n      height: 200,\n      options: {\n        maintainAspectRatio: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }))), React.createElement(Card, {\n      id: \"best-gender\",\n      style: {\n        width: cardWidth\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(HorizontalBar, {\n      data: {\n        labels: this.state.best_courses.slice(0, 5),\n        datasets: [{\n          label: \"Male Vs Female Admis since  2010\",\n          backgroundColor: barColor,\n          data: this.state.best_courses_winrate.slice(0, 5)\n        }]\n      },\n      width: 100,\n      height: 200,\n      options: {\n        maintainAspectRatio: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }))))), React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"header2\"), React.createElement(\"div\", {\n      id: \"year-analysis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }))), React.createElement(\"aside\", {\n      className: \"col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/icom/myProjects/DNA/react app/dna/src/dashboard/Dashboard.js"],"names":["React","Card","HorizontalBar","defaults","global","defaultFontColor","Dashboard","Component","constructor","calculatebestcourses","result","temp","i","length","id","admis","admis_number","total","student_number","push","toFixed","sort","a","b","winrate","best_temp","winrate_temp","setState","best_courses","best_courses_winrate","calculatepopularfield","bac_fields","count","j","connectToBestCourses","fetch","then","res","json","connectToBac","state","popular_fields","popular_fields_number","componentDidMount","render","cardWidth","barColor","width","labels","slice","datasets","label","backgroundColor","data","maintainAspectRatio"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './dashboard.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { HorizontalBar,defaults } from 'react-chartjs-2';\r\ndefaults.global.defaultFontColor = '#E7E7EB';\r\nclass Dashboard extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      best_courses : [],\r\n      best_courses_winrate: [],\r\n      popular_fields : [],\r\n      popular_fields_number : [],\r\n\r\n    }\r\n  }\r\n\r\n\r\n calculatebestcourses = (result)=>{   \r\n  \r\n    var temp = []\r\n    for(var i=0; i< result.length;i++){\r\n      var id = result[i][\"cours_id\"]\r\n      var admis = result[i].admis_number\r\n      var total = result[i].student_number\r\n      temp.push({\"id\":id, \"winrate\": (admis/total).toFixed(2) * 100})\r\n    }\r\n    temp.sort((a,b)=> {\r\n      return b.winrate - a.winrate\r\n    })\r\n    var best_temp = []\r\n    var winrate_temp = []\r\n    for(var i=0; i< temp.length;i++){\r\n      best_temp.push(temp[i]['id'])\r\n      winrate_temp.push(temp[i]['winrate'])\r\n    }\r\n    this.setState({\r\n      best_courses:[...best_temp] ,\r\n      best_courses_winrate: [...winrate_temp],\r\n    })    \r\n}\r\n\r\ncalculatepopularfield = (result)=>{\r\n  var temp = []\r\n  var bac_fields = [\r\n    {\r\n      \"path_id\": 1,\r\n      \"path_name\": \"S\"\r\n  },\r\n  {\r\n      \"path_id\": 2,\r\n      \"path_name\": \"M\"\r\n  },\r\n  {\r\n      \"path_id\": 4,\r\n      \"path_name\": \"TM\"\r\n  },\r\n  {\r\n      \"path_id\": 5,\r\n      \"path_name\": \"other\"\r\n  }\r\n  ]\r\n    \r\n    for(var i=0; i< bac_fields.length;i++){\r\n      var count = 0\r\n      for(var j=0; j<result.length;j++){\r\n        if(bac_fields[i]['path_id'] == result[j]['highshcool_path']){\r\n          count++\r\n        }\r\n      }\r\n      \r\n      \r\n    }\r\n    temp.sort((a,b)=> {\r\n      return b.winrate - a.winrate\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nconnectToBestCourses = ()=>{\r\n  fetch('http://127.0.0.1:8000/best_courses/').\r\nthen(res => res.json()).\r\nthen(\r\n  result =>{\r\n    this.calculatebestcourses(result)\r\n   \r\n  }\r\n)\r\n}\r\n\r\nconnectToBac = ()=>{\r\n  fetch('http://127.0.0.1:8000/bac/').\r\n  then(res => res.json()).\r\n  then(\r\n    result =>{\r\n      this.calculatepopularfield(result)\r\n     \r\n    }\r\n  )\r\n}\r\n\r\n  componentDidMount() {\r\n    this.connectToBestCourses()\r\n    this.connectToBac()\r\n  }\r\n  render(){\r\n    const cardWidth = \"25rem\"\r\n    const barColor = \"#18BD9B\"\r\n    return (\r\n      <div className=\"Dashboard\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n\r\n            <article className=\"col-md-10\">\r\n\r\n              <section>\r\n                <header className=\"text-center\">General Info</header>\r\n                  <div id=\"general-info\">\r\n                  <Card id=\"best-courses\"  style={{ width: cardWidth}}>\r\n                    <Card.Body>\r\n                        <HorizontalBar\r\n                               \r\n            \r\n                        data={{ labels : this.state.best_courses.slice(0,5),  \r\n                                datasets: [\r\n                                  { \r\n                                    label: \"Top 5 Admis Percentage since 2010 \",\r\n                                    backgroundColor: barColor,\r\n                                    data : this.state.best_courses_winrate.slice(0,5)\r\n                                     }\r\n                                ]\r\n                        }}                      \r\n\r\n                        width={100}\r\n                        height={200}\r\n                        options={{ maintainAspectRatio: false }}\r\n                        />\r\n                    </Card.Body>\r\n                  </Card>\r\n\r\n\r\n                  <Card id=\"popular-bacfield\"  style={{ width: cardWidth }}>\r\n                    <Card.Body>\r\n                    <HorizontalBar                              \r\n                      data={{ labels : this.state.best_courses.slice(0,5),  \r\n                              datasets: [\r\n                                { \r\n                                  label: \"Most popular bac field since 2010\",\r\n                                  backgroundColor: barColor,\r\n                                  data : this.state.best_courses_winrate.slice(0,5)\r\n                                  }\r\n                              ]\r\n                      }}                      \r\n\r\n                      width={100}\r\n                      height={200}\r\n                      options={{ maintainAspectRatio: false }}\r\n                      />\r\n                    </Card.Body>\r\n                  </Card>\r\n                  <Card id=\"best-bacfield\"  style={{ width: cardWidth }}>\r\n                    <Card.Body>\r\n                    <HorizontalBar                              \r\n                      data={{ labels : this.state.best_courses.slice(0,5),  \r\n                              datasets: [\r\n                                { \r\n                                  label: \"Top  bac field since 2010\",\r\n                                  backgroundColor: barColor,\r\n                                  data : this.state.best_courses_winrate.slice(0,5)\r\n                                  }\r\n                              ]\r\n                      }}                      \r\n\r\n                      width={100}\r\n                      height={200}\r\n                      options={{ maintainAspectRatio: false }}\r\n                      />\r\n                    </Card.Body>\r\n                  </Card>\r\n                  <Card id=\"best-gender\"  style={{ width: cardWidth }}>\r\n                    <Card.Body>\r\n                    <HorizontalBar                              \r\n                      data={{ labels : this.state.best_courses.slice(0,5),  \r\n                              datasets: [\r\n                                { \r\n                                  label: \"Male Vs Female Admis since  2010\",\r\n                                  backgroundColor: barColor,\r\n                                  data : this.state.best_courses_winrate.slice(0,5)\r\n                                  }\r\n                              ]\r\n                      }}                      \r\n\r\n                      width={100}\r\n                      height={200}\r\n                      options={{ maintainAspectRatio: false }}\r\n                      />\r\n                    </Card.Body>\r\n                  </Card>\r\n                  </div>              \r\n              </section>\r\n\r\n              <section>\r\n                <header>header2</header>\r\n                <div id=\"year-analysis\"></div>\r\n              </section>  \r\n\r\n            </article>\r\n\r\n            <aside className=\"col-md-2\">\r\n\r\n              <div>\r\n\r\n              </div>\r\n            </aside>\r\n\r\n          </div>    \r\n        </div>\r\n      </div>\r\n      \r\n      \r\n    );\r\n  }\r\n \r\n}\r\n\r\nexport default  Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}