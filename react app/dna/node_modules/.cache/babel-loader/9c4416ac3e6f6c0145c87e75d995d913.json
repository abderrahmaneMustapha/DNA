{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\icom\\\\myProjects\\\\DNA\\\\react app\\\\dna\\\\src\\\\profile\\\\Profile.js\";\nimport React from 'react';\nimport './profile.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Card from 'react-bootstrap/Card';\nimport { Radar, defaults } from 'react-chartjs-2';\ndefaults.scale.ticks.suggestedMax = 20;\n\nclass Profile extends React.Component {\n  constructor() {\n    super();\n\n    this.getStudents = result => {\n      var temp = [];\n    };\n\n    this.getSemesterCourses = result => {\n      console.log(result);\n    };\n\n    this.getUnivFields = result => {\n      var semesters = [1, 2, 3, 4, 5, 6];\n\n      for (var i = 0; i < result.length; i++) {\n        if (result[i]['field_id'] == 17) {\n          result[i]['semesters'] = [...semesters];\n        } else {\n          result[i]['semesters'] = [...semesters.slice(0, 4)];\n        }\n      }\n\n      this.setState({\n        'study_fields': [...result]\n      });\n    };\n\n    this.connectToPerformance = () => {\n      fetch('http://127.0.0.1:8000/performance/?student=' + this.state.default_student).then(res => res.json()).then(result => {\n        this.getStudents(result);\n      });\n    };\n\n    this.connectToCourses = () => {\n      let semester = parseInt(this.state.default_semester);\n      let field = parseInt(this.state.default_study_field);\n      fetch('http://127.0.0.1:8000/courses/?semestre=' + semester + '&study_field=').then(res => res.json()).then(result => {\n        this.getSemesterCourses(result);\n      });\n    };\n\n    this.connectToStudyFields = () => {\n      fetch('http://127.0.0.1:8000/univ_field/').then(res => res.json()).then(result => {\n        this.getUnivFields(result);\n      });\n    };\n\n    this.handleClickSemester = e => {\n      let field = e.target.firstChild.value;\n      let semester = e.target.lastChild;\n      this.setState({\n        default_semester: field,\n        default_study_field: semester\n      });\n      this.connectToCourses();\n    };\n\n    this.state = {\n      default_student: 14011599308,\n      default_semester: 1,\n      default_study_field: 17,\n      study_fields: []\n    };\n    this.handleClickSemester = this.handleClickSemester.bind(this);\n  }\n\n  componentDidMount() {\n    this.connectToStudyFields();\n    this.connectToPerformance();\n    this.connectToCourses();\n  }\n\n  semestersList() {\n    return this.state.study_fields.map(element => React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, element['name'], \" semsters\"), React.createElement(\"ul\", {\n      id: \"semesters\",\n      className: \"list-group flex-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, element.semesters.map(s => React.createElement(\"li\", {\n      className: \"list-group-item\",\n      onClick: this.handleClickSemester,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: element['field_id'],\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), s)))));\n  }\n\n  render() {\n    const greenBarColor = \"#18BD9B\";\n    const redBarColor = \"#E54787\";\n    const whiteBarColor = \"#E7E7EB\";\n    const orangeBarColor = \"#FC7C00\";\n    const semestersList = this.semestersList();\n    const cardWidth = \"22rem\";\n    return React.createElement(\"div\", {\n      className: \"Profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group search-student\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \" input-group-text\",\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"text-dark\",\n      type: \"text\",\n      value: this.state.default_student,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }))), React.createElement(\"article\", {\n      className: \"semster-module\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      id: \"semesters_list\",\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, semestersList)))), React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Card, {\n      id: \"best-courses\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Radar, {\n      data: {\n        labels: ['A', 'B', 'C', 'D', 'L', 'M', 'Q'],\n        datasets: [{\n          label: \"TP \",\n          borderColor: greenBarColor,\n          data: [10, 12, 20],\n          fill: false\n        }, {\n          label: \"TD \",\n          borderColor: redBarColor,\n          data: [10, 12, 20],\n          fill: false\n        }, {\n          label: \"EXAM \",\n          borderColor: whiteBarColor,\n          data: [10, 12, 20],\n          fill: false\n        }, {\n          label: \"AVG\",\n          borderColor: orangeBarColor,\n          data: [10, 12, 20],\n          fill: false\n        }]\n      },\n      width: 300,\n      height: 300,\n      options: {\n        maintainAspectRatio: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }))))), React.createElement(\"article\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/icom/myProjects/DNA/react app/dna/src/profile/Profile.js"],"names":["React","Card","Radar","defaults","scale","ticks","suggestedMax","Profile","Component","constructor","getStudents","result","temp","getSemesterCourses","console","log","getUnivFields","semesters","i","length","slice","setState","connectToPerformance","fetch","state","default_student","then","res","json","connectToCourses","semester","parseInt","default_semester","field","default_study_field","connectToStudyFields","handleClickSemester","e","target","firstChild","value","lastChild","study_fields","bind","componentDidMount","semestersList","map","element","s","render","greenBarColor","redBarColor","whiteBarColor","orangeBarColor","cardWidth","labels","datasets","label","borderColor","data","fill","maintainAspectRatio"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AAEA,OAAO,sCAAP;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,KAAT,EAAeC,QAAf,QAA+B,iBAA/B;AACAA,QAAQ,CAACC,KAAT,CAAeC,KAAf,CAAqBC,YAArB,GAAoC,EAApC;;AACA,MAAMC,OAAN,SAAsBP,KAAK,CAACQ,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,GAAE;AACX;;AADW,SAYbC,WAZa,GAYEC,MAAD,IAAU;AACrB,UAAIC,IAAI,GAAG,EAAX;AAEF,KAfY;;AAAA,SAiBbC,kBAjBa,GAiBSF,MAAD,IAAU;AAC7BG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACD,KAnBY;;AAAA,SAqBbK,aArBa,GAqBIL,MAAD,IAAW;AACzB,UAAIM,SAAS,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAAhB;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAEP,MAAM,CAACQ,MAAtB,EAA8BD,CAAC,EAA/B,EAAkC;AAChC,YAAGP,MAAM,CAACO,CAAD,CAAN,CAAU,UAAV,KAAyB,EAA5B,EAA+B;AAC7BP,UAAAA,MAAM,CAACO,CAAD,CAAN,CAAU,WAAV,IAAyB,CAAC,GAAGD,SAAJ,CAAzB;AACD,SAFD,MAGI;AACFN,UAAAA,MAAM,CAACO,CAAD,CAAN,CAAU,WAAV,IAAyB,CAAC,GAAGD,SAAS,CAACG,KAAV,CAAgB,CAAhB,EAAkB,CAAlB,CAAJ,CAAzB;AACD;AACF;;AAEF,WAAKC,QAAL,CACE;AACC,wBAAgB,CAAC,GAAGV,MAAJ;AADjB,OADF;AAMA,KAtCY;;AAAA,SAwCbW,oBAxCa,GAwCU,MAAI;AAE3BC,MAAAA,KAAK,CAAC,gDAA8C,KAAKC,KAAL,CAAWC,eAA1D,CAAL,CACEC,IADF,CACOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADd,EAEEF,IAFF,CAGIf,MAAM,IAAG;AACP,aAAKD,WAAL,CAAiBC,MAAjB;AACD,OALL;AAOC,KAjDY;;AAAA,SAmDbkB,gBAnDa,GAmDM,MAAI;AACrB,UAAIC,QAAQ,GAAGC,QAAQ,CAAC,KAAKP,KAAL,CAAWQ,gBAAZ,CAAvB;AACA,UAAIC,KAAK,GAAIF,QAAQ,CAAC,KAAKP,KAAL,CAAWU,mBAAZ,CAArB;AACAX,MAAAA,KAAK,CAAC,6CAA2CO,QAA3C,GAAoD,eAArD,CAAL,CACEJ,IADF,CACOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADd,EAEEF,IAFF,CAGIf,MAAM,IAAG;AACP,aAAKE,kBAAL,CAAwBF,MAAxB;AACD,OALL;AAOC,KA7DU;;AAAA,SA+DXwB,oBA/DW,GA+DY,MAAI;AACzBZ,MAAAA,KAAK,CAAC,mCAAD,CAAL,CACAG,IADA,CACKC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADZ,EAEAF,IAFA,CAGEf,MAAM,IAAG;AACP,aAAKK,aAAL,CAAmBL,MAAnB;AACD,OALH;AAOD,KAvEU;;AAAA,SAgFbyB,mBAhFa,GAgFUC,CAAD,IAAK;AAC1B,UAAIJ,KAAK,GAAGI,CAAC,CAACC,MAAF,CAASC,UAAT,CAAoBC,KAAhC;AACA,UAAIV,QAAQ,GAAGO,CAAC,CAACC,MAAF,CAASG,SAAxB;AAEA,WAAKpB,QAAL,CAAc;AACbW,QAAAA,gBAAgB,EAAEC,KADL;AAEbC,QAAAA,mBAAmB,EAAGJ;AAFT,OAAd;AAKA,WAAKD,gBAAL;AACA,KA1FY;;AAEX,SAAKL,KAAL,GAAa;AACXC,MAAAA,eAAe,EAAE,WADN;AAEXO,MAAAA,gBAAgB,EAAE,CAFP;AAGXE,MAAAA,mBAAmB,EAAG,EAHX;AAIXQ,MAAAA,YAAY,EAAG;AAJJ,KAAb;AAOA,SAAKN,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBO,IAAzB,CAA8B,IAA9B,CAA3B;AACD;;AA+DDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,oBAAL;AACA,SAAKb,oBAAL;AACA,SAAKO,gBAAL;AAED;;AAcDgB,EAAAA,aAAa,GAAE;AACb,WAAO,KAAKrB,KAAL,CAAWkB,YAAX,CAAwBI,GAAxB,CAA6BC,OAAD,IACnC;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,OAAO,CAAC,MAAD,CAAX,cADA,EAEA;AAAI,MAAA,EAAE,EAAC,WAAP;AAAmB,MAAA,SAAS,EAAC,qBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,OAAO,CAAC9B,SAAR,CAAkB6B,GAAlB,CAAuBE,CAAD,IACtB;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAgC,MAAA,OAAO,EAAE,KAAKZ,mBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,KAAK,EAAEW,OAAO,CAAC,UAAD,CAAtB;AAAoC,MAAA,MAAM,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAECC,CAFD,CADA,CADH,CAFA,CADO,CAAP;AAaD;;AACDC,EAAAA,MAAM,GAAE;AACN,UAAMC,aAAa,GAAG,SAAtB;AACA,UAAMC,WAAW,GAAG,SAApB;AACA,UAAMC,aAAa,GAAG,SAAtB;AACA,UAAMC,cAAc,GAAG,SAAvB;AACA,UAAMR,aAAa,GAAG,KAAKA,aAAL,EAAtB;AAEA,UAAMS,SAAS,GAAG,OAAlB;AACA,WAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAQ,MAAA,SAAS,EAAC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAsC,MAAA,IAAI,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA;AAAO,MAAA,SAAS,EAAC,WAAjB;AAA6B,MAAA,IAAI,EAAC,MAAlC;AAAyC,MAAA,KAAK,EAAE,KAAK9B,KAAL,CAAWC,eAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADA,CALF,EAiBE;AAAS,MAAA,SAAS,EAAC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,EAAE,EAAC,gBAAP;AAAwB,MAAA,SAAS,EAAC,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCoB,aADD,CADF,CADJ,CADF,CAJF,EAgBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACE,MAAA,IAAI,EAAE;AAAEU,QAAAA,MAAM,EAAE,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,CAAV;AACEC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,KADT;AAEEC,UAAAA,WAAW,EAAER,aAFf;AAGES,UAAAA,IAAI,EAAG,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CAHT;AAIEC,UAAAA,IAAI,EAAG;AAJT,SADQ,EAON;AACAH,UAAAA,KAAK,EAAE,KADP;AAEAC,UAAAA,WAAW,EAAEP,WAFb;AAGAQ,UAAAA,IAAI,EAAG,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CAHP;AAIAC,UAAAA,IAAI,EAAG;AAJP,SAPM,EAaN;AACAH,UAAAA,KAAK,EAAE,OADP;AAEAC,UAAAA,WAAW,EAAEN,aAFb;AAGAO,UAAAA,IAAI,EAAE,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CAHN;AAIAC,UAAAA,IAAI,EAAG;AAJP,SAbM,EAmBN;AACAH,UAAAA,KAAK,EAAE,KADP;AAEAC,UAAAA,WAAW,EAAEL,cAFb;AAGAM,UAAAA,IAAI,EAAE,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CAHN;AAIAC,UAAAA,IAAI,EAAG;AAJP,SAnBM;AADZ,OADR;AA6BE,MAAA,KAAK,EAAE,GA7BT;AA8BE,MAAA,MAAM,EAAE,GA9BV;AA+BE,MAAA,OAAO,EAAE;AAAEC,QAAAA,mBAAmB,EAAE;AAAvB,OA/BX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADH,CADA,CAhBD,CAjBF,EA+EE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CA/EF,CAFF;AAuFD;;AA3MmC;;AA+MtC,eAAgBtD,OAAhB","sourcesContent":["import React from 'react';\r\nimport './profile.css';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Radar,defaults } from 'react-chartjs-2';\r\ndefaults.scale.ticks.suggestedMax = 20\r\nclass Profile extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      default_student: 14011599308,\r\n      default_semester: 1,\r\n      default_study_field : 17,\r\n      study_fields : [] \r\n        \r\n    }\r\n    this.handleClickSemester = this.handleClickSemester.bind(this);\r\n  }\r\n\r\n  getStudents = (result)=>{\r\n     var temp = []\r\n       \r\n  }\r\n\r\n  getSemesterCourses = (result)=>{\r\n    console.log(result)\r\n  }\r\n  \r\n  getUnivFields = (result) =>{\r\n    var semesters = [1,2,3,4,5,6]\r\n    for(var i=0;i< result.length; i++){\r\n      if(result[i]['field_id'] == 17){\r\n        result[i]['semesters'] = [...semesters]\r\n      }\r\n      else{\r\n        result[i]['semesters'] = [...semesters.slice(0,4)]\r\n      }\r\n    }\r\n   \r\n   this.setState(\r\n     {\r\n      'study_fields': [...result]\r\n     }\r\n   )\r\n  \r\n  }\r\n\r\n  connectToPerformance = ()=>{\r\n    \r\n  fetch('http://127.0.0.1:8000/performance/?student='+this.state.default_student).\r\n    then(res => res.json()).\r\n    then(\r\n      result =>{\r\n        this.getStudents(result)    \r\n      }\r\n    )\r\n  }\r\n\r\n  connectToCourses = ()=>{\r\n    let semester = parseInt(this.state.default_semester)\r\n    let field =  parseInt(this.state.default_study_field)\r\n    fetch('http://127.0.0.1:8000/courses/?semestre='+semester+'&study_field=').\r\n      then(res => res.json()).\r\n      then(\r\n        result =>{\r\n          this.getSemesterCourses(result)    \r\n        }\r\n      )\r\n    }\r\n\r\n    connectToStudyFields = ()=>{\r\n      fetch('http://127.0.0.1:8000/univ_field/').\r\n      then(res => res.json()).\r\n      then(\r\n        result =>{\r\n          this.getUnivFields(result)    \r\n        }\r\n      )\r\n    }\r\n\r\n  componentDidMount() {\r\n    this.connectToStudyFields()\r\n    this.connectToPerformance()\r\n    this.connectToCourses()\r\n   \r\n  }\r\n\r\n  handleClickSemester = (e)=>{\r\n   let field = e.target.firstChild.value\r\n   let semester = e.target.lastChild\r\n\r\n   this.setState({\r\n    default_semester: field,\r\n    default_study_field : semester,\r\n   })\r\n\r\n   this.connectToCourses()\r\n  }\r\n\r\n  semestersList(){     \r\n    return this.state.study_fields.map((element)=>\r\n    <li className=\"list-group-item\">   \r\n    <p>{element['name']} semsters</p>\r\n    <ul id=\"semesters\" className=\"list-group flex-row\">\r\n      {element.semesters.map((s)=>\r\n       <li className=\"list-group-item\" onClick={this.handleClickSemester}>\r\n       <input  value={element['field_id']} hidden/> \r\n       {s}</li>\r\n      )}\r\n    </ul>\r\n  \r\n  </li>\r\n    )\r\n  }\r\n  render(){\r\n    const greenBarColor = \"#18BD9B\"\r\n    const redBarColor = \"#E54787\"\r\n    const whiteBarColor = \"#E7E7EB\"\r\n    const orangeBarColor = \"#FC7C00\"\r\n    const semestersList = this.semestersList()\r\n\r\n    const cardWidth = \"22rem\"\r\n    return (\r\n      \r\n      <div className=\"Profile\">\r\n        { \r\n          /* the header we can choose a student */\r\n        }\r\n\r\n        <header className=\"\">\r\n        <div className=\"form-group search-student\">\r\n        <input  className=\" input-group-text\" type=\"button\"/>\r\n        <input className=\"text-dark\" type=\"text\" value={this.state.default_student} />\r\n        \r\n        </div>   \r\n        </header>\r\n\r\n        { \r\n          /* here you can see a radar about student performance in courses */\r\n        }\r\n\r\n        <article className=\"semster-module\">\r\n        {\r\n           /* semesters section */\r\n         }\r\n          <section>\r\n            <Card  >\r\n                <Card.Body>\r\n                  <ul id=\"semesters_list\" className=\"list-group\">\r\n                  {semestersList}\r\n                  </ul>      \r\n                </Card.Body>\r\n            </Card> \r\n          </section>\r\n         {\r\n           /* radar section */\r\n         }\r\n         <section>\r\n         <Card id=\"best-courses\">\r\n            <Card.Body>\r\n                <Radar                             \r\n                  data={{ labels :['A','B','C','D','L','M','Q'],  \r\n                          datasets: [\r\n                            { \r\n                              label: \"TP \",\r\n                              borderColor: greenBarColor,\r\n                              data : [10,12,20],\r\n                              fill : false\r\n                              },\r\n                              { \r\n                              label: \"TD \",\r\n                              borderColor: redBarColor,\r\n                              data : [10,12,20],\r\n                              fill : false\r\n                              },\r\n                              { \r\n                              label: \"EXAM \",\r\n                              borderColor: whiteBarColor,\r\n                              data :[10,12,20],\r\n                              fill : false\r\n                              },\r\n                              { \r\n                              label: \"AVG\",\r\n                              borderColor: orangeBarColor,\r\n                              data :[10,12,20],\r\n                              fill : false\r\n                              }\r\n                          ],    \r\n                  }}                     \r\n                  width={300}\r\n                  height={300}\r\n                  options={{ maintainAspectRatio: false }}\r\n                />\r\n           </Card.Body>\r\n          </Card>\r\n              </section>\r\n       \r\n        </article>\r\n\r\n        { \r\n          /* more details info */\r\n        }\r\n        \r\n        <article>\r\n         <section></section>\r\n         <section></section>\r\n        </article>\r\n      </div>\r\n    );\r\n  }\r\n \r\n}\r\n\r\nexport default  Profile;\r\n"]},"metadata":{},"sourceType":"module"}