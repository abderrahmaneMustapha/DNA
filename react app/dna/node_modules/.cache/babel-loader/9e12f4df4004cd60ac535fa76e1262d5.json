{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactBrowserEventEmitter\n * @typechecks static-only\n */\n'use strict';\n\nvar EventConstants = require('./EventConstants');\n\nvar EventPluginHub = require('./EventPluginHub');\n\nvar EventPluginRegistry = require('./EventPluginRegistry');\n\nvar ReactEventEmitterMixin = require('./ReactEventEmitterMixin');\n\nvar ReactPerf = require('./ReactPerf');\n\nvar ViewportMetrics = require('./ViewportMetrics');\n\nvar assign = require('./Object.assign');\n\nvar isEventSupported = require('./isEventSupported');\n/**\n * Summary of `ReactBrowserEventEmitter` event handling:\n *\n *  - Top-level delegation is used to trap most native browser events. This\n *    may only occur in the main thread and is the responsibility of\n *    ReactEventListener, which is injected and can therefore support pluggable\n *    event sources. This is the only work that occurs in the main thread.\n *\n *  - We normalize and de-duplicate events to account for browser quirks. This\n *    may be done in the worker thread.\n *\n *  - Forward these native events (with the associated top-level type used to\n *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n *    to extract any synthetic events.\n *\n *  - The `EventPluginHub` will then process each event by annotating them with\n *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n *\n *  - The `EventPluginHub` then dispatches the events.\n *\n * Overview of React and the event system:\n *\n * +------------+    .\n * |    DOM     |    .\n * +------------+    .\n *       |           .\n *       v           .\n * +------------+    .\n * | ReactEvent |    .\n * |  Listener  |    .\n * +------------+    .                         +-----------+\n *       |           .               +--------+|SimpleEvent|\n *       |           .               |         |Plugin     |\n * +-----|------+    .               v         +-----------+\n * |     |      |    .    +--------------+                    +------------+\n * |     +-----------.--->|EventPluginHub|                    |    Event   |\n * |            |    .    |              |     +-----------+  | Propagators|\n * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n * |            |    .    |              |     +-----------+  |  utilities |\n * |     +-----------.--->|              |                    +------------+\n * |     |      |    .    +--------------+\n * +-----|------+    .                ^        +-----------+\n *       |           .                |        |Enter/Leave|\n *       +           .                +-------+|Plugin     |\n * +-------------+   .                         +-----------+\n * | application |   .\n * |-------------|   .\n * |             |   .\n * |             |   .\n * +-------------+   .\n *                   .\n *    React Core     .  General Purpose Event Plugin System\n */\n\n\nvar alreadyListeningTo = {};\nvar isMonitoringScrollValue = false;\nvar reactTopListenersCounter = 0; // For events like 'submit' which don't consistently bubble (which we trap at a\n// lower node than `document`), binding at `document` would cause duplicate\n// events so we don't include them here\n\nvar topEventMapping = {\n  topAbort: 'abort',\n  topBlur: 'blur',\n  topCanPlay: 'canplay',\n  topCanPlayThrough: 'canplaythrough',\n  topChange: 'change',\n  topClick: 'click',\n  topCompositionEnd: 'compositionend',\n  topCompositionStart: 'compositionstart',\n  topCompositionUpdate: 'compositionupdate',\n  topContextMenu: 'contextmenu',\n  topCopy: 'copy',\n  topCut: 'cut',\n  topDoubleClick: 'dblclick',\n  topDrag: 'drag',\n  topDragEnd: 'dragend',\n  topDragEnter: 'dragenter',\n  topDragExit: 'dragexit',\n  topDragLeave: 'dragleave',\n  topDragOver: 'dragover',\n  topDragStart: 'dragstart',\n  topDrop: 'drop',\n  topDurationChange: 'durationchange',\n  topEmptied: 'emptied',\n  topEncrypted: 'encrypted',\n  topEnded: 'ended',\n  topError: 'error',\n  topFocus: 'focus',\n  topInput: 'input',\n  topKeyDown: 'keydown',\n  topKeyPress: 'keypress',\n  topKeyUp: 'keyup',\n  topLoadedData: 'loadeddata',\n  topLoadedMetadata: 'loadedmetadata',\n  topLoadStart: 'loadstart',\n  topMouseDown: 'mousedown',\n  topMouseMove: 'mousemove',\n  topMouseOut: 'mouseout',\n  topMouseOver: 'mouseover',\n  topMouseUp: 'mouseup',\n  topPaste: 'paste',\n  topPause: 'pause',\n  topPlay: 'play',\n  topPlaying: 'playing',\n  topProgress: 'progress',\n  topRateChange: 'ratechange',\n  topScroll: 'scroll',\n  topSeeked: 'seeked',\n  topSeeking: 'seeking',\n  topSelectionChange: 'selectionchange',\n  topStalled: 'stalled',\n  topSuspend: 'suspend',\n  topTextInput: 'textInput',\n  topTimeUpdate: 'timeupdate',\n  topTouchCancel: 'touchcancel',\n  topTouchEnd: 'touchend',\n  topTouchMove: 'touchmove',\n  topTouchStart: 'touchstart',\n  topVolumeChange: 'volumechange',\n  topWaiting: 'waiting',\n  topWheel: 'wheel'\n};\n/**\n * To ensure no conflicts with other potential React instances on the page\n */\n\nvar topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);\n\nfunction getListeningForDocument(mountAt) {\n  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n  // directly.\n  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n  }\n\n  return alreadyListeningTo[mountAt[topListenersIDKey]];\n}\n/**\n * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For\n * example:\n *\n *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);\n *\n * This would allocate a \"registration\" of `('onClick', myFunction)` on 'myID'.\n *\n * @internal\n */\n\n\nvar ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {\n  /**\n   * Injectable event backend\n   */\n  ReactEventListener: null,\n  injection: {\n    /**\n     * @param {object} ReactEventListener\n     */\n    injectReactEventListener: function (ReactEventListener) {\n      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);\n      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;\n    }\n  },\n\n  /**\n   * Sets whether or not any created callbacks should be enabled.\n   *\n   * @param {boolean} enabled True if callbacks should be enabled.\n   */\n  setEnabled: function (enabled) {\n    if (ReactBrowserEventEmitter.ReactEventListener) {\n      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);\n    }\n  },\n\n  /**\n   * @return {boolean} True if callbacks are enabled.\n   */\n  isEnabled: function () {\n    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());\n  },\n\n  /**\n   * We listen for bubbled touch events on the document object.\n   *\n   * Firefox v8.01 (and possibly others) exhibited strange behavior when\n   * mounting `onmousemove` events at some node that was not the document\n   * element. The symptoms were that if your mouse is not moving over something\n   * contained within that mount point (for example on the background) the\n   * top-level listeners for `onmousemove` won't be called. However, if you\n   * register the `mousemove` on the document object, then it will of course\n   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n   * top-level listeners to the document object only, at least for these\n   * movement types of events and possibly all events.\n   *\n   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n   *\n   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n   * they bubble to document.\n   *\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {object} contentDocumentHandle Document which owns the container\n   */\n  listenTo: function (registrationName, contentDocumentHandle) {\n    var mountAt = contentDocumentHandle;\n    var isListening = getListeningForDocument(mountAt);\n    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];\n    var topLevelTypes = EventConstants.topLevelTypes;\n\n    for (var i = 0; i < dependencies.length; i++) {\n      var dependency = dependencies[i];\n\n      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\n        if (dependency === topLevelTypes.topWheel) {\n          if (isEventSupported('wheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);\n          } else if (isEventSupported('mousewheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);\n          } else {\n            // Firefox needs to capture a different mouse scroll event.\n            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);\n          }\n        } else if (dependency === topLevelTypes.topScroll) {\n          if (isEventSupported('scroll', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);\n          } else {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);\n          }\n        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {\n          if (isEventSupported('focus', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);\n          } else if (isEventSupported('focusin')) {\n            // IE has `focusin` and `focusout` events which bubble.\n            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);\n          } // to make sure blur and focus event listeners are only attached once\n\n\n          isListening[topLevelTypes.topBlur] = true;\n          isListening[topLevelTypes.topFocus] = true;\n        } else if (topEventMapping.hasOwnProperty(dependency)) {\n          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);\n        }\n\n        isListening[dependency] = true;\n      }\n    }\n  },\n  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);\n  },\n  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);\n  },\n\n  /**\n   * Listens to window scroll and resize events. We cache scroll values so that\n   * application code can access them without triggering reflows.\n   *\n   * NOTE: Scroll events do not bubble.\n   *\n   * @see http://www.quirksmode.org/dom/events/scroll.html\n   */\n  ensureScrollValueMonitoring: function () {\n    if (!isMonitoringScrollValue) {\n      var refresh = ViewportMetrics.refreshScrollValues;\n      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\n      isMonitoringScrollValue = true;\n    }\n  },\n  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,\n  registrationNameModules: EventPluginHub.registrationNameModules,\n  putListener: EventPluginHub.putListener,\n  getListener: EventPluginHub.getListener,\n  deleteListener: EventPluginHub.deleteListener,\n  deleteAllListeners: EventPluginHub.deleteAllListeners\n});\nReactPerf.measureMethods(ReactBrowserEventEmitter, 'ReactBrowserEventEmitter', {\n  putListener: 'putListener',\n  deleteListener: 'deleteListener'\n});\nmodule.exports = ReactBrowserEventEmitter;","map":{"version":3,"sources":["C:/Users/icom/myProjects/DNA/react app/dna/node_modules/react-holder/node_modules/react/lib/ReactBrowserEventEmitter.js"],"names":["EventConstants","require","EventPluginHub","EventPluginRegistry","ReactEventEmitterMixin","ReactPerf","ViewportMetrics","assign","isEventSupported","alreadyListeningTo","isMonitoringScrollValue","reactTopListenersCounter","topEventMapping","topAbort","topBlur","topCanPlay","topCanPlayThrough","topChange","topClick","topCompositionEnd","topCompositionStart","topCompositionUpdate","topContextMenu","topCopy","topCut","topDoubleClick","topDrag","topDragEnd","topDragEnter","topDragExit","topDragLeave","topDragOver","topDragStart","topDrop","topDurationChange","topEmptied","topEncrypted","topEnded","topError","topFocus","topInput","topKeyDown","topKeyPress","topKeyUp","topLoadedData","topLoadedMetadata","topLoadStart","topMouseDown","topMouseMove","topMouseOut","topMouseOver","topMouseUp","topPaste","topPause","topPlay","topPlaying","topProgress","topRateChange","topScroll","topSeeked","topSeeking","topSelectionChange","topStalled","topSuspend","topTextInput","topTimeUpdate","topTouchCancel","topTouchEnd","topTouchMove","topTouchStart","topVolumeChange","topWaiting","topWheel","topListenersIDKey","String","Math","random","slice","getListeningForDocument","mountAt","Object","prototype","hasOwnProperty","call","ReactBrowserEventEmitter","ReactEventListener","injection","injectReactEventListener","setHandleTopLevel","handleTopLevel","setEnabled","enabled","isEnabled","listenTo","registrationName","contentDocumentHandle","isListening","dependencies","registrationNameDependencies","topLevelTypes","i","length","dependency","trapBubbledEvent","trapCapturedEvent","WINDOW_HANDLE","topLevelType","handlerBaseName","handle","ensureScrollValueMonitoring","refresh","refreshScrollValues","monitorScrollValue","eventNameDispatchConfigs","registrationNameModules","putListener","getListener","deleteListener","deleteAllListeners","measureMethods","module","exports"],"mappings":"AAAA;;;;;;;;;;;AAYA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA5B;;AACA,IAAIC,cAAc,GAAGD,OAAO,CAAC,kBAAD,CAA5B;;AACA,IAAIE,mBAAmB,GAAGF,OAAO,CAAC,uBAAD,CAAjC;;AACA,IAAIG,sBAAsB,GAAGH,OAAO,CAAC,0BAAD,CAApC;;AACA,IAAII,SAAS,GAAGJ,OAAO,CAAC,aAAD,CAAvB;;AACA,IAAIK,eAAe,GAAGL,OAAO,CAAC,mBAAD,CAA7B;;AAEA,IAAIM,MAAM,GAAGN,OAAO,CAAC,iBAAD,CAApB;;AACA,IAAIO,gBAAgB,GAAGP,OAAO,CAAC,oBAAD,CAA9B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA,IAAIQ,kBAAkB,GAAG,EAAzB;AACA,IAAIC,uBAAuB,GAAG,KAA9B;AACA,IAAIC,wBAAwB,GAAG,CAA/B,C,CAEA;AACA;AACA;;AACA,IAAIC,eAAe,GAAG;AACpBC,EAAAA,QAAQ,EAAE,OADU;AAEpBC,EAAAA,OAAO,EAAE,MAFW;AAGpBC,EAAAA,UAAU,EAAE,SAHQ;AAIpBC,EAAAA,iBAAiB,EAAE,gBAJC;AAKpBC,EAAAA,SAAS,EAAE,QALS;AAMpBC,EAAAA,QAAQ,EAAE,OANU;AAOpBC,EAAAA,iBAAiB,EAAE,gBAPC;AAQpBC,EAAAA,mBAAmB,EAAE,kBARD;AASpBC,EAAAA,oBAAoB,EAAE,mBATF;AAUpBC,EAAAA,cAAc,EAAE,aAVI;AAWpBC,EAAAA,OAAO,EAAE,MAXW;AAYpBC,EAAAA,MAAM,EAAE,KAZY;AAapBC,EAAAA,cAAc,EAAE,UAbI;AAcpBC,EAAAA,OAAO,EAAE,MAdW;AAepBC,EAAAA,UAAU,EAAE,SAfQ;AAgBpBC,EAAAA,YAAY,EAAE,WAhBM;AAiBpBC,EAAAA,WAAW,EAAE,UAjBO;AAkBpBC,EAAAA,YAAY,EAAE,WAlBM;AAmBpBC,EAAAA,WAAW,EAAE,UAnBO;AAoBpBC,EAAAA,YAAY,EAAE,WApBM;AAqBpBC,EAAAA,OAAO,EAAE,MArBW;AAsBpBC,EAAAA,iBAAiB,EAAE,gBAtBC;AAuBpBC,EAAAA,UAAU,EAAE,SAvBQ;AAwBpBC,EAAAA,YAAY,EAAE,WAxBM;AAyBpBC,EAAAA,QAAQ,EAAE,OAzBU;AA0BpBC,EAAAA,QAAQ,EAAE,OA1BU;AA2BpBC,EAAAA,QAAQ,EAAE,OA3BU;AA4BpBC,EAAAA,QAAQ,EAAE,OA5BU;AA6BpBC,EAAAA,UAAU,EAAE,SA7BQ;AA8BpBC,EAAAA,WAAW,EAAE,UA9BO;AA+BpBC,EAAAA,QAAQ,EAAE,OA/BU;AAgCpBC,EAAAA,aAAa,EAAE,YAhCK;AAiCpBC,EAAAA,iBAAiB,EAAE,gBAjCC;AAkCpBC,EAAAA,YAAY,EAAE,WAlCM;AAmCpBC,EAAAA,YAAY,EAAE,WAnCM;AAoCpBC,EAAAA,YAAY,EAAE,WApCM;AAqCpBC,EAAAA,WAAW,EAAE,UArCO;AAsCpBC,EAAAA,YAAY,EAAE,WAtCM;AAuCpBC,EAAAA,UAAU,EAAE,SAvCQ;AAwCpBC,EAAAA,QAAQ,EAAE,OAxCU;AAyCpBC,EAAAA,QAAQ,EAAE,OAzCU;AA0CpBC,EAAAA,OAAO,EAAE,MA1CW;AA2CpBC,EAAAA,UAAU,EAAE,SA3CQ;AA4CpBC,EAAAA,WAAW,EAAE,UA5CO;AA6CpBC,EAAAA,aAAa,EAAE,YA7CK;AA8CpBC,EAAAA,SAAS,EAAE,QA9CS;AA+CpBC,EAAAA,SAAS,EAAE,QA/CS;AAgDpBC,EAAAA,UAAU,EAAE,SAhDQ;AAiDpBC,EAAAA,kBAAkB,EAAE,iBAjDA;AAkDpBC,EAAAA,UAAU,EAAE,SAlDQ;AAmDpBC,EAAAA,UAAU,EAAE,SAnDQ;AAoDpBC,EAAAA,YAAY,EAAE,WApDM;AAqDpBC,EAAAA,aAAa,EAAE,YArDK;AAsDpBC,EAAAA,cAAc,EAAE,aAtDI;AAuDpBC,EAAAA,WAAW,EAAE,UAvDO;AAwDpBC,EAAAA,YAAY,EAAE,WAxDM;AAyDpBC,EAAAA,aAAa,EAAE,YAzDK;AA0DpBC,EAAAA,eAAe,EAAE,cA1DG;AA2DpBC,EAAAA,UAAU,EAAE,SA3DQ;AA4DpBC,EAAAA,QAAQ,EAAE;AA5DU,CAAtB;AA+DA;;;;AAGA,IAAIC,iBAAiB,GAAG,sBAAsBC,MAAM,CAACC,IAAI,CAACC,MAAL,EAAD,CAAN,CAAsBC,KAAtB,CAA4B,CAA5B,CAA9C;;AAEA,SAASC,uBAAT,CAAiCC,OAAjC,EAA0C;AACxC;AACA;AACA,MAAI,CAACC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,OAArC,EAA8CN,iBAA9C,CAAL,EAAuE;AACrEM,IAAAA,OAAO,CAACN,iBAAD,CAAP,GAA6B9D,wBAAwB,EAArD;AACAF,IAAAA,kBAAkB,CAACsE,OAAO,CAACN,iBAAD,CAAR,CAAlB,GAAiD,EAAjD;AACD;;AACD,SAAOhE,kBAAkB,CAACsE,OAAO,CAACN,iBAAD,CAAR,CAAzB;AACD;AAED;;;;;;;;;;;;AAUA,IAAIW,wBAAwB,GAAG7E,MAAM,CAAC,EAAD,EAAKH,sBAAL,EAA6B;AAEhE;;;AAGAiF,EAAAA,kBAAkB,EAAE,IAL4C;AAOhEC,EAAAA,SAAS,EAAE;AACT;;;AAGAC,IAAAA,wBAAwB,EAAE,UAAUF,kBAAV,EAA8B;AACtDA,MAAAA,kBAAkB,CAACG,iBAAnB,CAAqCJ,wBAAwB,CAACK,cAA9D;AACAL,MAAAA,wBAAwB,CAACC,kBAAzB,GAA8CA,kBAA9C;AACD;AAPQ,GAPqD;;AAiBhE;;;;;AAKAK,EAAAA,UAAU,EAAE,UAAUC,OAAV,EAAmB;AAC7B,QAAIP,wBAAwB,CAACC,kBAA7B,EAAiD;AAC/CD,MAAAA,wBAAwB,CAACC,kBAAzB,CAA4CK,UAA5C,CAAuDC,OAAvD;AACD;AACF,GA1B+D;;AA4BhE;;;AAGAC,EAAAA,SAAS,EAAE,YAAY;AACrB,WAAO,CAAC,EAAER,wBAAwB,CAACC,kBAAzB,IAA+CD,wBAAwB,CAACC,kBAAzB,CAA4CO,SAA5C,EAAjD,CAAR;AACD,GAjC+D;;AAmChE;;;;;;;;;;;;;;;;;;;;;AAqBAC,EAAAA,QAAQ,EAAE,UAAUC,gBAAV,EAA4BC,qBAA5B,EAAmD;AAC3D,QAAIhB,OAAO,GAAGgB,qBAAd;AACA,QAAIC,WAAW,GAAGlB,uBAAuB,CAACC,OAAD,CAAzC;AACA,QAAIkB,YAAY,GAAG9F,mBAAmB,CAAC+F,4BAApB,CAAiDJ,gBAAjD,CAAnB;AAEA,QAAIK,aAAa,GAAGnG,cAAc,CAACmG,aAAnC;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,YAAY,CAACI,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5C,UAAIE,UAAU,GAAGL,YAAY,CAACG,CAAD,CAA7B;;AACA,UAAI,EAAEJ,WAAW,CAACd,cAAZ,CAA2BoB,UAA3B,KAA0CN,WAAW,CAACM,UAAD,CAAvD,CAAJ,EAA0E;AACxE,YAAIA,UAAU,KAAKH,aAAa,CAAC3B,QAAjC,EAA2C;AACzC,cAAIhE,gBAAgB,CAAC,OAAD,CAApB,EAA+B;AAC7B4E,YAAAA,wBAAwB,CAACC,kBAAzB,CAA4CkB,gBAA5C,CAA6DJ,aAAa,CAAC3B,QAA3E,EAAqF,OAArF,EAA8FO,OAA9F;AACD,WAFD,MAEO,IAAIvE,gBAAgB,CAAC,YAAD,CAApB,EAAoC;AACzC4E,YAAAA,wBAAwB,CAACC,kBAAzB,CAA4CkB,gBAA5C,CAA6DJ,aAAa,CAAC3B,QAA3E,EAAqF,YAArF,EAAmGO,OAAnG;AACD,WAFM,MAEA;AACL;AACA;AACAK,YAAAA,wBAAwB,CAACC,kBAAzB,CAA4CkB,gBAA5C,CAA6DJ,aAAa,CAAC3B,QAA3E,EAAqF,gBAArF,EAAuGO,OAAvG;AACD;AACF,SAVD,MAUO,IAAIuB,UAAU,KAAKH,aAAa,CAACzC,SAAjC,EAA4C;AAEjD,cAAIlD,gBAAgB,CAAC,QAAD,EAAW,IAAX,CAApB,EAAsC;AACpC4E,YAAAA,wBAAwB,CAACC,kBAAzB,CAA4CmB,iBAA5C,CAA8DL,aAAa,CAACzC,SAA5E,EAAuF,QAAvF,EAAiGqB,OAAjG;AACD,WAFD,MAEO;AACLK,YAAAA,wBAAwB,CAACC,kBAAzB,CAA4CkB,gBAA5C,CAA6DJ,aAAa,CAACzC,SAA3E,EAAsF,QAAtF,EAAgG0B,wBAAwB,CAACC,kBAAzB,CAA4CoB,aAA5I;AACD;AACF,SAPM,MAOA,IAAIH,UAAU,KAAKH,aAAa,CAAC5D,QAA7B,IAAyC+D,UAAU,KAAKH,aAAa,CAACrF,OAA1E,EAAmF;AAExF,cAAIN,gBAAgB,CAAC,OAAD,EAAU,IAAV,CAApB,EAAqC;AACnC4E,YAAAA,wBAAwB,CAACC,kBAAzB,CAA4CmB,iBAA5C,CAA8DL,aAAa,CAAC5D,QAA5E,EAAsF,OAAtF,EAA+FwC,OAA/F;AACAK,YAAAA,wBAAwB,CAACC,kBAAzB,CAA4CmB,iBAA5C,CAA8DL,aAAa,CAACrF,OAA5E,EAAqF,MAArF,EAA6FiE,OAA7F;AACD,WAHD,MAGO,IAAIvE,gBAAgB,CAAC,SAAD,CAApB,EAAiC;AACtC;AACA;AACA4E,YAAAA,wBAAwB,CAACC,kBAAzB,CAA4CkB,gBAA5C,CAA6DJ,aAAa,CAAC5D,QAA3E,EAAqF,SAArF,EAAgGwC,OAAhG;AACAK,YAAAA,wBAAwB,CAACC,kBAAzB,CAA4CkB,gBAA5C,CAA6DJ,aAAa,CAACrF,OAA3E,EAAoF,UAApF,EAAgGiE,OAAhG;AACD,WAVuF,CAYxF;;;AACAiB,UAAAA,WAAW,CAACG,aAAa,CAACrF,OAAf,CAAX,GAAqC,IAArC;AACAkF,UAAAA,WAAW,CAACG,aAAa,CAAC5D,QAAf,CAAX,GAAsC,IAAtC;AACD,SAfM,MAeA,IAAI3B,eAAe,CAACsE,cAAhB,CAA+BoB,UAA/B,CAAJ,EAAgD;AACrDlB,UAAAA,wBAAwB,CAACC,kBAAzB,CAA4CkB,gBAA5C,CAA6DD,UAA7D,EAAyE1F,eAAe,CAAC0F,UAAD,CAAxF,EAAsGvB,OAAtG;AACD;;AAEDiB,QAAAA,WAAW,CAACM,UAAD,CAAX,GAA0B,IAA1B;AACD;AACF;AACF,GAxG+D;AA0GhEC,EAAAA,gBAAgB,EAAE,UAAUG,YAAV,EAAwBC,eAAxB,EAAyCC,MAAzC,EAAiD;AACjE,WAAOxB,wBAAwB,CAACC,kBAAzB,CAA4CkB,gBAA5C,CAA6DG,YAA7D,EAA2EC,eAA3E,EAA4FC,MAA5F,CAAP;AACD,GA5G+D;AA8GhEJ,EAAAA,iBAAiB,EAAE,UAAUE,YAAV,EAAwBC,eAAxB,EAAyCC,MAAzC,EAAiD;AAClE,WAAOxB,wBAAwB,CAACC,kBAAzB,CAA4CmB,iBAA5C,CAA8DE,YAA9D,EAA4EC,eAA5E,EAA6FC,MAA7F,CAAP;AACD,GAhH+D;;AAkHhE;;;;;;;;AAQAC,EAAAA,2BAA2B,EAAE,YAAY;AACvC,QAAI,CAACnG,uBAAL,EAA8B;AAC5B,UAAIoG,OAAO,GAAGxG,eAAe,CAACyG,mBAA9B;AACA3B,MAAAA,wBAAwB,CAACC,kBAAzB,CAA4C2B,kBAA5C,CAA+DF,OAA/D;AACApG,MAAAA,uBAAuB,GAAG,IAA1B;AACD;AACF,GAhI+D;AAkIhEuG,EAAAA,wBAAwB,EAAE/G,cAAc,CAAC+G,wBAlIuB;AAoIhEC,EAAAA,uBAAuB,EAAEhH,cAAc,CAACgH,uBApIwB;AAsIhEC,EAAAA,WAAW,EAAEjH,cAAc,CAACiH,WAtIoC;AAwIhEC,EAAAA,WAAW,EAAElH,cAAc,CAACkH,WAxIoC;AA0IhEC,EAAAA,cAAc,EAAEnH,cAAc,CAACmH,cA1IiC;AA4IhEC,EAAAA,kBAAkB,EAAEpH,cAAc,CAACoH;AA5I6B,CAA7B,CAArC;AAgJAjH,SAAS,CAACkH,cAAV,CAAyBnC,wBAAzB,EAAmD,0BAAnD,EAA+E;AAC7E+B,EAAAA,WAAW,EAAE,aADgE;AAE7EE,EAAAA,cAAc,EAAE;AAF6D,CAA/E;AAKAG,MAAM,CAACC,OAAP,GAAiBrC,wBAAjB","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactBrowserEventEmitter\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar ReactEventEmitterMixin = require('./ReactEventEmitterMixin');\nvar ReactPerf = require('./ReactPerf');\nvar ViewportMetrics = require('./ViewportMetrics');\n\nvar assign = require('./Object.assign');\nvar isEventSupported = require('./isEventSupported');\n\n/**\n * Summary of `ReactBrowserEventEmitter` event handling:\n *\n *  - Top-level delegation is used to trap most native browser events. This\n *    may only occur in the main thread and is the responsibility of\n *    ReactEventListener, which is injected and can therefore support pluggable\n *    event sources. This is the only work that occurs in the main thread.\n *\n *  - We normalize and de-duplicate events to account for browser quirks. This\n *    may be done in the worker thread.\n *\n *  - Forward these native events (with the associated top-level type used to\n *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n *    to extract any synthetic events.\n *\n *  - The `EventPluginHub` will then process each event by annotating them with\n *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n *\n *  - The `EventPluginHub` then dispatches the events.\n *\n * Overview of React and the event system:\n *\n * +------------+    .\n * |    DOM     |    .\n * +------------+    .\n *       |           .\n *       v           .\n * +------------+    .\n * | ReactEvent |    .\n * |  Listener  |    .\n * +------------+    .                         +-----------+\n *       |           .               +--------+|SimpleEvent|\n *       |           .               |         |Plugin     |\n * +-----|------+    .               v         +-----------+\n * |     |      |    .    +--------------+                    +------------+\n * |     +-----------.--->|EventPluginHub|                    |    Event   |\n * |            |    .    |              |     +-----------+  | Propagators|\n * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n * |            |    .    |              |     +-----------+  |  utilities |\n * |     +-----------.--->|              |                    +------------+\n * |     |      |    .    +--------------+\n * +-----|------+    .                ^        +-----------+\n *       |           .                |        |Enter/Leave|\n *       +           .                +-------+|Plugin     |\n * +-------------+   .                         +-----------+\n * | application |   .\n * |-------------|   .\n * |             |   .\n * |             |   .\n * +-------------+   .\n *                   .\n *    React Core     .  General Purpose Event Plugin System\n */\n\nvar alreadyListeningTo = {};\nvar isMonitoringScrollValue = false;\nvar reactTopListenersCounter = 0;\n\n// For events like 'submit' which don't consistently bubble (which we trap at a\n// lower node than `document`), binding at `document` would cause duplicate\n// events so we don't include them here\nvar topEventMapping = {\n  topAbort: 'abort',\n  topBlur: 'blur',\n  topCanPlay: 'canplay',\n  topCanPlayThrough: 'canplaythrough',\n  topChange: 'change',\n  topClick: 'click',\n  topCompositionEnd: 'compositionend',\n  topCompositionStart: 'compositionstart',\n  topCompositionUpdate: 'compositionupdate',\n  topContextMenu: 'contextmenu',\n  topCopy: 'copy',\n  topCut: 'cut',\n  topDoubleClick: 'dblclick',\n  topDrag: 'drag',\n  topDragEnd: 'dragend',\n  topDragEnter: 'dragenter',\n  topDragExit: 'dragexit',\n  topDragLeave: 'dragleave',\n  topDragOver: 'dragover',\n  topDragStart: 'dragstart',\n  topDrop: 'drop',\n  topDurationChange: 'durationchange',\n  topEmptied: 'emptied',\n  topEncrypted: 'encrypted',\n  topEnded: 'ended',\n  topError: 'error',\n  topFocus: 'focus',\n  topInput: 'input',\n  topKeyDown: 'keydown',\n  topKeyPress: 'keypress',\n  topKeyUp: 'keyup',\n  topLoadedData: 'loadeddata',\n  topLoadedMetadata: 'loadedmetadata',\n  topLoadStart: 'loadstart',\n  topMouseDown: 'mousedown',\n  topMouseMove: 'mousemove',\n  topMouseOut: 'mouseout',\n  topMouseOver: 'mouseover',\n  topMouseUp: 'mouseup',\n  topPaste: 'paste',\n  topPause: 'pause',\n  topPlay: 'play',\n  topPlaying: 'playing',\n  topProgress: 'progress',\n  topRateChange: 'ratechange',\n  topScroll: 'scroll',\n  topSeeked: 'seeked',\n  topSeeking: 'seeking',\n  topSelectionChange: 'selectionchange',\n  topStalled: 'stalled',\n  topSuspend: 'suspend',\n  topTextInput: 'textInput',\n  topTimeUpdate: 'timeupdate',\n  topTouchCancel: 'touchcancel',\n  topTouchEnd: 'touchend',\n  topTouchMove: 'touchmove',\n  topTouchStart: 'touchstart',\n  topVolumeChange: 'volumechange',\n  topWaiting: 'waiting',\n  topWheel: 'wheel'\n};\n\n/**\n * To ensure no conflicts with other potential React instances on the page\n */\nvar topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);\n\nfunction getListeningForDocument(mountAt) {\n  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n  // directly.\n  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n  }\n  return alreadyListeningTo[mountAt[topListenersIDKey]];\n}\n\n/**\n * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For\n * example:\n *\n *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);\n *\n * This would allocate a \"registration\" of `('onClick', myFunction)` on 'myID'.\n *\n * @internal\n */\nvar ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {\n\n  /**\n   * Injectable event backend\n   */\n  ReactEventListener: null,\n\n  injection: {\n    /**\n     * @param {object} ReactEventListener\n     */\n    injectReactEventListener: function (ReactEventListener) {\n      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);\n      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;\n    }\n  },\n\n  /**\n   * Sets whether or not any created callbacks should be enabled.\n   *\n   * @param {boolean} enabled True if callbacks should be enabled.\n   */\n  setEnabled: function (enabled) {\n    if (ReactBrowserEventEmitter.ReactEventListener) {\n      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);\n    }\n  },\n\n  /**\n   * @return {boolean} True if callbacks are enabled.\n   */\n  isEnabled: function () {\n    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());\n  },\n\n  /**\n   * We listen for bubbled touch events on the document object.\n   *\n   * Firefox v8.01 (and possibly others) exhibited strange behavior when\n   * mounting `onmousemove` events at some node that was not the document\n   * element. The symptoms were that if your mouse is not moving over something\n   * contained within that mount point (for example on the background) the\n   * top-level listeners for `onmousemove` won't be called. However, if you\n   * register the `mousemove` on the document object, then it will of course\n   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n   * top-level listeners to the document object only, at least for these\n   * movement types of events and possibly all events.\n   *\n   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n   *\n   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n   * they bubble to document.\n   *\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {object} contentDocumentHandle Document which owns the container\n   */\n  listenTo: function (registrationName, contentDocumentHandle) {\n    var mountAt = contentDocumentHandle;\n    var isListening = getListeningForDocument(mountAt);\n    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];\n\n    var topLevelTypes = EventConstants.topLevelTypes;\n    for (var i = 0; i < dependencies.length; i++) {\n      var dependency = dependencies[i];\n      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\n        if (dependency === topLevelTypes.topWheel) {\n          if (isEventSupported('wheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);\n          } else if (isEventSupported('mousewheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);\n          } else {\n            // Firefox needs to capture a different mouse scroll event.\n            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);\n          }\n        } else if (dependency === topLevelTypes.topScroll) {\n\n          if (isEventSupported('scroll', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);\n          } else {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);\n          }\n        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {\n\n          if (isEventSupported('focus', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);\n          } else if (isEventSupported('focusin')) {\n            // IE has `focusin` and `focusout` events which bubble.\n            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);\n          }\n\n          // to make sure blur and focus event listeners are only attached once\n          isListening[topLevelTypes.topBlur] = true;\n          isListening[topLevelTypes.topFocus] = true;\n        } else if (topEventMapping.hasOwnProperty(dependency)) {\n          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);\n        }\n\n        isListening[dependency] = true;\n      }\n    }\n  },\n\n  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);\n  },\n\n  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);\n  },\n\n  /**\n   * Listens to window scroll and resize events. We cache scroll values so that\n   * application code can access them without triggering reflows.\n   *\n   * NOTE: Scroll events do not bubble.\n   *\n   * @see http://www.quirksmode.org/dom/events/scroll.html\n   */\n  ensureScrollValueMonitoring: function () {\n    if (!isMonitoringScrollValue) {\n      var refresh = ViewportMetrics.refreshScrollValues;\n      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\n      isMonitoringScrollValue = true;\n    }\n  },\n\n  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,\n\n  registrationNameModules: EventPluginHub.registrationNameModules,\n\n  putListener: EventPluginHub.putListener,\n\n  getListener: EventPluginHub.getListener,\n\n  deleteListener: EventPluginHub.deleteListener,\n\n  deleteAllListeners: EventPluginHub.deleteAllListeners\n\n});\n\nReactPerf.measureMethods(ReactBrowserEventEmitter, 'ReactBrowserEventEmitter', {\n  putListener: 'putListener',\n  deleteListener: 'deleteListener'\n});\n\nmodule.exports = ReactBrowserEventEmitter;"]},"metadata":{},"sourceType":"script"}