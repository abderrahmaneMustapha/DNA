{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\icom\\\\myProjects\\\\DNA\\\\react app\\\\dna\\\\src\\\\dashboard\\\\Dashboard.js\";\nimport React from 'react';\nimport './dashboard.css';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { HorizontalBar } from 'react-chartjs-2';\n\nclass Dashboard extends React.Component {\n  constructor() {\n    super();\n\n    this.calculatebestcourses = result => {\n      var temp = [];\n\n      for (var i = 0; i < result.length; i++) {\n        var id = result[i][\"cours_id\"];\n        var admis = result[i].admis_number;\n        var total = result[i].student_number;\n        temp.push({\n          \"id\": id,\n          \"winrate\": (admis / total).toFixed(2) * 100\n        });\n      }\n\n      temp.sort((a, b) => {\n        return b.winrate - a.winrate;\n      });\n      var best_temp = [];\n      var winrate_temp = [];\n\n      for (var i = 0; i < temp.length; i++) {\n        best_temp.push(temp[i]['id']);\n        winrate_temp.push(temp[i]['winrate']);\n      }\n\n      this.setState({\n        best_courses: [...best_temp],\n        best_courses_winrate: [...winrate_temp]\n      });\n    };\n\n    this.connectToBestCourses = () => {\n      fetch('http://127.0.0.1:8000/best_courses/').then(res => res.json()).then(result => {\n        this.calculatebestcourses(result);\n      });\n    };\n\n    this.state = {\n      best_courses: [],\n      best_courses_winrate: []\n    };\n  }\n\n  componentDidMount() {\n    this.connectToBestCourses();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"article\", {\n      className: \"col-md-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Best Courses All Time\"), React.createElement(\"div\", {\n      id: \"general-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Card, {\n      id: \"best-courses\",\n      style: {\n        width: '18rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(HorizontalBar, {\n      data: {\n        labels: this.state.best_courses.slice(0, 5),\n        datasets: [{\n          data: this.state.best_courses_winrate.slice(0, 5)\n        }]\n      },\n      width: 100,\n      height: 200,\n      options: {\n        maintainAspectRatio: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))), React.createElement(Card, {\n      id: \"popular-bacfield\",\n      style: {\n        width: '18rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"popular field\")), React.createElement(Card, {\n      id: \"best-bacfield\",\n      style: {\n        width: '18rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"best field\")), React.createElement(Card, {\n      id: \"best-gender\",\n      style: {\n        width: '18rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"best gender\")))), React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"header2\"), React.createElement(\"div\", {\n      id: \"year-analysis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }))), React.createElement(\"aside\", {\n      className: \"col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/icom/myProjects/DNA/react app/dna/src/dashboard/Dashboard.js"],"names":["React","Card","HorizontalBar","Dashboard","Component","constructor","calculatebestcourses","result","temp","i","length","id","admis","admis_number","total","student_number","push","toFixed","sort","a","b","winrate","best_temp","winrate_temp","setState","best_courses","best_courses_winrate","connectToBestCourses","fetch","then","res","json","state","componentDidMount","render","width","labels","slice","datasets","data","maintainAspectRatio"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAO,sCAAP;AACA,SAASC,aAAT,QAA8B,iBAA9B;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,GAAE;AACX;;AADW,SASdC,oBATc,GASUC,MAAD,IAAU;AAEhC,UAAIC,IAAI,GAAG,EAAX;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAEF,MAAM,CAACG,MAAvB,EAA8BD,CAAC,EAA/B,EAAkC;AAChC,YAAIE,EAAE,GAAGJ,MAAM,CAACE,CAAD,CAAN,CAAU,UAAV,CAAT;AACA,YAAIG,KAAK,GAAGL,MAAM,CAACE,CAAD,CAAN,CAAUI,YAAtB;AACA,YAAIC,KAAK,GAAGP,MAAM,CAACE,CAAD,CAAN,CAAUM,cAAtB;AACAP,QAAAA,IAAI,CAACQ,IAAL,CAAU;AAAC,gBAAKL,EAAN;AAAU,qBAAW,CAACC,KAAK,GAACE,KAAP,EAAcG,OAAd,CAAsB,CAAtB,IAA2B;AAAhD,SAAV;AACD;;AACDT,MAAAA,IAAI,CAACU,IAAL,CAAU,CAACC,CAAD,EAAGC,CAAH,KAAQ;AAChB,eAAOA,CAAC,CAACC,OAAF,GAAYF,CAAC,CAACE,OAArB;AACD,OAFD;AAGA,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,YAAY,GAAG,EAAnB;;AACA,WAAI,IAAId,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAED,IAAI,CAACE,MAArB,EAA4BD,CAAC,EAA7B,EAAgC;AAC9Ba,QAAAA,SAAS,CAACN,IAAV,CAAeR,IAAI,CAACC,CAAD,CAAJ,CAAQ,IAAR,CAAf;AACAc,QAAAA,YAAY,CAACP,IAAb,CAAkBR,IAAI,CAACC,CAAD,CAAJ,CAAQ,SAAR,CAAlB;AACD;;AACD,WAAKe,QAAL,CAAc;AACXC,QAAAA,YAAY,EAAC,CAAC,GAAGH,SAAJ,CADF;AAEXI,QAAAA,oBAAoB,EAAE,CAAC,GAAGH,YAAJ;AAFX,OAAd;AAMD,KAjCc;;AAAA,SAmCfI,oBAnCe,GAmCQ,MAAI;AACzBC,MAAAA,KAAK,CAAC,qCAAD,CAAL,CACFC,IADE,CACGC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADV,EAEFF,IAFE,CAGAtB,MAAM,IAAG;AACP,aAAKD,oBAAL,CAA0BC,MAA1B;AAED,OAND;AAQD,KA5Cc;;AAEX,SAAKyB,KAAL,GAAa;AACXP,MAAAA,YAAY,EAAG,EADJ;AAEXC,MAAAA,oBAAoB,EAAE;AAFX,KAAb;AAID;;AAwCDO,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,oBAAL;AACD;;AACDO,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEI;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,cAAT;AAAyB,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AACA,MAAA,IAAI,EAAE;AAAEC,QAAAA,MAAM,EAAG,KAAKJ,KAAL,CAAWP,YAAX,CAAwBY,KAAxB,CAA8B,CAA9B,EAAgC,CAAhC,CAAX;AACEC,QAAAA,QAAQ,EAAE,CACR;AAAEC,UAAAA,IAAI,EAAG,KAAKP,KAAL,CAAWN,oBAAX,CAAgCW,KAAhC,CAAsC,CAAtC,EAAwC,CAAxC;AAAT,SADQ;AADZ,OADN;AAKA,MAAA,KAAK,EAAE,GALP;AAMA,MAAA,MAAM,EAAE,GANR;AAOA,MAAA,OAAO,EAAE;AAAEG,QAAAA,mBAAmB,EAAE;AAAvB,OAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADF,CADA,EAcA,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,kBAAT;AAA6B,MAAA,KAAK,EAAE;AAAEL,QAAAA,KAAK,EAAE;AAAT,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAdA,EAiBA,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,eAAT;AAA0B,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAjBA,EAoBA,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,aAAT;AAAwB,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CApBA,CAFJ,CAFF,EA8BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAK,MAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CA9BF,CAFF,EAuCE;AAAO,MAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAvCF,CADF,CADF,CADF;AAuDD;;AA1GqC;;AA8GxC,eAAgBhC,SAAhB","sourcesContent":["import React from 'react';\r\nimport './dashboard.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { HorizontalBar } from 'react-chartjs-2';\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      best_courses : [],\r\n      best_courses_winrate: []\r\n    }\r\n  }\r\n\r\n\r\n calculatebestcourses = (result)=>{   \r\n \r\n  var temp = []\r\n  for(var i=0; i< result.length;i++){\r\n    var id = result[i][\"cours_id\"]\r\n    var admis = result[i].admis_number\r\n    var total = result[i].student_number\r\n    temp.push({\"id\":id, \"winrate\": (admis/total).toFixed(2) * 100})\r\n  }\r\n  temp.sort((a,b)=> {\r\n    return b.winrate - a.winrate\r\n  })\r\n  var best_temp = []\r\n  var winrate_temp = []\r\n  for(var i=0; i< temp.length;i++){\r\n    best_temp.push(temp[i]['id'])\r\n    winrate_temp.push(temp[i]['winrate'])\r\n  }\r\n  this.setState({\r\n     best_courses:[...best_temp] ,\r\n     best_courses_winrate: [...winrate_temp],\r\n   })\r\n\r\n    \r\n}\r\n\r\nconnectToBestCourses = ()=>{\r\n  fetch('http://127.0.0.1:8000/best_courses/').\r\nthen(res => res.json()).\r\nthen(\r\n  result =>{\r\n    this.calculatebestcourses(result)\r\n   \r\n  }\r\n)\r\n}\r\n\r\n  componentDidMount() {\r\n    this.connectToBestCourses()\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"Dashboard\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n\r\n            <article className=\"col-md-10\">\r\n\r\n              <section>\r\n                <header>Best Courses All Time</header>\r\n                  <div id=\"general-info\">\r\n                  <Card id=\"best-courses\"  style={{ width: '18rem' }}>\r\n                    <Card.Body>\r\n                        <HorizontalBar\r\n                        data={{ labels : this.state.best_courses.slice(0,5),  \r\n                                datasets: [\r\n                                  { data : this.state.best_courses_winrate.slice(0,5) }\r\n                                ]}}\r\n                        width={100}\r\n                        height={200}\r\n                        options={{ maintainAspectRatio: false }}\r\n                        />\r\n                    </Card.Body>\r\n                  </Card>\r\n                  <Card id=\"popular-bacfield\"  style={{ width: '18rem' }}>\r\n                    <Card.Body>popular field</Card.Body>\r\n                  </Card>\r\n                  <Card id=\"best-bacfield\"  style={{ width: '18rem' }}>\r\n                    <Card.Body>best field</Card.Body>\r\n                  </Card>\r\n                  <Card id=\"best-gender\"  style={{ width: '18rem' }}>\r\n                    <Card.Body>best gender</Card.Body>\r\n                  </Card>\r\n                  </div>              \r\n              </section>\r\n\r\n              <section>\r\n                <header>header2</header>\r\n                <div id=\"year-analysis\"></div>\r\n              </section>  \r\n\r\n            </article>\r\n\r\n            <aside className=\"col-md-2\">\r\n\r\n              <div>\r\n\r\n              </div>\r\n            </aside>\r\n\r\n          </div>    \r\n        </div>\r\n      </div>\r\n      \r\n      \r\n    );\r\n  }\r\n \r\n}\r\n\r\nexport default  Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}