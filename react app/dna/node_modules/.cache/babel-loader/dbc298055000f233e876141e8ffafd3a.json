{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\icom\\\\myProjects\\\\DNA\\\\react app\\\\dna\\\\src\\\\profile\\\\Profile.js\";\nimport React from 'react';\nimport './profile.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Card from 'react-bootstrap/Card';\nimport { Radar, defaults } from 'react-chartjs-2';\ndefaults.scale.ticks.suggestedMax = 20;\ndefaults.scale.ticks.suggestedMin = 5;\n\nclass Profile extends React.Component {\n  constructor() {\n    super();\n\n    this.getStudents = result => {\n      var temp = [];\n    };\n\n    this.getSemesterCourses = result => {\n      var temp = [];\n\n      if (result.length > 0) {\n        result.map(s => {\n          temp.push(s['cours_id']);\n        });\n      }\n\n      this.setState({\n        radar_courses: [...temp]\n      });\n    };\n\n    this.getUnivFields = result => {\n      var semesters = [1, 2, 3, 4, 5, 6];\n\n      for (var i = 0; i < result.length; i++) {\n        if (result[i]['field_id'] == 17) {\n          result[i]['semesters'] = [...semesters];\n        } else {\n          result[i]['semesters'] = [...semesters.slice(0, 4)];\n        }\n      }\n\n      this.setState({\n        study_fields: [...result]\n      });\n    };\n\n    this.getStudentsPerformanceSemester = result => {\n      var courses = this.state.radar_courses;\n      var avg = [];\n      var exam = [];\n      var tp = [];\n      var td = [];\n\n      for (var c = 0; c < courses.length; c++) {\n        for (var j = 0; j < result.length; j++) {\n          if (JSON.stringify(courses[c]) == JSON.stringify(result[j].cours)) {\n            avg.push(result[c].cours_avg);\n            exam.push(result[c].exam);\n            tp.push(result[c].tp);\n            td.push(result[c].td);\n          }\n        }\n      }\n\n      this.setState({\n        'student__avgs': [...avg],\n        'student__exams': [...exam],\n        'student__tps': [...tp],\n        'student__tds': [...td]\n      });\n    };\n\n    this.getAlgoResult = result => {\n      console.log(result);\n      this.setState({\n        algo_results: result\n      });\n    };\n\n    this.connectToPerformance = () => {\n      fetch('http://127.0.0.1:8000/performance/?student=' + this.state.default_student).then(res => res.json()).then(result => {\n        this.getStudents(result);\n        this.getStudentsPerformanceSemester(result);\n      });\n    };\n\n    this.connectToCourses = (s, f) => {\n      let semester = s ? s : this.state.default_semester;\n      let field = f ? f : this.state.default_study_field;\n      fetch('http://127.0.0.1:8000/courses/?semestre=' + semester + '&study_field=' + field).then(res => res.json()).then(result => {\n        this.getSemesterCourses(result);\n      });\n    };\n\n    this.connectToStudyFields = () => {\n      fetch('http://127.0.0.1:8000/univ_field/').then(res => res.json()).then(result => {\n        this.getUnivFields(result);\n      });\n    };\n\n    this.connectToAlgo = () => {\n      fetch('http://127.0.0.1:8000/algore_sults/?student_id=' + this.state.de).then(res => res.json()).then(result => {\n        this.getAlgoResult(result);\n      });\n    };\n\n    this.handleClickSemester = e => {\n      let field = e.target.firstChild.value;\n      let semester = e.target.lastChild.innerText;\n      this.setState({\n        default_semester: field,\n        default_study_field: semester\n      });\n      this.connectToCourses(semester, field);\n      this.connectToPerformance();\n    };\n\n    this.state = {\n      default_student: 14010996874,\n      default_semester: 1,\n      default_study_field: 17,\n      radar_courses: [],\n      student__avgs: [],\n      student__exams: [],\n      student__tps: [],\n      student__tds: [],\n      study_fields: [],\n      algo_results: []\n    };\n    this.handleClickSemester = this.handleClickSemester.bind(this);\n  }\n\n  componentDidMount() {\n    this.connectToStudyFields();\n    this.connectToCourses();\n    this.connectToPerformance();\n    this.getAlgoResult();\n  }\n\n  semestersList() {\n    return this.state.study_fields.map(element => React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, element['name'], \" semsters\"), React.createElement(\"ul\", {\n      id: \"semesters\",\n      className: \"list-group flex-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, element.semesters.map(s => React.createElement(\"li\", {\n      className: \"list-group-item\",\n      onClick: this.handleClickSemester,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: element['field_id'],\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, s))))));\n  }\n\n  algoResults() {\n    var algo_results = this.state.algo_results;\n    return React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Algo 01\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Algo 02\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })));\n  }\n\n  render() {\n    const greenBarColor = \"#18BD9B\";\n    const redBarColor = \"#E54787\";\n    const whiteBarColor = \"#E7E7EB\";\n    const orangeBarColor = \"#FC7C00\";\n    const semestersList = this.semestersList();\n    const algoResults = this.algoResults();\n    const cardWidth = \"22rem\";\n    return React.createElement(\"div\", {\n      className: \"Profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group search-student\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \" input-group-text\",\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"text-dark\",\n      type: \"text\",\n      value: this.state.default_student,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }))), React.createElement(\"article\", {\n      className: \"semster-module\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      id: \"semesters_list\",\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, semestersList)))), React.createElement(\"section\", {\n      className: \"flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(Card, {\n      id: \"student_performance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(Radar, {\n      data: {\n        labels: this.state.radar_courses,\n        datasets: [{\n          label: \"TP \",\n          borderColor: greenBarColor,\n          data: this.state.student__tps,\n          fill: false\n        }, {\n          label: \"TD \",\n          borderColor: redBarColor,\n          data: this.state.student__tds,\n          fill: false\n        }, {\n          label: \"EXAM \",\n          borderColor: whiteBarColor,\n          data: this.state.student__exams,\n          fill: false\n        }, {\n          label: \"AVG\",\n          borderColor: orangeBarColor,\n          data: this.state.student__avgs,\n          fill: false\n        }]\n      },\n      width: 0,\n      height: 250,\n      options: {\n        maintainAspectRatio: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }))), React.createElement(Card, {\n      id: \"algo_performance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, algoResults)))), React.createElement(\"article\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/icom/myProjects/DNA/react app/dna/src/profile/Profile.js"],"names":["React","Card","Radar","defaults","scale","ticks","suggestedMax","suggestedMin","Profile","Component","constructor","getStudents","result","temp","getSemesterCourses","length","map","s","push","setState","radar_courses","getUnivFields","semesters","i","slice","study_fields","getStudentsPerformanceSemester","courses","state","avg","exam","tp","td","c","j","JSON","stringify","cours","cours_avg","getAlgoResult","console","log","algo_results","connectToPerformance","fetch","default_student","then","res","json","connectToCourses","f","semester","default_semester","field","default_study_field","connectToStudyFields","connectToAlgo","de","handleClickSemester","e","target","firstChild","value","lastChild","innerText","student__avgs","student__exams","student__tps","student__tds","bind","componentDidMount","semestersList","element","algoResults","render","greenBarColor","redBarColor","whiteBarColor","orangeBarColor","cardWidth","labels","datasets","label","borderColor","data","fill","maintainAspectRatio"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './profile.css';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Radar,defaults } from 'react-chartjs-2';\r\ndefaults.scale.ticks.suggestedMax = 20\r\ndefaults.scale.ticks.suggestedMin = 5\r\nclass Profile extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      default_student: 14010996874,\r\n      default_semester: 1,\r\n      default_study_field : 17,\r\n      radar_courses : [],\r\n      student__avgs: [],\r\n      student__exams: [],\r\n      student__tps: [],\r\n      student__tds: [],\r\n      study_fields : [],\r\n      algo_results : [],        \r\n    }\r\n    this.handleClickSemester = this.handleClickSemester.bind(this);\r\n  }\r\n\r\n  getStudents = (result)=>{\r\n     var temp = []\r\n       \r\n  }\r\n\r\n  getSemesterCourses = (result)=>{\r\n    var temp = []\r\n    if (result.length > 0){\r\n      result.map((s)=>{\r\n        temp.push(s['cours_id'])\r\n      })\r\n    }\r\n    \r\n    this.setState({\r\n      radar_courses : [...temp]\r\n    }\r\n    )\r\n  }\r\n  \r\n  getUnivFields = (result) =>{\r\n    var semesters = [1,2,3,4,5,6]\r\n    for(var i=0;i< result.length; i++){\r\n      if(result[i]['field_id'] == 17){\r\n        result[i]['semesters'] = [...semesters]\r\n      }\r\n      else{\r\n        result[i]['semesters'] = [...semesters.slice(0,4)]\r\n      }\r\n    }\r\n   \r\n   this.setState(\r\n     {\r\n      study_fields: [...result]\r\n     }\r\n   )\r\n  \r\n  }\r\n\r\n  getStudentsPerformanceSemester = (result)=>{\r\n    var courses = this.state.radar_courses\r\n    var avg = []\r\n    var exam = []\r\n    var tp = []\r\n    var td = []\r\n    for(var c=0;c < courses.length ; c++){\r\n      for(var j=0; j < result.length;j++){\r\n        if( JSON.stringify(courses[c]) == JSON.stringify(result[j].cours)) {\r\n          avg.push(result[c].cours_avg)\r\n          exam.push(result[c].exam)   \r\n          tp.push(result[c].tp)   \r\n          td.push(result[c].td)            \r\n       }\r\n      }\r\n    \r\n    }\r\n   \r\n\r\n    this.setState({\r\n      'student__avgs':[...avg],\r\n      'student__exams':[...exam],\r\n      'student__tps':[...tp],\r\n      'student__tds':[...td]\r\n    })\r\n    \r\n  }\r\n\r\n  getAlgoResult = (result)=>{\r\n     console.log(result)\r\n\r\n    this.setState({\r\n      algo_results: result\r\n    })\r\n  }\r\n\r\n  connectToPerformance = ()=>{\r\n    \r\n  fetch('http://127.0.0.1:8000/performance/?student='+this.state.default_student).\r\n    then(res => res.json()).\r\n    then(\r\n      result =>{\r\n        this.getStudents(result) \r\n        this.getStudentsPerformanceSemester(result)\r\n    \r\n        }   \r\n      \r\n    )\r\n  }\r\n\r\n\r\n  connectToCourses = (s,f)=>{\r\n    let semester = s ?  s :this.state.default_semester\r\n    let field =  f ? f:this.state.default_study_field\r\n    fetch('http://127.0.0.1:8000/courses/?semestre='+semester+'&study_field='+field).\r\n      then(res => res.json()).\r\n      then(\r\n        result =>{\r\n          this.getSemesterCourses(result)    \r\n        }\r\n      )\r\n    }\r\n\r\n    connectToStudyFields = ()=>{\r\n      fetch('http://127.0.0.1:8000/univ_field/').\r\n      then(res => res.json()).\r\n      then(\r\n        result =>{\r\n          this.getUnivFields(result)    \r\n        }\r\n      )\r\n    }\r\n\r\n    connectToAlgo = ()=>{\r\n      fetch('http://127.0.0.1:8000/algore_sults/?student_id='+this.state.de).\r\n      then(res => res.json()).\r\n      then(\r\n        result =>{\r\n          this.getAlgoResult(result)    \r\n        }\r\n      )\r\n    }\r\n\r\n  componentDidMount() {\r\n    this.connectToStudyFields()   \r\n    this.connectToCourses()\r\n    this.connectToPerformance()\r\n    this.getAlgoResult()\r\n   \r\n  }\r\n\r\n  handleClickSemester = (e)=>{\r\n   \r\n   let field = e.target.firstChild.value\r\n   let semester = e.target.lastChild.innerText\r\n    \r\n   this.setState({\r\n    default_semester: field,\r\n    default_study_field : semester,\r\n   })\r\n \r\n\r\n   this.connectToCourses(semester,field)\r\n   this.connectToPerformance()\r\n  }\r\n\r\n  semestersList(){     \r\n    return this.state.study_fields.map((element)=>\r\n    <li className=\"list-group-item\">   \r\n    <p>{element['name']} semsters</p>\r\n    <ul id=\"semesters\" className=\"list-group flex-row\">\r\n      {element.semesters.map((s)=>\r\n       <li className=\"list-group-item\" onClick={this.handleClickSemester}>\r\n       <input  value={element['field_id']} hidden/> \r\n       <p>{s}</p></li>\r\n      )}\r\n    </ul>\r\n  \r\n  </li>\r\n    )\r\n  }\r\n\r\n  algoResults(){\r\n  var algo_results = this.state.algo_results   \r\n      return (\r\n        <div className=\"\">\r\n          <div>\r\n            <h6>Algo 01</h6>\r\n             <div></div>\r\n          </div>\r\n          <div>\r\n            <h6>Algo 02</h6>\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n      )\r\n  }\r\n  render(){\r\n    const greenBarColor = \"#18BD9B\"\r\n    const redBarColor = \"#E54787\"\r\n    const whiteBarColor = \"#E7E7EB\"\r\n    const orangeBarColor = \"#FC7C00\"\r\n    const semestersList = this.semestersList()\r\n    const algoResults = this.algoResults()\r\n    const cardWidth = \"22rem\"\r\n    return (\r\n      \r\n      <div className=\"Profile\">\r\n        { \r\n          /* the header we can choose a student */\r\n        }\r\n\r\n        <header className=\"\">\r\n        <div className=\"form-group search-student\">\r\n        <input  className=\" input-group-text\" type=\"button\"/>\r\n        <input className=\"text-dark\" type=\"text\" value={this.state.default_student} />\r\n        \r\n        </div>   \r\n        </header>\r\n\r\n        { \r\n          /* here you can see a radar about student performance in courses */\r\n        }\r\n\r\n        <article className=\"semster-module\">\r\n        {\r\n           /* semesters section */\r\n         }\r\n          <section>\r\n            <Card  >\r\n                <Card.Body>\r\n                  <ul id=\"semesters_list\" className=\"list-group\">\r\n                  {semestersList}\r\n                  </ul>      \r\n                </Card.Body>\r\n            </Card> \r\n          </section>\r\n         {\r\n           /* radar section */\r\n         }\r\n         <section className=\"flex\">\r\n         <Card id=\"student_performance\">\r\n            <Card.Body>\r\n                <Radar                             \r\n                  data={{ labels :this.state.radar_courses,  \r\n                          datasets: [\r\n                            { \r\n                              label: \"TP \",\r\n                              borderColor: greenBarColor,\r\n                              data : this.state.student__tps,\r\n                              fill : false\r\n                              },\r\n                              { \r\n                              label: \"TD \",\r\n                              borderColor: redBarColor,\r\n                              data : this.state.student__tds,\r\n                              fill : false\r\n                              },\r\n                              { \r\n                              label: \"EXAM \",\r\n                              borderColor: whiteBarColor,\r\n                              data :this.state.student__exams,\r\n                              fill : false\r\n                              },\r\n                              { \r\n                              label: \"AVG\",\r\n                              borderColor: orangeBarColor,\r\n                              data :this.state.student__avgs,\r\n                              fill : false\r\n                              }\r\n                          ],    \r\n                  }}                     \r\n                  width={0}\r\n                  height={250}\r\n                  options={{ maintainAspectRatio: false }}\r\n                />\r\n           </Card.Body>\r\n          </Card>\r\n\r\n          <Card id=\"algo_performance\">\r\n            <Card.Body>\r\n             {algoResults}\r\n           </Card.Body>\r\n          </Card>\r\n              </section>\r\n\r\n            \r\n       \r\n        </article>\r\n\r\n        { \r\n          /* more details info */\r\n        }\r\n        \r\n        <article>\r\n         <section></section>\r\n         <section></section>\r\n        </article>\r\n      </div>\r\n    );\r\n  }\r\n \r\n}\r\n\r\nexport default  Profile;\r\n"]},"metadata":{},"sourceType":"module"}