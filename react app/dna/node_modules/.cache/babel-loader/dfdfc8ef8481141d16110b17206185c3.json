{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport { refType } from '@material-ui/utils';\nimport Menu from '../Menu/Menu';\nimport { isFilled } from '../InputBase/utils';\nimport useForkRef from '../utils/useForkRef';\n\nfunction areEqualValues(a, b) {\n  if (_typeof(b) === 'object' && b !== null) {\n    return a === b;\n  }\n\n  return String(a) === String(b);\n}\n\nfunction isEmpty(display) {\n  return display == null || typeof display === 'string' && !display.trim();\n}\n/**\n * @ignore - internal component.\n */\n\n\nvar SelectInput = React.forwardRef(function SelectInput(props, ref) {\n  var autoFocus = props.autoFocus,\n      autoWidth = props.autoWidth,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      defaultValue = props.defaultValue,\n      disabled = props.disabled,\n      displayEmpty = props.displayEmpty,\n      IconComponent = props.IconComponent,\n      inputRefProp = props.inputRef,\n      labelId = props.labelId,\n      _props$MenuProps = props.MenuProps,\n      MenuProps = _props$MenuProps === void 0 ? {} : _props$MenuProps,\n      multiple = props.multiple,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onFocus = props.onFocus,\n      onOpen = props.onOpen,\n      openProp = props.open,\n      readOnly = props.readOnly,\n      renderValue = props.renderValue,\n      required = props.required,\n      _props$SelectDisplayP = props.SelectDisplayProps,\n      SelectDisplayProps = _props$SelectDisplayP === void 0 ? {} : _props$SelectDisplayP,\n      tabIndexProp = props.tabIndex,\n      type = props.type,\n      valueProp = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"autoWidth\", \"children\", \"classes\", \"className\", \"defaultValue\", \"disabled\", \"displayEmpty\", \"IconComponent\", \"inputRef\", \"labelId\", \"MenuProps\", \"multiple\", \"name\", \"onBlur\", \"onChange\", \"onClose\", \"onFocus\", \"onOpen\", \"open\", \"readOnly\", \"renderValue\", \"required\", \"SelectDisplayProps\", \"tabIndex\", \"type\", \"value\", \"variant\"]);\n\n  var _React$useRef = React.useRef(valueProp != null),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultValue),\n      valueState = _React$useState[0],\n      setValueState = _React$useState[1];\n\n  var value = isControlled ? valueProp : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (isControlled !== (valueProp != null)) {\n        console.error([\"Material-UI: A component is changing \".concat(isControlled ? 'a ' : 'an un', \"controlled Select to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', 'Decide between using a controlled or uncontrolled Select ' + 'element for the lifetime of the component.', 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [valueProp, isControlled]);\n  }\n\n  var inputRef = React.useRef(null);\n\n  var _React$useState2 = React.useState(null),\n      displayNode = _React$useState2[0],\n      setDisplayNode = _React$useState2[1];\n\n  var _React$useRef2 = React.useRef(openProp != null),\n      isOpenControlled = _React$useRef2.current;\n\n  var _React$useState3 = React.useState(),\n      menuMinWidthState = _React$useState3[0],\n      setMenuMinWidthState = _React$useState3[1];\n\n  var _React$useState4 = React.useState(false),\n      openState = _React$useState4[0],\n      setOpenState = _React$useState4[1];\n\n  var handleRef = useForkRef(ref, inputRefProp);\n  React.useImperativeHandle(handleRef, function () {\n    return {\n      focus: function focus() {\n        displayNode.focus();\n      },\n      node: inputRef.current,\n      value: value\n    };\n  }, [displayNode, value]);\n  React.useEffect(function () {\n    if (autoFocus && displayNode) {\n      displayNode.focus();\n    }\n  }, [autoFocus, displayNode]);\n\n  var update = function update(open, event) {\n    if (open) {\n      if (onOpen) {\n        onOpen(event);\n      }\n    } else if (onClose) {\n      onClose(event);\n    }\n\n    if (!isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : displayNode.clientWidth);\n      setOpenState(open);\n    }\n  };\n\n  var handleMouseDown = function handleMouseDown(event) {\n    // Hijack the default focus behavior.\n    event.preventDefault();\n    displayNode.focus();\n    update(true, event);\n  };\n\n  var handleClose = function handleClose(event) {\n    update(false, event);\n  };\n\n  var handleItemClick = function handleItemClick(child) {\n    return function (event) {\n      if (!multiple) {\n        update(false, event);\n      }\n\n      var newValue;\n\n      if (multiple) {\n        newValue = Array.isArray(value) ? _toConsumableArray(value) : [];\n        var itemIndex = value.indexOf(child.props.value);\n\n        if (itemIndex === -1) {\n          newValue.push(child.props.value);\n        } else {\n          newValue.splice(itemIndex, 1);\n        }\n      } else {\n        newValue = child.props.value;\n      }\n\n      if (!isControlled) {\n        setValueState(newValue);\n      }\n\n      if (onChange) {\n        event.persist(); // Preact support, target is read only property on a native event.\n\n        Object.defineProperty(event, 'target', {\n          writable: true,\n          value: {\n            value: newValue,\n            name: name\n          }\n        });\n        onChange(event, child);\n      }\n    };\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (!readOnly) {\n      var validKeys = [' ', 'ArrowUp', 'ArrowDown', // The native select doesn't respond to enter on MacOS, but it's recommended by\n      // https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html\n      'Enter'];\n\n      if (validKeys.indexOf(event.key) !== -1) {\n        event.preventDefault();\n        update(true, event);\n      }\n    }\n  };\n\n  var open = displayNode !== null && (isOpenControlled ? openProp : openState);\n\n  var handleBlur = function handleBlur(event) {\n    // if open event.stopImmediatePropagation\n    if (!open && onBlur) {\n      event.persist(); // Preact support, target is read only property on a native event.\n\n      Object.defineProperty(event, 'target', {\n        writable: true,\n        value: {\n          value: value,\n          name: name\n        }\n      });\n      onBlur(event);\n    }\n  };\n\n  delete other['aria-invalid'];\n  var display;\n  var displaySingle;\n  var displayMultiple = [];\n  var computeDisplay = false;\n  var foundMatch = false; // No need to display any value if the field is empty.\n\n  if (isFilled({\n    value: value\n  }) || displayEmpty) {\n    if (renderValue) {\n      display = renderValue(value);\n    } else {\n      computeDisplay = true;\n    }\n  }\n\n  var items = React.Children.map(children, function (child) {\n    if (!React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: the Select component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    var selected;\n\n    if (multiple) {\n      if (!Array.isArray(value)) {\n        throw new Error('Material-UI: the `value` prop must be an array ' + 'when using the `Select` component with `multiple`.');\n      }\n\n      selected = value.some(function (v) {\n        return areEqualValues(v, child.props.value);\n      });\n\n      if (selected && computeDisplay) {\n        displayMultiple.push(child.props.children);\n      }\n    } else {\n      selected = areEqualValues(value, child.props.value);\n\n      if (selected && computeDisplay) {\n        displaySingle = child.props.children;\n      }\n    }\n\n    if (selected) {\n      foundMatch = true;\n    }\n\n    return React.cloneElement(child, {\n      'aria-selected': selected ? 'true' : undefined,\n      onClick: handleItemClick(child),\n      onKeyUp: function onKeyUp(event) {\n        if (event.key === ' ') {\n          // otherwise our MenuItems dispatches a click event\n          // it's not behavior of the native <option> and causes\n          // the select to close immediately since we open on space keydown\n          event.preventDefault();\n        }\n\n        var onKeyUp = child.props.onKeyUp;\n\n        if (typeof onKeyUp === 'function') {\n          onKeyUp(event);\n        }\n      },\n      role: 'option',\n      selected: selected,\n      value: undefined,\n      // The value is most likely not a valid HTML attribute.\n      'data-value': child.props.value // Instead, we provide it as a data attribute.\n\n    });\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (!foundMatch && !multiple && value !== '') {\n        var values = React.Children.toArray(children).map(function (child) {\n          return child.props.value;\n        });\n        console.warn([\"Material-UI: you have provided an out-of-range value `\".concat(value, \"` for the select \").concat(name ? \"(name=\\\"\".concat(name, \"\\\") \") : '', \"component.\"), \"Consider providing a value that matches one of the available options or ''.\", \"The available values are \".concat(values.filter(function (x) {\n          return x != null;\n        }).map(function (x) {\n          return \"`\".concat(x, \"`\");\n        }).join(', ') || '\"\"', \".\")].join('\\n'));\n      }\n    }, [foundMatch, children, multiple, name, value]);\n  }\n\n  if (computeDisplay) {\n    display = multiple ? displayMultiple.join(', ') : displaySingle;\n  } // Avoid performing a layout computation in the render method.\n\n\n  var menuMinWidth = menuMinWidthState;\n\n  if (!autoWidth && isOpenControlled && displayNode) {\n    menuMinWidth = displayNode.clientWidth;\n  }\n\n  var tabIndex;\n\n  if (typeof tabIndexProp !== 'undefined') {\n    tabIndex = tabIndexProp;\n  } else {\n    tabIndex = disabled ? null : 0;\n  }\n\n  var buttonId = SelectDisplayProps.id || (name ? \"mui-component-select-\".concat(name) : undefined);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", _extends({\n    className: clsx(classes.root, // TODO v5: merge root and select\n    classes.select, classes.selectMenu, classes[variant], className, disabled && classes.disabled),\n    ref: setDisplayNode,\n    tabIndex: tabIndex,\n    role: \"button\",\n    \"aria-expanded\": open ? 'true' : undefined,\n    \"aria-labelledby\": \"\".concat(labelId || '', \" \").concat(buttonId || ''),\n    \"aria-haspopup\": \"listbox\",\n    onKeyDown: handleKeyDown,\n    onMouseDown: disabled || readOnly ? null : handleMouseDown,\n    onBlur: handleBlur,\n    onFocus: onFocus\n  }, SelectDisplayProps, {\n    // The id is required for proper a11y\n    id: buttonId\n  }), isEmpty(display) ? // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : display), React.createElement(\"input\", _extends({\n    value: Array.isArray(value) ? value.join(',') : value,\n    name: name,\n    ref: inputRef,\n    type: \"hidden\",\n    autoFocus: autoFocus\n  }, other)), React.createElement(IconComponent, {\n    className: clsx(classes.icon, classes[\"icon\".concat(capitalize(variant))], open && classes.iconOpen)\n  }), React.createElement(Menu, _extends({\n    id: \"menu-\".concat(name || ''),\n    anchorEl: displayNode,\n    open: open,\n    onClose: handleClose\n  }, MenuProps, {\n    MenuListProps: _extends({\n      'aria-labelledby': labelId,\n      role: 'listbox',\n      disableListWrap: true\n    }, MenuProps.MenuListProps),\n    PaperProps: _extends({}, MenuProps.PaperProps, {\n      style: _extends({\n        minWidth: menuMinWidth\n      }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)\n    })\n  }), items));\n});\nprocess.env.NODE_ENV !== \"production\" ? SelectInput.propTypes = {\n  /**\n   * @ignore\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the width of the popover will automatically be set according to the items inside the\n   * menu, otherwise it will be at least the width of the select input.\n   */\n  autoWidth: PropTypes.bool,\n\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<MenuItem>` elements.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The CSS class name of the select element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the select will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the selected item is displayed even if its value is empty.\n   */\n  displayEmpty: PropTypes.bool,\n\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: PropTypes.elementType.isRequired,\n\n  /**\n   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`\n   * Equivalent to `ref`\n   */\n  inputRef: refType,\n\n  /**\n   * The idea of an element that acts as an additional label. The Select will\n   * be labelled by the additional label and the selected value.\n   */\n  labelId: PropTypes.string,\n\n  /**\n   * Props applied to the [`Menu`](/api/menu/) element.\n   */\n  MenuProps: PropTypes.object,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Name attribute of the `select` or hidden `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback function fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (any).\n   * @param {object} [child] The react element that was selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control `select` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {any} value The `value` provided to the component.\n   * @returns {ReactNode}\n   */\n  renderValue: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Props applied to the clickable div element.\n   */\n  SelectDisplayProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.any,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default SelectInput;","map":{"version":3,"sources":["C:/Users/icom/myProjects/DNA/react app/dna/node_modules/@material-ui/core/esm/Select/SelectInput.js"],"names":["_extends","_toConsumableArray","_objectWithoutProperties","_typeof","React","isFragment","PropTypes","clsx","capitalize","refType","Menu","isFilled","useForkRef","areEqualValues","a","b","String","isEmpty","display","trim","SelectInput","forwardRef","props","ref","autoFocus","autoWidth","children","classes","className","defaultValue","disabled","displayEmpty","IconComponent","inputRefProp","inputRef","labelId","_props$MenuProps","MenuProps","multiple","name","onBlur","onChange","onClose","onFocus","onOpen","openProp","open","readOnly","renderValue","required","_props$SelectDisplayP","SelectDisplayProps","tabIndexProp","tabIndex","type","valueProp","value","_props$variant","variant","other","_React$useRef","useRef","isControlled","current","_React$useState","useState","valueState","setValueState","process","env","NODE_ENV","useEffect","console","error","concat","join","_React$useState2","displayNode","setDisplayNode","_React$useRef2","isOpenControlled","_React$useState3","menuMinWidthState","setMenuMinWidthState","_React$useState4","openState","setOpenState","handleRef","useImperativeHandle","focus","node","update","event","clientWidth","handleMouseDown","preventDefault","handleClose","handleItemClick","child","newValue","Array","isArray","itemIndex","indexOf","push","splice","persist","Object","defineProperty","writable","handleKeyDown","validKeys","key","handleBlur","displaySingle","displayMultiple","computeDisplay","foundMatch","items","Children","map","isValidElement","selected","Error","some","v","cloneElement","undefined","onClick","onKeyUp","role","values","toArray","warn","filter","x","menuMinWidth","buttonId","id","createElement","Fragment","root","select","selectMenu","onKeyDown","onMouseDown","dangerouslySetInnerHTML","__html","icon","iconOpen","anchorEl","MenuListProps","disableListWrap","PaperProps","style","minWidth","propTypes","bool","object","isRequired","string","any","elementType","func","oneOfType","number","oneOf"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport { refType } from '@material-ui/utils';\nimport Menu from '../Menu/Menu';\nimport { isFilled } from '../InputBase/utils';\nimport useForkRef from '../utils/useForkRef';\n\nfunction areEqualValues(a, b) {\n  if (_typeof(b) === 'object' && b !== null) {\n    return a === b;\n  }\n\n  return String(a) === String(b);\n}\n\nfunction isEmpty(display) {\n  return display == null || typeof display === 'string' && !display.trim();\n}\n/**\n * @ignore - internal component.\n */\n\n\nvar SelectInput = React.forwardRef(function SelectInput(props, ref) {\n  var autoFocus = props.autoFocus,\n      autoWidth = props.autoWidth,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      defaultValue = props.defaultValue,\n      disabled = props.disabled,\n      displayEmpty = props.displayEmpty,\n      IconComponent = props.IconComponent,\n      inputRefProp = props.inputRef,\n      labelId = props.labelId,\n      _props$MenuProps = props.MenuProps,\n      MenuProps = _props$MenuProps === void 0 ? {} : _props$MenuProps,\n      multiple = props.multiple,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onFocus = props.onFocus,\n      onOpen = props.onOpen,\n      openProp = props.open,\n      readOnly = props.readOnly,\n      renderValue = props.renderValue,\n      required = props.required,\n      _props$SelectDisplayP = props.SelectDisplayProps,\n      SelectDisplayProps = _props$SelectDisplayP === void 0 ? {} : _props$SelectDisplayP,\n      tabIndexProp = props.tabIndex,\n      type = props.type,\n      valueProp = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"autoWidth\", \"children\", \"classes\", \"className\", \"defaultValue\", \"disabled\", \"displayEmpty\", \"IconComponent\", \"inputRef\", \"labelId\", \"MenuProps\", \"multiple\", \"name\", \"onBlur\", \"onChange\", \"onClose\", \"onFocus\", \"onOpen\", \"open\", \"readOnly\", \"renderValue\", \"required\", \"SelectDisplayProps\", \"tabIndex\", \"type\", \"value\", \"variant\"]);\n\n  var _React$useRef = React.useRef(valueProp != null),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultValue),\n      valueState = _React$useState[0],\n      setValueState = _React$useState[1];\n\n  var value = isControlled ? valueProp : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (isControlled !== (valueProp != null)) {\n        console.error([\"Material-UI: A component is changing \".concat(isControlled ? 'a ' : 'an un', \"controlled Select to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', 'Decide between using a controlled or uncontrolled Select ' + 'element for the lifetime of the component.', 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [valueProp, isControlled]);\n  }\n\n  var inputRef = React.useRef(null);\n\n  var _React$useState2 = React.useState(null),\n      displayNode = _React$useState2[0],\n      setDisplayNode = _React$useState2[1];\n\n  var _React$useRef2 = React.useRef(openProp != null),\n      isOpenControlled = _React$useRef2.current;\n\n  var _React$useState3 = React.useState(),\n      menuMinWidthState = _React$useState3[0],\n      setMenuMinWidthState = _React$useState3[1];\n\n  var _React$useState4 = React.useState(false),\n      openState = _React$useState4[0],\n      setOpenState = _React$useState4[1];\n\n  var handleRef = useForkRef(ref, inputRefProp);\n  React.useImperativeHandle(handleRef, function () {\n    return {\n      focus: function focus() {\n        displayNode.focus();\n      },\n      node: inputRef.current,\n      value: value\n    };\n  }, [displayNode, value]);\n  React.useEffect(function () {\n    if (autoFocus && displayNode) {\n      displayNode.focus();\n    }\n  }, [autoFocus, displayNode]);\n\n  var update = function update(open, event) {\n    if (open) {\n      if (onOpen) {\n        onOpen(event);\n      }\n    } else if (onClose) {\n      onClose(event);\n    }\n\n    if (!isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : displayNode.clientWidth);\n      setOpenState(open);\n    }\n  };\n\n  var handleMouseDown = function handleMouseDown(event) {\n    // Hijack the default focus behavior.\n    event.preventDefault();\n    displayNode.focus();\n    update(true, event);\n  };\n\n  var handleClose = function handleClose(event) {\n    update(false, event);\n  };\n\n  var handleItemClick = function handleItemClick(child) {\n    return function (event) {\n      if (!multiple) {\n        update(false, event);\n      }\n\n      var newValue;\n\n      if (multiple) {\n        newValue = Array.isArray(value) ? _toConsumableArray(value) : [];\n        var itemIndex = value.indexOf(child.props.value);\n\n        if (itemIndex === -1) {\n          newValue.push(child.props.value);\n        } else {\n          newValue.splice(itemIndex, 1);\n        }\n      } else {\n        newValue = child.props.value;\n      }\n\n      if (!isControlled) {\n        setValueState(newValue);\n      }\n\n      if (onChange) {\n        event.persist(); // Preact support, target is read only property on a native event.\n\n        Object.defineProperty(event, 'target', {\n          writable: true,\n          value: {\n            value: newValue,\n            name: name\n          }\n        });\n        onChange(event, child);\n      }\n    };\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (!readOnly) {\n      var validKeys = [' ', 'ArrowUp', 'ArrowDown', // The native select doesn't respond to enter on MacOS, but it's recommended by\n      // https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html\n      'Enter'];\n\n      if (validKeys.indexOf(event.key) !== -1) {\n        event.preventDefault();\n        update(true, event);\n      }\n    }\n  };\n\n  var open = displayNode !== null && (isOpenControlled ? openProp : openState);\n\n  var handleBlur = function handleBlur(event) {\n    // if open event.stopImmediatePropagation\n    if (!open && onBlur) {\n      event.persist(); // Preact support, target is read only property on a native event.\n\n      Object.defineProperty(event, 'target', {\n        writable: true,\n        value: {\n          value: value,\n          name: name\n        }\n      });\n      onBlur(event);\n    }\n  };\n\n  delete other['aria-invalid'];\n  var display;\n  var displaySingle;\n  var displayMultiple = [];\n  var computeDisplay = false;\n  var foundMatch = false; // No need to display any value if the field is empty.\n\n  if (isFilled({\n    value: value\n  }) || displayEmpty) {\n    if (renderValue) {\n      display = renderValue(value);\n    } else {\n      computeDisplay = true;\n    }\n  }\n\n  var items = React.Children.map(children, function (child) {\n    if (!React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: the Select component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    var selected;\n\n    if (multiple) {\n      if (!Array.isArray(value)) {\n        throw new Error('Material-UI: the `value` prop must be an array ' + 'when using the `Select` component with `multiple`.');\n      }\n\n      selected = value.some(function (v) {\n        return areEqualValues(v, child.props.value);\n      });\n\n      if (selected && computeDisplay) {\n        displayMultiple.push(child.props.children);\n      }\n    } else {\n      selected = areEqualValues(value, child.props.value);\n\n      if (selected && computeDisplay) {\n        displaySingle = child.props.children;\n      }\n    }\n\n    if (selected) {\n      foundMatch = true;\n    }\n\n    return React.cloneElement(child, {\n      'aria-selected': selected ? 'true' : undefined,\n      onClick: handleItemClick(child),\n      onKeyUp: function onKeyUp(event) {\n        if (event.key === ' ') {\n          // otherwise our MenuItems dispatches a click event\n          // it's not behavior of the native <option> and causes\n          // the select to close immediately since we open on space keydown\n          event.preventDefault();\n        }\n\n        var onKeyUp = child.props.onKeyUp;\n\n        if (typeof onKeyUp === 'function') {\n          onKeyUp(event);\n        }\n      },\n      role: 'option',\n      selected: selected,\n      value: undefined,\n      // The value is most likely not a valid HTML attribute.\n      'data-value': child.props.value // Instead, we provide it as a data attribute.\n\n    });\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (!foundMatch && !multiple && value !== '') {\n        var values = React.Children.toArray(children).map(function (child) {\n          return child.props.value;\n        });\n        console.warn([\"Material-UI: you have provided an out-of-range value `\".concat(value, \"` for the select \").concat(name ? \"(name=\\\"\".concat(name, \"\\\") \") : '', \"component.\"), \"Consider providing a value that matches one of the available options or ''.\", \"The available values are \".concat(values.filter(function (x) {\n          return x != null;\n        }).map(function (x) {\n          return \"`\".concat(x, \"`\");\n        }).join(', ') || '\"\"', \".\")].join('\\n'));\n      }\n    }, [foundMatch, children, multiple, name, value]);\n  }\n\n  if (computeDisplay) {\n    display = multiple ? displayMultiple.join(', ') : displaySingle;\n  } // Avoid performing a layout computation in the render method.\n\n\n  var menuMinWidth = menuMinWidthState;\n\n  if (!autoWidth && isOpenControlled && displayNode) {\n    menuMinWidth = displayNode.clientWidth;\n  }\n\n  var tabIndex;\n\n  if (typeof tabIndexProp !== 'undefined') {\n    tabIndex = tabIndexProp;\n  } else {\n    tabIndex = disabled ? null : 0;\n  }\n\n  var buttonId = SelectDisplayProps.id || (name ? \"mui-component-select-\".concat(name) : undefined);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", _extends({\n    className: clsx(classes.root, // TODO v5: merge root and select\n    classes.select, classes.selectMenu, classes[variant], className, disabled && classes.disabled),\n    ref: setDisplayNode,\n    tabIndex: tabIndex,\n    role: \"button\",\n    \"aria-expanded\": open ? 'true' : undefined,\n    \"aria-labelledby\": \"\".concat(labelId || '', \" \").concat(buttonId || ''),\n    \"aria-haspopup\": \"listbox\",\n    onKeyDown: handleKeyDown,\n    onMouseDown: disabled || readOnly ? null : handleMouseDown,\n    onBlur: handleBlur,\n    onFocus: onFocus\n  }, SelectDisplayProps, {\n    // The id is required for proper a11y\n    id: buttonId\n  }), isEmpty(display) ? // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : display), React.createElement(\"input\", _extends({\n    value: Array.isArray(value) ? value.join(',') : value,\n    name: name,\n    ref: inputRef,\n    type: \"hidden\",\n    autoFocus: autoFocus\n  }, other)), React.createElement(IconComponent, {\n    className: clsx(classes.icon, classes[\"icon\".concat(capitalize(variant))], open && classes.iconOpen)\n  }), React.createElement(Menu, _extends({\n    id: \"menu-\".concat(name || ''),\n    anchorEl: displayNode,\n    open: open,\n    onClose: handleClose\n  }, MenuProps, {\n    MenuListProps: _extends({\n      'aria-labelledby': labelId,\n      role: 'listbox',\n      disableListWrap: true\n    }, MenuProps.MenuListProps),\n    PaperProps: _extends({}, MenuProps.PaperProps, {\n      style: _extends({\n        minWidth: menuMinWidth\n      }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)\n    })\n  }), items));\n});\nprocess.env.NODE_ENV !== \"production\" ? SelectInput.propTypes = {\n  /**\n   * @ignore\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the width of the popover will automatically be set according to the items inside the\n   * menu, otherwise it will be at least the width of the select input.\n   */\n  autoWidth: PropTypes.bool,\n\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<MenuItem>` elements.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The CSS class name of the select element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the select will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the selected item is displayed even if its value is empty.\n   */\n  displayEmpty: PropTypes.bool,\n\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: PropTypes.elementType.isRequired,\n\n  /**\n   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`\n   * Equivalent to `ref`\n   */\n  inputRef: refType,\n\n  /**\n   * The idea of an element that acts as an additional label. The Select will\n   * be labelled by the additional label and the selected value.\n   */\n  labelId: PropTypes.string,\n\n  /**\n   * Props applied to the [`Menu`](/api/menu/) element.\n   */\n  MenuProps: PropTypes.object,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Name attribute of the `select` or hidden `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback function fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (any).\n   * @param {object} [child] The react element that was selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control `select` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {any} value The `value` provided to the component.\n   * @returns {ReactNode}\n   */\n  renderValue: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Props applied to the clickable div element.\n   */\n  SelectDisplayProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.any,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default SelectInput;"]},"metadata":{},"sourceType":"module"}