{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultInjection\n */\n'use strict';\n\nvar BeforeInputEventPlugin = require('./BeforeInputEventPlugin');\n\nvar ChangeEventPlugin = require('./ChangeEventPlugin');\n\nvar ClientReactRootIndex = require('./ClientReactRootIndex');\n\nvar DefaultEventPluginOrder = require('./DefaultEventPluginOrder');\n\nvar EnterLeaveEventPlugin = require('./EnterLeaveEventPlugin');\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar HTMLDOMPropertyConfig = require('./HTMLDOMPropertyConfig');\n\nvar ReactBrowserComponentMixin = require('./ReactBrowserComponentMixin');\n\nvar ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');\n\nvar ReactDefaultBatchingStrategy = require('./ReactDefaultBatchingStrategy');\n\nvar ReactDOMComponent = require('./ReactDOMComponent');\n\nvar ReactDOMTextComponent = require('./ReactDOMTextComponent');\n\nvar ReactEventListener = require('./ReactEventListener');\n\nvar ReactInjection = require('./ReactInjection');\n\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\n\nvar ReactMount = require('./ReactMount');\n\nvar ReactReconcileTransaction = require('./ReactReconcileTransaction');\n\nvar SelectEventPlugin = require('./SelectEventPlugin');\n\nvar ServerReactRootIndex = require('./ServerReactRootIndex');\n\nvar SimpleEventPlugin = require('./SimpleEventPlugin');\n\nvar SVGDOMPropertyConfig = require('./SVGDOMPropertyConfig');\n\nvar alreadyInjected = false;\n\nfunction inject() {\n  if (alreadyInjected) {\n    // TODO: This is currently true because these injections are shared between\n    // the client and the server package. They should be built independently\n    // and not share any injection state. Then this problem will be solved.\n    return;\n  }\n\n  alreadyInjected = true;\n  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);\n  /**\n   * Inject modules for resolving DOM hierarchy and plugin ordering.\n   */\n\n  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);\n  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);\n  ReactInjection.EventPluginHub.injectMount(ReactMount);\n  /**\n   * Some important event plugins included by default (without having to require\n   * them).\n   */\n\n  ReactInjection.EventPluginHub.injectEventPluginsByName({\n    SimpleEventPlugin: SimpleEventPlugin,\n    EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n    ChangeEventPlugin: ChangeEventPlugin,\n    SelectEventPlugin: SelectEventPlugin,\n    BeforeInputEventPlugin: BeforeInputEventPlugin\n  });\n  ReactInjection.NativeComponent.injectGenericComponentClass(ReactDOMComponent);\n  ReactInjection.NativeComponent.injectTextComponentClass(ReactDOMTextComponent);\n  ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);\n  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');\n  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);\n  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n  ReactInjection.RootIndex.injectCreateReactRootIndex(ExecutionEnvironment.canUseDOM ? ClientReactRootIndex.createReactRootIndex : ServerReactRootIndex.createReactRootIndex);\n  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);\n\n  if (process.env.NODE_ENV !== 'production') {\n    var url = ExecutionEnvironment.canUseDOM && window.location.href || '';\n\n    if (/[?&]react_perf\\b/.test(url)) {\n      var ReactDefaultPerf = require('./ReactDefaultPerf');\n\n      ReactDefaultPerf.start();\n    }\n  }\n}\n\nmodule.exports = {\n  inject: inject\n};","map":{"version":3,"sources":["C:/Users/icom/myProjects/DNA/react app/dna/node_modules/react-holder/node_modules/react/lib/ReactDefaultInjection.js"],"names":["BeforeInputEventPlugin","require","ChangeEventPlugin","ClientReactRootIndex","DefaultEventPluginOrder","EnterLeaveEventPlugin","ExecutionEnvironment","HTMLDOMPropertyConfig","ReactBrowserComponentMixin","ReactComponentBrowserEnvironment","ReactDefaultBatchingStrategy","ReactDOMComponent","ReactDOMTextComponent","ReactEventListener","ReactInjection","ReactInstanceHandles","ReactMount","ReactReconcileTransaction","SelectEventPlugin","ServerReactRootIndex","SimpleEventPlugin","SVGDOMPropertyConfig","alreadyInjected","inject","EventEmitter","injectReactEventListener","EventPluginHub","injectEventPluginOrder","injectInstanceHandle","injectMount","injectEventPluginsByName","NativeComponent","injectGenericComponentClass","injectTextComponentClass","Class","injectMixin","DOMProperty","injectDOMPropertyConfig","EmptyComponent","injectEmptyComponent","Updates","injectReconcileTransaction","injectBatchingStrategy","RootIndex","injectCreateReactRootIndex","canUseDOM","createReactRootIndex","Component","injectEnvironment","process","env","NODE_ENV","url","window","location","href","test","ReactDefaultPerf","start","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultInjection\n */\n\n'use strict';\n\nvar BeforeInputEventPlugin = require('./BeforeInputEventPlugin');\nvar ChangeEventPlugin = require('./ChangeEventPlugin');\nvar ClientReactRootIndex = require('./ClientReactRootIndex');\nvar DefaultEventPluginOrder = require('./DefaultEventPluginOrder');\nvar EnterLeaveEventPlugin = require('./EnterLeaveEventPlugin');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar HTMLDOMPropertyConfig = require('./HTMLDOMPropertyConfig');\nvar ReactBrowserComponentMixin = require('./ReactBrowserComponentMixin');\nvar ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');\nvar ReactDefaultBatchingStrategy = require('./ReactDefaultBatchingStrategy');\nvar ReactDOMComponent = require('./ReactDOMComponent');\nvar ReactDOMTextComponent = require('./ReactDOMTextComponent');\nvar ReactEventListener = require('./ReactEventListener');\nvar ReactInjection = require('./ReactInjection');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\nvar ReactMount = require('./ReactMount');\nvar ReactReconcileTransaction = require('./ReactReconcileTransaction');\nvar SelectEventPlugin = require('./SelectEventPlugin');\nvar ServerReactRootIndex = require('./ServerReactRootIndex');\nvar SimpleEventPlugin = require('./SimpleEventPlugin');\nvar SVGDOMPropertyConfig = require('./SVGDOMPropertyConfig');\n\nvar alreadyInjected = false;\n\nfunction inject() {\n  if (alreadyInjected) {\n    // TODO: This is currently true because these injections are shared between\n    // the client and the server package. They should be built independently\n    // and not share any injection state. Then this problem will be solved.\n    return;\n  }\n  alreadyInjected = true;\n\n  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);\n\n  /**\n   * Inject modules for resolving DOM hierarchy and plugin ordering.\n   */\n  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);\n  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);\n  ReactInjection.EventPluginHub.injectMount(ReactMount);\n\n  /**\n   * Some important event plugins included by default (without having to require\n   * them).\n   */\n  ReactInjection.EventPluginHub.injectEventPluginsByName({\n    SimpleEventPlugin: SimpleEventPlugin,\n    EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n    ChangeEventPlugin: ChangeEventPlugin,\n    SelectEventPlugin: SelectEventPlugin,\n    BeforeInputEventPlugin: BeforeInputEventPlugin\n  });\n\n  ReactInjection.NativeComponent.injectGenericComponentClass(ReactDOMComponent);\n\n  ReactInjection.NativeComponent.injectTextComponentClass(ReactDOMTextComponent);\n\n  ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);\n\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);\n\n  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');\n\n  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);\n  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n\n  ReactInjection.RootIndex.injectCreateReactRootIndex(ExecutionEnvironment.canUseDOM ? ClientReactRootIndex.createReactRootIndex : ServerReactRootIndex.createReactRootIndex);\n\n  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);\n\n  if (process.env.NODE_ENV !== 'production') {\n    var url = ExecutionEnvironment.canUseDOM && window.location.href || '';\n    if (/[?&]react_perf\\b/.test(url)) {\n      var ReactDefaultPerf = require('./ReactDefaultPerf');\n      ReactDefaultPerf.start();\n    }\n  }\n}\n\nmodule.exports = {\n  inject: inject\n};"]},"metadata":{},"sourceType":"script"}