{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMSelect\n */\n'use strict';\n\nvar LinkedValueUtils = require('./LinkedValueUtils');\n\nvar ReactMount = require('./ReactMount');\n\nvar ReactUpdates = require('./ReactUpdates');\n\nvar assign = require('./Object.assign');\n\nvar warning = require('fbjs/lib/warning');\n\nvar valueContextKey = '__ReactDOMSelect_value$' + Math.random().toString(36).slice(2);\n\nfunction updateOptionsIfPendingUpdateAndMounted() {\n  if (this._rootNodeID && this._wrapperState.pendingUpdate) {\n    this._wrapperState.pendingUpdate = false;\n    var props = this._currentElement.props;\n    var value = LinkedValueUtils.getValue(props);\n\n    if (value != null) {\n      updateOptions(this, Boolean(props.multiple), value);\n    }\n  }\n}\n\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n\n  return '';\n}\n\nvar valuePropNames = ['value', 'defaultValue'];\n/**\n * Validation function for `value` and `defaultValue`.\n * @private\n */\n\nfunction checkSelectPropTypes(inst, props) {\n  var owner = inst._currentElement._owner;\n  LinkedValueUtils.checkPropTypes('select', props, owner);\n\n  for (var i = 0; i < valuePropNames.length; i++) {\n    var propName = valuePropNames[i];\n\n    if (props[propName] == null) {\n      continue;\n    }\n\n    if (props.multiple) {\n      process.env.NODE_ENV !== 'production' ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;\n    } else {\n      process.env.NODE_ENV !== 'production' ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;\n    }\n  }\n}\n/**\n * @param {ReactDOMComponent} inst\n * @param {boolean} multiple\n * @param {*} propValue A stringable (with `multiple`, a list of stringables).\n * @private\n */\n\n\nfunction updateOptions(inst, multiple, propValue) {\n  var selectedValue, i;\n  var options = ReactMount.getNode(inst._rootNodeID).options;\n\n  if (multiple) {\n    selectedValue = {};\n\n    for (i = 0; i < propValue.length; i++) {\n      selectedValue['' + propValue[i]] = true;\n    }\n\n    for (i = 0; i < options.length; i++) {\n      var selected = selectedValue.hasOwnProperty(options[i].value);\n\n      if (options[i].selected !== selected) {\n        options[i].selected = selected;\n      }\n    }\n  } else {\n    // Do not set `select.value` as exact behavior isn't consistent across all\n    // browsers for all cases.\n    selectedValue = '' + propValue;\n\n    for (i = 0; i < options.length; i++) {\n      if (options[i].value === selectedValue) {\n        options[i].selected = true;\n        return;\n      }\n    }\n\n    if (options.length) {\n      options[0].selected = true;\n    }\n  }\n}\n/**\n * Implements a <select> native component that allows optionally setting the\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n * stringable. If `multiple` is true, the prop must be an array of stringables.\n *\n * If `value` is not supplied (or null/undefined), user actions that change the\n * selected option will trigger updates to the rendered options.\n *\n * If it is supplied (and not null/undefined), the rendered options will not\n * update in response to user actions. Instead, the `value` prop must change in\n * order for the rendered options to update.\n *\n * If `defaultValue` is provided, any options with the supplied values will be\n * selected.\n */\n\n\nvar ReactDOMSelect = {\n  valueContextKey: valueContextKey,\n  getNativeProps: function (inst, props, context) {\n    return assign({}, props, {\n      onChange: inst._wrapperState.onChange,\n      value: undefined\n    });\n  },\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkSelectPropTypes(inst, props);\n    }\n\n    var value = LinkedValueUtils.getValue(props);\n    inst._wrapperState = {\n      pendingUpdate: false,\n      initialValue: value != null ? value : props.defaultValue,\n      onChange: _handleChange.bind(inst),\n      wasMultiple: Boolean(props.multiple)\n    };\n  },\n  processChildContext: function (inst, props, context) {\n    // Pass down initial value so initial generated markup has correct\n    // `selected` attributes\n    var childContext = assign({}, context);\n    childContext[valueContextKey] = inst._wrapperState.initialValue;\n    return childContext;\n  },\n  postUpdateWrapper: function (inst) {\n    var props = inst._currentElement.props; // After the initial mount, we control selected-ness manually so don't pass\n    // the context value down\n\n    inst._wrapperState.initialValue = undefined;\n    var wasMultiple = inst._wrapperState.wasMultiple;\n    inst._wrapperState.wasMultiple = Boolean(props.multiple);\n    var value = LinkedValueUtils.getValue(props);\n\n    if (value != null) {\n      inst._wrapperState.pendingUpdate = false;\n      updateOptions(inst, Boolean(props.multiple), value);\n    } else if (wasMultiple !== Boolean(props.multiple)) {\n      // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n      if (props.defaultValue != null) {\n        updateOptions(inst, Boolean(props.multiple), props.defaultValue);\n      } else {\n        // Revert the select back to its default unselected state.\n        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');\n      }\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n  this._wrapperState.pendingUpdate = true;\n  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);\n  return returnValue;\n}\n\nmodule.exports = ReactDOMSelect;","map":{"version":3,"sources":["C:/Users/icom/myProjects/DNA/react app/dna/node_modules/react-holder/node_modules/react/lib/ReactDOMSelect.js"],"names":["LinkedValueUtils","require","ReactMount","ReactUpdates","assign","warning","valueContextKey","Math","random","toString","slice","updateOptionsIfPendingUpdateAndMounted","_rootNodeID","_wrapperState","pendingUpdate","props","_currentElement","value","getValue","updateOptions","Boolean","multiple","getDeclarationErrorAddendum","owner","name","getName","valuePropNames","checkSelectPropTypes","inst","_owner","checkPropTypes","i","length","propName","process","env","NODE_ENV","Array","isArray","undefined","propValue","selectedValue","options","getNode","selected","hasOwnProperty","ReactDOMSelect","getNativeProps","context","onChange","mountWrapper","initialValue","defaultValue","_handleChange","bind","wasMultiple","processChildContext","childContext","postUpdateWrapper","event","returnValue","executeOnChange","asap","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMSelect\n */\n\n'use strict';\n\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactMount = require('./ReactMount');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar assign = require('./Object.assign');\nvar warning = require('fbjs/lib/warning');\n\nvar valueContextKey = '__ReactDOMSelect_value$' + Math.random().toString(36).slice(2);\n\nfunction updateOptionsIfPendingUpdateAndMounted() {\n  if (this._rootNodeID && this._wrapperState.pendingUpdate) {\n    this._wrapperState.pendingUpdate = false;\n\n    var props = this._currentElement.props;\n    var value = LinkedValueUtils.getValue(props);\n\n    if (value != null) {\n      updateOptions(this, Boolean(props.multiple), value);\n    }\n  }\n}\n\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\nvar valuePropNames = ['value', 'defaultValue'];\n\n/**\n * Validation function for `value` and `defaultValue`.\n * @private\n */\nfunction checkSelectPropTypes(inst, props) {\n  var owner = inst._currentElement._owner;\n  LinkedValueUtils.checkPropTypes('select', props, owner);\n\n  for (var i = 0; i < valuePropNames.length; i++) {\n    var propName = valuePropNames[i];\n    if (props[propName] == null) {\n      continue;\n    }\n    if (props.multiple) {\n      process.env.NODE_ENV !== 'production' ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;\n    } else {\n      process.env.NODE_ENV !== 'production' ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;\n    }\n  }\n}\n\n/**\n * @param {ReactDOMComponent} inst\n * @param {boolean} multiple\n * @param {*} propValue A stringable (with `multiple`, a list of stringables).\n * @private\n */\nfunction updateOptions(inst, multiple, propValue) {\n  var selectedValue, i;\n  var options = ReactMount.getNode(inst._rootNodeID).options;\n\n  if (multiple) {\n    selectedValue = {};\n    for (i = 0; i < propValue.length; i++) {\n      selectedValue['' + propValue[i]] = true;\n    }\n    for (i = 0; i < options.length; i++) {\n      var selected = selectedValue.hasOwnProperty(options[i].value);\n      if (options[i].selected !== selected) {\n        options[i].selected = selected;\n      }\n    }\n  } else {\n    // Do not set `select.value` as exact behavior isn't consistent across all\n    // browsers for all cases.\n    selectedValue = '' + propValue;\n    for (i = 0; i < options.length; i++) {\n      if (options[i].value === selectedValue) {\n        options[i].selected = true;\n        return;\n      }\n    }\n    if (options.length) {\n      options[0].selected = true;\n    }\n  }\n}\n\n/**\n * Implements a <select> native component that allows optionally setting the\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n * stringable. If `multiple` is true, the prop must be an array of stringables.\n *\n * If `value` is not supplied (or null/undefined), user actions that change the\n * selected option will trigger updates to the rendered options.\n *\n * If it is supplied (and not null/undefined), the rendered options will not\n * update in response to user actions. Instead, the `value` prop must change in\n * order for the rendered options to update.\n *\n * If `defaultValue` is provided, any options with the supplied values will be\n * selected.\n */\nvar ReactDOMSelect = {\n  valueContextKey: valueContextKey,\n\n  getNativeProps: function (inst, props, context) {\n    return assign({}, props, {\n      onChange: inst._wrapperState.onChange,\n      value: undefined\n    });\n  },\n\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkSelectPropTypes(inst, props);\n    }\n\n    var value = LinkedValueUtils.getValue(props);\n    inst._wrapperState = {\n      pendingUpdate: false,\n      initialValue: value != null ? value : props.defaultValue,\n      onChange: _handleChange.bind(inst),\n      wasMultiple: Boolean(props.multiple)\n    };\n  },\n\n  processChildContext: function (inst, props, context) {\n    // Pass down initial value so initial generated markup has correct\n    // `selected` attributes\n    var childContext = assign({}, context);\n    childContext[valueContextKey] = inst._wrapperState.initialValue;\n    return childContext;\n  },\n\n  postUpdateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    // After the initial mount, we control selected-ness manually so don't pass\n    // the context value down\n    inst._wrapperState.initialValue = undefined;\n\n    var wasMultiple = inst._wrapperState.wasMultiple;\n    inst._wrapperState.wasMultiple = Boolean(props.multiple);\n\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      inst._wrapperState.pendingUpdate = false;\n      updateOptions(inst, Boolean(props.multiple), value);\n    } else if (wasMultiple !== Boolean(props.multiple)) {\n      // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n      if (props.defaultValue != null) {\n        updateOptions(inst, Boolean(props.multiple), props.defaultValue);\n      } else {\n        // Revert the select back to its default unselected state.\n        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');\n      }\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\n  this._wrapperState.pendingUpdate = true;\n  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);\n  return returnValue;\n}\n\nmodule.exports = ReactDOMSelect;"]},"metadata":{},"sourceType":"script"}