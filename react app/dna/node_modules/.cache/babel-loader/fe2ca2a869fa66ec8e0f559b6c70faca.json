{"ast":null,"code":"/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Object.assign\n */\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign\n'use strict';\n\nfunction assign(target, sources) {\n  if (target == null) {\n    throw new TypeError('Object.assign target cannot be null or undefined');\n  }\n\n  var to = Object(target);\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n    var nextSource = arguments[nextIndex];\n\n    if (nextSource == null) {\n      continue;\n    }\n\n    var from = Object(nextSource); // We don't currently support accessors nor proxies. Therefore this\n    // copy cannot throw. If we ever supported this then we must handle\n    // exceptions and side-effects. We don't support symbols so they won't\n    // be transferred.\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n  }\n\n  return to;\n}\n\nmodule.exports = assign;","map":{"version":3,"sources":["C:/Users/icom/myProjects/DNA/react app/dna/node_modules/react-holder/node_modules/react/lib/Object.assign.js"],"names":["assign","target","sources","TypeError","to","Object","hasOwnProperty","prototype","nextIndex","arguments","length","nextSource","from","key","call","module","exports"],"mappings":"AAAA;;;;;;;;;;AAWA;AAEA;;AAEA,SAASA,MAAT,CAAgBC,MAAhB,EAAwBC,OAAxB,EAAiC;AAC/B,MAAID,MAAM,IAAI,IAAd,EAAoB;AAClB,UAAM,IAAIE,SAAJ,CAAc,kDAAd,CAAN;AACD;;AAED,MAAIC,EAAE,GAAGC,MAAM,CAACJ,MAAD,CAAf;AACA,MAAIK,cAAc,GAAGD,MAAM,CAACE,SAAP,CAAiBD,cAAtC;;AAEA,OAAK,IAAIE,SAAS,GAAG,CAArB,EAAwBA,SAAS,GAAGC,SAAS,CAACC,MAA9C,EAAsDF,SAAS,EAA/D,EAAmE;AACjE,QAAIG,UAAU,GAAGF,SAAS,CAACD,SAAD,CAA1B;;AACA,QAAIG,UAAU,IAAI,IAAlB,EAAwB;AACtB;AACD;;AAED,QAAIC,IAAI,GAAGP,MAAM,CAACM,UAAD,CAAjB,CANiE,CAQjE;AACA;AACA;AACA;;AAEA,SAAK,IAAIE,GAAT,IAAgBD,IAAhB,EAAsB;AACpB,UAAIN,cAAc,CAACQ,IAAf,CAAoBF,IAApB,EAA0BC,GAA1B,CAAJ,EAAoC;AAClCT,QAAAA,EAAE,CAACS,GAAD,CAAF,GAAUD,IAAI,CAACC,GAAD,CAAd;AACD;AACF;AACF;;AAED,SAAOT,EAAP;AACD;;AAEDW,MAAM,CAACC,OAAP,GAAiBhB,MAAjB","sourcesContent":["/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Object.assign\n */\n\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign\n\n'use strict';\n\nfunction assign(target, sources) {\n  if (target == null) {\n    throw new TypeError('Object.assign target cannot be null or undefined');\n  }\n\n  var to = Object(target);\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n    var nextSource = arguments[nextIndex];\n    if (nextSource == null) {\n      continue;\n    }\n\n    var from = Object(nextSource);\n\n    // We don't currently support accessors nor proxies. Therefore this\n    // copy cannot throw. If we ever supported this then we must handle\n    // exceptions and side-effects. We don't support symbols so they won't\n    // be transferred.\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n  }\n\n  return to;\n}\n\nmodule.exports = assign;"]},"metadata":{},"sourceType":"script"}